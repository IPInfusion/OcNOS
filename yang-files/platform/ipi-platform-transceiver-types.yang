/*
* Copyright (C) 2019 IP Infusion, Inc.
*  All Rights Reserved.
*
*** Auto generated by zebmdc

* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.

* File name : ipi-platform-transceiver-types.yang
*
*/

module ipi-platform-transceiver-types {

    yang-version 1.1;

    namespace   "http://www.ipinfusion.com/yang/ocnos/ipi-platform-transceiver-types";

    prefix "ipi-platform-transceiver-types";

    organization
        "IP Infusion Inc.";

    contact
        "Address: 3965 Freedom Circle, Suite 200, Santa Clara, CA 95054
         Phone: +1 408-400-1900
         E-mail: support@ipinfusion.com
         Web: http://www.ipinfusion.com/";

    description
        "YANG version of the ipi-platform-transceiver-types";


    revision "2020-12-15" {
        description "Change to have data-types in lower case instead of camel case";
        reference " 0.2.0.";
    }

    revision "2018-06-21" {
        description "Initial Version";
        reference " 0.1.0.";
    }



    typedef  ddm_transceiver_t {
        type enumeration {
            enum 1000base-sx {
                value 1;
                description "sfp 1000base-sx";
            }
            enum 1000base-lx {
                value 2;
                description "sfp 1000base-lx";
            }
            enum 1000base-ex {
                value 3;
                description "sfp 1000base-ex";
            }
            enum 1000base-cx {
                value 4;
                description "sfp 1000base-cx";
            }
            enum 10gbase-sr {
                value 5;
                description "sfp+ 10gbase-sr";
            }
            enum 10gbase-lr {
                value 6;
                description "sfp+ 10gbase-lr";
            }
            enum 10gbase-er {
                value 7;
                description "sfp+ 10gbase-er";
            }
            enum 10gbase-cr {
                value 8;
                description "sfp+ 10gbase-cr";
            }
            enum 25gbase-sr {
                value 9;
                description "sfp+ 25gbase-sr";
            }
            enum 25gbase-lr {
                value 10;
                description "sfp+ 25gbase-lr";
            }
            enum 25gbase-er {
                value 11;
                description "sfp+ 25gbase-er";
            }
            enum 25gbase-cr {
                value 12;
                description "sfp+ 25gbase-cr";
            }
            enum 40gbase-sr4 {
                value 13;
                description "qsfp 40gbase-sr4";
            }
            enum 40gbase-lr4 {
                value 14;
                description "qsfp 40gbase-lr4";
            }
            enum 40gbase-er4 {
                value 15;
                description "qsfp 40gbase-er4";
            }
            enum 40gbase-cr4 {
                value 16;
                description "qsfp 40gbase-cr4";
            }
            enum 100gbase-sr4 {
                value 17;
                description "qsfp28 100gbase-sr4";
            }
            enum 100gbase-lr4 {
                value 18;
                description "qsfp28 100gbase-lr4";
            }
            enum 100gbase-er4 {
                value 19;
                description "qsfp28 100gbase-er4";
            }
            enum 100gbase-cr4 {
                value 20;
                description "qsfp28 100gbase-cr4";
            }
        }
        description "type definition for DDM_TRANSCEIVER_T";
    }

    typedef  ddm_cmm_trans_type_t {
        type enumeration {
            enum sfp {
                value 1;
                description "trans type sfp";
            }
            enum qsfp {
                value 2;
                description "trans type qsfp";
            }
            enum xfp {
                value 3;
                description "trans type xfp";
            }
            enum pon-xfp {
                value 4;
                description "trans type pon xfp";
            }
            enum unknown {
                value 5;
                description "trans type unknown";
            }
        }
        description "type definition for DDM_CMM_TRANS_TYPE_T";
    }

    typedef  ddm_cmm_trans_presence_t {
        type enumeration {
            enum Not-Present {
                value 0;
                description "Transceiver Not present";
            }
            enum Present {
                value 1;
                description "Transceiver Present";
            }
        }
        description "type definition for DDM_CMM_TRANS_PRESENCE_T";
    }

    typedef  ddm_cmm_trans_reset_t {
        type enumeration {
            enum NA {
                value 0;
                description "Not Applicable";
            }
            enum Reset {
                value 1;
                description "In Reset";
            }
            enum Normal {
                value 2;
                description "Out of Reset";
            }
        }
        description "type definition for DDM_CMM_TRANS_RESET_T";
    }

    typedef  ddm_tx_rx_state_t {
        type enumeration {
            enum NA {
                value 0;
                description "Not Applicable";
            }
            enum off {
                value 1;
                description "off";
            }
            enum on {
                value 2;
                description "on";
            }
        }
        description "type definition for DDM_TX_RX_STATE_T";
    }

    typedef  ddm_cmm_trans_power_t {
        type enumeration {
            enum NA {
                value 0;
                description "Not Applicable";
            }
            enum Low {
                value 1;
                description "Power low";
            }
            enum High {
                value 2;
                description "Power high";
            }
        }
        description "type definition for DDM_CMM_TRANS_POWER_T";
    }

}