/*
* Copyright (C) 2019 IP Infusion, Inc.
*  All Rights Reserved.
*
*** Auto generated by zebmdc

* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.

* File name : ipi-macsec-interface.yang
*
*/

submodule ipi-macsec-interface {

    yang-version 1.1;

    belongs-to  ipi-macsec { prefix ipi-macsec; }

    import feature-list {
        prefix feature-list;
        revision-date 2023-07-13;
    }

    import ipi-interface {
        prefix ipi-interface;
        revision-date 2023-06-26;
    }

    import ietf-yang-types {
        prefix yang;
        revision-date 2013-07-15;
    }

    organization
        "IP Infusion Inc.";

    contact
        "Address: 3965 Freedom Circle, Suite 200, Santa Clara, CA 95054
         Phone: +1 408-400-1900
         E-mail: support@ipinfusion.com
         Web: http://www.ipinfusion.com/";

    description
        "Data model for MACsec Module interface";


    revision "2023-05-16" {
        description "Change macsec-ca-name under interface to if-macsec-ca to fix issue with mode change";
        reference " 0.1.4.";
    }

    revision "2023-03-06" {
        description "Add implicit_delete tag to remove interface object when macsec-ca-name is removed";
        reference " 0.1.3.";
    }

    revision "2023-02-15" {
        description "Add dependecy tag for creation/delition of macsec objects";
        reference " 0.1.2.";
    }

    revision "2023-01-05" {
        description "Change macsec-ca under interface to macsec-ca-name";
        reference " 0.1.1.";
    }

    revision "2022-11-22" {
        description "Initial Version";
        reference " 0.1.0.";
    }

    grouping macsec-interface-config {
        description
            "Connectivity Association to interface config parameters";
        leaf interface-name  {
            type  leafref {
                path  "/ipi-interface:interfaces/ipi-interface:interface/ipi-interface:name";
            }
            description "The interface name to configure the CA parameters.";
        } // END of interface-name definition.

        leaf if-macsec-ca  {
            type  leafref {
                path  "/ipi-macsec:macsec/ipi-macsec:connectivity-associations/ipi-macsec:connectivity-association/ipi-macsec:ca-name";
            }
            description "Connectivity Association name";
        } // END of if-macsec-ca definition.

    } // END of macsec-interface-config definition.
    grouping interface-macsec-statistic-security-entity-state {
        description
            "macsec interface statistic";
        leaf in-pkts-transform-error  {
            type  yang:counter32;
            description "Number of ingress packets with SA transformation errors";
        } // END of in-pkts-transform-error definition.

        leaf in-pkts-control  {
            type  yang:counter32;
            description "Number of ingress control plane packets";
        } // END of in-pkts-control definition.

        leaf in-pkts-untagged  {
            type  yang:counter32;
            description "Number of untagged ingress packets";
        } // END of in-pkts-untagged definition.

        leaf in-pkts-no-tag  {
            type  yang:counter32;
            description "Number of ingress packets with no sectag header";
        } // END of in-pkts-no-tag definition.

        leaf in-pkts-badtag  {
            type  yang:counter32;
            description "Number of ingress packets with error in sectag header";
        } // END of in-pkts-badtag definition.

        leaf in-pkts-no-sci  {
            type  yang:counter32;
            description "Number of ingress packets with no SCI";
        } // END of in-pkts-no-sci definition.

        leaf in-pkts-unknown-sci  {
            type  yang:counter32;
            description "Number of ingress packets with unknown sci";
        } // END of in-pkts-unknown-sci definition.

        leaf in-pkts-tagged-ctrl  {
            type  yang:counter32;
            description "Number of ingress macsec tagged control plane packets";
        } // END of in-pkts-tagged-ctrl definition.

        leaf out-pkts-transform-error  {
            type  yang:counter32;
            description "Number of egress packets with SA transformation errors";
        } // END of out-pkts-transform-error definition.

        leaf out-pkts-control  {
            type  yang:counter32;
            description "Number of egress control plane packets";
        } // END of out-pkts-control definition.

        leaf out-pkts-untagged  {
            type  yang:counter32;
            description "Number of untagged egress packets";
        } // END of out-pkts-untagged definition.

    } // END of interface-macsec-statistic-security-entity-state definition.
    grouping interface-macsec-statistic-secure-association-state {
        description
            "macsec interface statistic per secure association";
        leaf sa-identifier  {
            type  uint32;
            description "Association number";
        } // END of sa-identifier definition.

        leaf in-pkts-delayed  {
            type  yang:counter32;
            description "Number of ingress delayed packets";
        } // END of in-pkts-delayed definition.

        leaf in-pkts-late  {
            type  yang:counter32;
            description "Number of ingress late packets";
        } // END of in-pkts-late definition.

        leaf in-pkts-ok  {
            type  yang:counter32;
            description "Number of ingress decrypted packets";
        } // END of in-pkts-ok definition.

        leaf in-pkts-invalid  {
            type  yang:counter32;
            description "Number of ingress invalid packets";
        } // END of in-pkts-invalid definition.

        leaf in-pkts-not-valid  {
            type  yang:counter32;
            description "Number of ingress not valid packets";
        } // END of in-pkts-not-valid definition.

        leaf in-pkts-not-using-sa  {
            type  yang:counter32;
            description "Number of ingress not using SA not packets";
        } // END of in-pkts-not-using-sa definition.

        leaf in-pkts-unused-sa  {
            type  yang:counter32;
            description "Number of ingress unused SA packets";
        } // END of in-pkts-unused-sa definition.

        leaf in-pkts-unchecked  {
            type  yang:counter32;
            description "Number of ingress unchecked SA packets";
        } // END of in-pkts-unchecked definition.

        leaf in-octets-decrypted  {
            type  yang:counter32;
            description "Number of ingress decrypted octets";
        } // END of in-octets-decrypted definition.

        leaf in-octets-validated  {
            type  yang:counter32;
            description "Number of ingress validated octets";
        } // END of in-octets-validated definition.

        leaf out-pkts-encrypted-protected  {
            type  yang:counter32;
            description "Number of egress encrypted packets";
        } // END of out-pkts-encrypted-protected definition.

        leaf out-pkts-too-long  {
            type  yang:counter32;
            description "Number of egress packets to long";
        } // END of out-pkts-too-long definition.

        leaf out-pkts-sa-not-inuse  {
            type  yang:counter32;
            description "Number of egress packets with SA not inuse";
        } // END of out-pkts-sa-not-inuse definition.

        leaf out-octets-encrypted-protected  {
            type  yang:counter32;
            description "Number of egress ecnrypted octets";
        } // END of out-octets-encrypted-protected definition.

    } // END of interface-macsec-statistic-secure-association-state definition.
    grouping macsec-interface-top {
        description
            "Top level container for macsec interface";

        list interface {
            key "interface-name";
            description
                "List of macsec interfaces";
            leaf interface-name  {
                type  leafref {
                    path  "../config/interface-name";
                }
                description "The interface name to configure the macsec parameters.";
            } // END of interface-name definition.

            container config {
                description
                    "Connectivity Association config parameters";
                uses macsec-interface-config;
            } // END of config-container definition.
            container state {
                config false;
                description
                    "Connectivity Association config parameters";
                uses macsec-interface-config;
                uses interface-macsec-statistic-security-entity-state;
                uses interface-macsec-statistic-secure-association-state;
            } // END of state-container definition.
        } // End of interface-list
    } // END of macsec-interface-top definition.

    grouping  interfaces-grouping {
    description
        "Top-level container for macsec interface configuration";
    container interfaces {
        if-feature feature-list:HAVE_MACSEC;
        description
            "Top-level container for macsec interface configuration";
        uses macsec-interface-top;
    } // END of interfaces-container definition.
    } // END of interfaces-grouping definition.


}