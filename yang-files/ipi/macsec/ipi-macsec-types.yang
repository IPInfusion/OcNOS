/*
* Copyright (C) 2019 IP Infusion, Inc.
*  All Rights Reserved.
*
*** Auto generated by zebmdc

* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.

* File name : ipi-macsec-types.yang
*
*/

module ipi-macsec-types {

    yang-version 1.1;

    namespace   "http://www.ipinfusion.com/yang/ocnos/ipi-macsec-types";

    prefix "ipi-macsec-types";

    organization
        "IP Infusion Inc.";

    contact
        "Address: 3965 Freedom Circle, Suite 200, Santa Clara, CA 95054
         Phone: +1 408-400-1900
         E-mail: support@ipinfusion.com
         Web: http://www.ipinfusion.com/";

    description
        "MACsec data types";


    revision "2022-11-22" {
        description "Initial Version";
        reference " 0.1.0.";
    }



    typedef  macsec_mode_t {
        type enumeration {
            enum master {
                value 1;
                description "MACsec CA master mode";
            }
            enum slave {
                value 2;
                description "MACsec CA slave mode";
            }
        }
        description "type definition for MACSEC_MODE_T";
    }

    typedef  macsec_session_sa_mode_t {
        type enumeration {
            enum SA_MODE_INIT {
                value 0;
                description "SA in inital state";
            }
            enum TRANSMIT_SA {
                value 1;
                description "SA mode is in transmit mode";
            }
            enum RECEIVE_SA {
                value 2;
                description "SA mode is in receive mode";
            }
        }
        description "type definition for MACSEC_SESSION_SA_MODE_T";
    }

    typedef  macsec_port_number_t {
        type uint16 {
             range 0..65535;
        }
        description "The port-number type represents a 16-bit port number of an Internet
                    transport-layer protocol such as UDP, TCP, DCCP, or SCTP.";
    }

    typedef  macsec_ca_session_state_t {
        type enumeration {
            enum INIT {
                value 0;
                description "Default state";
            }
            enum CONNECTING {
                value 1;
                description "MACsec CA session connecting with KaY server";
            }
            enum CONNECTED {
                value 2;
                description "MACsec CA session connected with KaY server";
            }
            enum DISCONNECTED {
                value 3;
                description "MACsec CA session disconnected from KaY server";
            }
        }
        description "type definition for MACSEC_CA_SESSION_STATE_T";
    }

    typedef  macsec_ca_interface_association_state_t {
        type enumeration {
            enum NONE {
                value 0;
                description "Default state";
            }
            enum DISSOCIATED {
                value 1;
                description "MACsec CA Dissociated from interface";
            }
            enum ASSOCIATED {
                value 2;
                description "MACsec CA Assocaited with interface";
            }
        }
        description "type definition for MACSEC_CA_INTERFACE_ASSOCIATION_STATE_T";
    }

    typedef  macsec_sa_programming_state_t {
        type enumeration {
            enum INIT {
                value 1;
                description "Was not programmed";
            }
            enum PROGRAMMED_IN_DATA_PLANE {
                value 2;
                description "Secure Association (SA) programmed in data plane";
            }
            enum PROGRAMMED_IN_CONTROL_PLANE {
                value 3;
                description "Secure Association (SA) programmed in control plane";
            }
        }
        description "type definition for MACSEC_SA_PROGRAMMING_STATE_T";
    }

    typedef  macsec_security_mode_t {
        type enumeration {
            enum qkdc {
                value 1;
                description "Quantum Key Distribution";
            }
            enum ccp {
                value 2;
                description "Custom Control Plane";
            }
        }
        description "type definition for MACSEC_SECURITY_MODE_T";
    }

    typedef  macsec_cipher_suite_t {
        type enumeration {
            enum gcm-aes-128 {
                value 1;
                description "Quantum Key Distribution";
            }
            enum gcm-aes-256 {
                value 2;
                description "Custom Control Plane";
            }
        }
        description "type definition for MACSEC_CIPHER_SUITE_T";
    }

    typedef  macsec_transport_protocol_t {
        type enumeration {
            enum http {
                value 1;
                description "TCP transport";
            }
            enum https {
                value 2;
                description "SSL/TLS secure transport";
            }
        }
        description "type definition for MACSEC_TRANSPORT_PROTOCOL_T";
    }

}