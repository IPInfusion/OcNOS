/*
* Copyright (C) 2019 IP Infusion, Inc.
*  All Rights Reserved.
*
*** Auto generated by zebmdc

* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.

* File name : ipi-macsec.yang
*
*/

module ipi-macsec {

    yang-version 1.1;

    namespace   "http://www.ipinfusion.com/yang/ocnos/ipi-macsec";

    prefix "ipi-macsec";

    import ietf-inet-types {
        prefix inet;
        revision-date 2013-07-15;
    }

    import cml-data-types {
        prefix cml-data-types;
        revision-date 2023-03-03;
    }

    import ipi-macsec-types {
        prefix ipi-macsec-types;
        revision-date 2022-11-22;
    }

    import feature-list {
        prefix feature-list;
        revision-date 2023-07-13;
    }

    include ipi-macsec-interface { revision-date 2023-05-16;}
    organization
        "IP Infusion Inc.";

    contact
        "Address: 3965 Freedom Circle, Suite 200, Santa Clara, CA 95054
         Phone: +1 408-400-1900
         E-mail: support@ipinfusion.com
         Web: http://www.ipinfusion.com/";

    description
        "Data model for MACsec Module";


    revision "2023-05-16" {
        description "Change macsec-ca-name under interface to if-macsec-ca to fix issue with mode change";
        reference " 0.1.6.";
    }

    revision "2023-03-09" {
        description "Change port limit to allow https port configuration";
        reference " 0.1.5.";
    }

    revision "2023-03-06" {
        description "Add implicit_delete tag to remove interface object when macsec-ca-name is removed";
        reference " 0.1.4.";
    }

    revision "2023-02-24" {
        description "Add dependecy tag for creation/delition of secy and qkd security, qkd neighbour";
        reference " 0.1.3.";
    }

    revision "2023-02-15" {
        description "Add dependecy tag for creation/delition of macsec objects";
        reference " 0.1.2.";
    }

    revision "2023-01-05" {
        description "Remove connectivity association session secure association list";
        reference " 0.1.1.";
    }

    revision "2022-11-22" {
        description "Initial Version";
        reference " 0.1.0.";
    }

    grouping key-management-entity-config {
        description
            "Grouping for Key Management Entity config parameters";
        leaf kme-name  {
            type  string {
                length "1..32";
                pattern "[^?' =,>|]+";
            }
            description "Key management entity server name";
        } // END of kme-name definition.

        leaf sae-peer-name  {
            type  string {
                length "1..250";
                pattern "[^?' =,>|]+";
            }
            description "Secure application entity peer identifier, participating in MACsec
                        operation";
        } // END of sae-peer-name definition.

        leaf transport-protocol  {
            type  ipi-macsec-types:macsec_transport_protocol_t;
            default "https";
            description "Transport protocol to communicate with KME";
        } // END of transport-protocol definition.

        leaf host-address  {
            type  cml-data-types:cml_hostname_t;
            description "The host address can be IPv4/IPv6 address or hostname";
        } // END of host-address definition.

        leaf port  {
            type  ipi-macsec-types:macsec_port_number_t {
                 range "0..65535"  {
                    description "0..65535: Supported range 0 - 65535";
                 }
            }
            description "KME port to form URL";
        } // END of port definition.

    } // END of key-management-entity-config definition.
    grouping key-management-entity-top {
        description
            "Grouping for Key Management Entity top level grouping";
        container key-management-entities {
            description
                "Key Management Entity";

            list key-management-entity {
                key "kme-name";
                max-elements 1;
                description
                    "Key Management Entity list";
                leaf kme-name  {
                    type  leafref {
                        path  "../config/kme-name";
                    }
                    description "Key management entity server profile name";
                } // END of kme-name definition.

                container config {
                    description
                        "KME server config parameters";
                    uses key-management-entity-config;
                } // END of config-container definition.
                container state {
                    config false;
                    description
                        "KME server operational parameters";
                    uses key-management-entity-config;
                } // END of state-container definition.
            } // End of key-management-entity-list
        } // END of key-management-entities-container definition.
    } // END of key-management-entity-top definition.
    grouping quantum-key-distribution-transport-security-config {
        description
            "Grouping for quantum key distribution transport security configuration
                        parameters";
        leaf server-certificate-name  {
            type  string {
                length "1..511";
                pattern "[^?' =,>|]+";
            }
            description "Server Certificate to be used while establishing secure connection
                        with peer key-distribution proxy application";
        } // END of server-certificate-name definition.

        leaf server-key-name  {
            type  string {
                length "1..511";
                pattern "[^?' =,>|]+";
            }
            description "Server key to be used while establishing secure connection with peer
                        key-distribution proxy application";
        } // END of server-key-name definition.

    } // END of quantum-key-distribution-transport-security-config definition.
    grouping quantum-key-distribution-neighbour-config {
        description
            "Grouping for quantum key distribution neighbour configuration
                        parameters";
        leaf host-address  {
            type  cml-data-types:cml_hostname_t;
            description "The host address can be IPv4/IPv6 address or hostname";
        } // END of host-address definition.

        leaf port  {
            type  ipi-macsec-types:macsec_port_number_t {
                 range "1024..65535"  {
                    description "1024..65535: Supported range 1024 - 65535";
                 }
            }
            description "The port this server instance binds to";
        } // END of port definition.

    } // END of quantum-key-distribution-neighbour-config definition.
    grouping quantum-key-distribution-config {
        description
            "Grouping for quantum key distribution configuration parameters";
        leaf qkd-name  {
            type  string {
                length "1..32";
                pattern "[^?' =,>|]+";
            }
            description "quantum key distribution profile name";
        } // END of qkd-name definition.

        leaf key-management-entity  {
            type  leafref {
                path  "/macsec/key-management-entities/key-management-entity/kme-name";
            }
            description "Reference to KME configuration";
        } // END of key-management-entity definition.

        leaf host-address  {
            type  cml-data-types:cml_hostname_t;
            description "The host address can be IPv4/IPv6 address or hostname";
        } // END of host-address definition.

        leaf port  {
            type  ipi-macsec-types:macsec_port_number_t {
                 range "1024..65535"  {
                    description "1024..65535: Supported range 1024 - 65535";
                 }
            }
            description "The port this server instance binds to";
        } // END of port definition.

    } // END of quantum-key-distribution-config definition.
    grouping quantum-key-distribution-top {
        description
            "Grouping for quantum key distribution top level grouping";
        container quantum-key-distributions {
            description
                "quantum key distribution";

            list quantum-key-distribution {
                key "qkd-name";
                max-elements 1;
                description
                    "quantum key distribution list";
                leaf qkd-name  {
                    type  leafref {
                        path  "../config/qkd-name";
                    }
                    description "quantum key distribution profile name";
                } // END of qkd-name definition.

                container config {
                    description
                        "QKD server configuration parameters";
                    uses quantum-key-distribution-config;
                } // END of config-container definition.
                container state {
                    config false;
                    description
                        "QKD server operational parameters";
                    uses quantum-key-distribution-config;
                } // END of state-container definition.
                container transport-security {
                    description
                        "Server side certificates to be used in the TLS connection KaY server
                                and KaY neighbour";
                    container config {
                        description
                            "Server side certificates to be used in the TLS connection KaY server
                                    and KaY neighbour";
                        uses quantum-key-distribution-transport-security-config;
                    } // END of config-container definition.
                    container state {
                        config false;
                        description
                            "Server side certificates to be used in the TLS connection KaY server
                                    and KaY neighbour";
                        uses quantum-key-distribution-transport-security-config;
                    } // END of state-container definition.
                } // END of transport-security-container definition.
                container neighbour {
                    description
                        "KaY server neighbour participating in MACsec operation";
                    container config {
                        description
                            "QKD server neighbour configuration parameters";
                        uses quantum-key-distribution-neighbour-config;
                    } // END of config-container definition.
                    container state {
                        config false;
                        description
                            "QKD server neighbour operational parameters";
                        uses quantum-key-distribution-neighbour-config;
                    } // END of state-container definition.
                } // END of neighbour-container definition.
            } // End of quantum-key-distribution-list
        } // END of quantum-key-distributions-container definition.
    } // END of quantum-key-distribution-top definition.
    grouping security-entity-config {
        description
            "Grouping for security entity configuration parameters";
        leaf secy-name  {
            type  string {
                length "1..255";
                pattern "[^?' =,>|]+";
            }
            description "security entity profile name identifier in user readable string format";
        } // END of secy-name definition.

        leaf host-address  {
            type  cml-data-types:cml_hostname_t;
            description "Security entity (SecY) service binds to this address";
        } // END of host-address definition.

        leaf port  {
            type  ipi-macsec-types:macsec_port_number_t {
                 range "1024..65535"  {
                    description "1024..65535: Supported range 1024 - 65535";
                 }
            }
            description "Security entity (SecY) service binds to this port";
        } // END of port definition.

        leaf kay-host-address  {
            type  cml-data-types:cml_hostname_t;
            description "KaY service binds to this address";
        } // END of kay-host-address definition.

        leaf kay-port  {
            type  inet:port-number {
                 range "1024..65535"  {
                    description "1024..65535: Supported range 1024 - 65535";
                 }
            }
            description "KaY service binds to this port";
        } // END of kay-port definition.

        leaf security-mode  {
            type  ipi-macsec-types:macsec_security_mode_t;
            description "The security mode used by KaY";
        } // END of security-mode definition.

        leaf security-mode-profile  {
            type  leafref {
                path  "/macsec/quantum-key-distributions/quantum-key-distribution/qkd-name";
            }
            description "The security mode used profile used by KaY";
        } // END of security-mode-profile definition.

    } // END of security-entity-config definition.
    grouping security-entity-top {
        description
            "Grouping for security entity top level grouping";
        container security-entities {
            description
                "security entity";

            list security-entity {
                key "secy-name";
                max-elements 1;
                description
                    "security entity object list";
                leaf secy-name  {
                    type  leafref {
                        path  "../config/secy-name";
                    }
                    description "Security entity name";
                } // END of secy-name definition.

                container config {
                    description
                        "security entity configuration";
                    uses security-entity-config;
                } // END of config-container definition.
                container state {
                    config false;
                    description
                        "security entity state";
                    uses security-entity-config;
                } // END of state-container definition.
            } // End of security-entity-list
        } // END of security-entities-container definition.
    } // END of security-entity-top definition.
    grouping connectivity-association-config {
        description
            "Connectivity Association configuration parameters";
        leaf ca-name  {
            type  string {
                length "1..32";
                pattern "[^?' =,>|]+";
            }
            description "Connectivity association profile name identifier in user readable
                        string format";
        } // END of ca-name definition.

        leaf mode  {
            type  ipi-macsec-types:macsec_mode_t;
            description "Defines master/slave mode of this connectivity association";
        } // END of mode definition.

        leaf ca-identifier  {
            type  string {
                length "1..127";
                pattern "[^?' =,>|]+";
            }
            description "Connectivity association identifier to match to peer router CA";
        } // END of ca-identifier definition.

        leaf key-renewal-duration  {
            type  uint32 {
                 range "5..600"  {
                    description "5..600: Supported range 5 - 600";
                 }
            }
            units "seconds";
            description "Renew the encryption key periodically";
        } // END of key-renewal-duration definition.

        leaf cipher-suite  {
            type  ipi-macsec-types:macsec_cipher_suite_t;
            description "Cipher suite for masec dataplane encryption / decryption";
        } // END of cipher-suite definition.

        leaf secy  {
            type  leafref {
                path  "/macsec/security-entities/security-entity/secy-name";
            }
            description "Security entity (SecY) profile";
        } // END of secy definition.

    } // END of connectivity-association-config definition.
    grouping connectivity-association-session-secure-association-state {
        description
            "Connectivity Association Secure Association state parameters";
        leaf sa-identifier  {
            type  uint32;
            description "Association number";
        } // END of sa-identifier definition.

        leaf channel-identifier  {
            type  string {
                length "1..1965";
                pattern "[^?' =,>|]+";
            }
            description "Security channel identifier";
        } // END of channel-identifier definition.

        leaf secure-association-programming-state  {
            type  ipi-macsec-types:macsec_sa_programming_state_t;
            description "Indicates the programming state of the Security Association State";
        } // END of secure-association-programming-state definition.

    } // END of connectivity-association-session-secure-association-state definition.
    grouping connectivity-association-state {
        description
            "Connectivity Association to interface state parameters";
        leaf associated-interface  {
            type  string {
                length "1..1965";
                pattern "[^?' =,>|]+";
            }
            description "Interface name associated with this CA";
        } // END of associated-interface definition.

        leaf association-state  {
            type  ipi-macsec-types:macsec_ca_interface_association_state_t;
            description "This parameter value changes when the associated interface flaps";
        } // END of association-state definition.

    } // END of connectivity-association-state definition.
    grouping connectivity-association-session-state {
        description
            "Connectivity Association session state parameters";
        leaf identifer  {
            type  string {
                length "1..1965";
                pattern "[^?' =,>|]+";
            }
            description "Session identifer";
        } // END of identifer definition.

        leaf mode  {
            type  ipi-macsec-types:macsec_session_sa_mode_t;
            description "The state of Connectivity Association state machine";
        } // END of mode definition.

        leaf session-state  {
            type  ipi-macsec-types:macsec_ca_session_state_t;
            description "The state of Connectivity Association state machine";
        } // END of session-state definition.

        leaf server-host  {
            type  cml-data-types:cml_hostname_t;
            description "Server bound host";
        } // END of server-host definition.

        leaf server-port  {
            type  inet:port-number;
            description "Server bound port";
        } // END of server-port definition.

        leaf client-host  {
            type  cml-data-types:cml_hostname_t;
            description "Client connected from host";
        } // END of client-host definition.

        leaf client-port  {
            type  inet:port-number;
            description "Client connected from port";
        } // END of client-port definition.

    } // END of connectivity-association-session-state definition.
    grouping connectivity-association-send-session-top {
        description
            "State parameters of send CA session";
        container send-session {
            config false;
            description
                "Session to program egress packet encryption";
            container state {
                config false;
                description
                    "State parameters of connectivity association send session";
                uses connectivity-association-session-state;
                uses connectivity-association-session-secure-association-state;
            } // END of state-container definition.
        } // END of send-session-container definition.
    } // END of connectivity-association-send-session-top definition.
    grouping connectivity-association-receive-session-top {
        description
            "State parameters of receive CA session";
        container receive-session {
            config false;
            description
                "Session to program ingress packet decryption";
            container state {
                config false;
                description
                    "State parameters of connectivity association";
                uses connectivity-association-session-state;
                uses connectivity-association-session-secure-association-state;
            } // END of state-container definition.
        } // END of receive-session-container definition.
    } // END of connectivity-association-receive-session-top definition.
    grouping connectivity-associations-top {
        description
            "Connectivity Association Top level grouping";
        container connectivity-associations {
            description
                "Connectivity Association";

            list connectivity-association {
                key "ca-name";
                max-elements 8;
                description
                    "Connectivity Association List";
                leaf ca-name  {
                    type  leafref {
                        path  "../config/ca-name";
                    }
                    description "Connectivity Association name";
                } // END of ca-name definition.

                container config {
                    description
                        "Connectivity Association config parameters";
                    uses connectivity-association-config;
                } // END of config-container definition.
                container state {
                    config false;
                    description
                        "State parameters of connectivity association";
                    uses connectivity-association-config;
                    uses connectivity-association-state;
                } // END of state-container definition.
                uses connectivity-association-send-session-top;
                uses connectivity-association-receive-session-top;
            } // End of connectivity-association-list
        } // END of connectivity-associations-container definition.
    } // END of connectivity-associations-top definition.

    grouping  macsec-grouping {
    description
        "Top level container for macsec configurations";
    container macsec {
        if-feature feature-list:HAVE_MACSEC;
        description
            "Top level container for macsec configurations";
        uses key-management-entity-top;
        uses quantum-key-distribution-top;
        uses security-entity-top;
        uses connectivity-associations-top;
        uses interfaces-grouping;
    } // END of macsec-container definition.
    } // END of macsec-grouping definition.

    uses macsec-grouping;

}