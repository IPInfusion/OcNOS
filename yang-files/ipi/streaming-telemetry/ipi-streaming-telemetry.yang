/*
* Copyright (C) 2019 IP Infusion, Inc.
*  All Rights Reserved.
*
*** Auto generated by zebmdc

* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.

* File name : ipi-streaming-telemetry.yang
*
*/

module ipi-streaming-telemetry {

    yang-version 1.1;

    namespace   "http://www.ipinfusion.com/yang/ocnos/ipi-streaming-telemetry";

    prefix "ipi-streaming-telemetry";

    import cml-data-types {
        prefix cml-data-types;
        revision-date 2023-08-10;
    }

    import feature-list {
        prefix feature-list;
        revision-date 2023-11-04;
    }

    organization
        "IP Infusion Inc.";

    contact
        "Address: 3965 Freedom Circle, Suite 200, Santa Clara, CA 95054
         Phone: +1 408-400-1900
         E-mail: support@ipinfusion.com
         Web: http://www.ipinfusion.com/";

    description
        "Data model for management streaming telemetry configurations";


    revision "2023-10-06" {
        description "Adding client-address attr in dynamic subscription show command";
        reference " 0.1.2.";
    }

    revision "2023-08-10" {
        description "Inclusion of gnmi debug commands";
        reference " 0.1.1.";
    }

    revision "2023-04-25" {
        description "Initial version to include streaming telemetry configs";
        reference " 0.1.0.";
    }

    grouping telemetry-dial-in-sensor-path-config {
        description
            "Configuration parameters relating to the grouping of data model paths
                        comprising a sensor grouping";
        leaf path  {
            type  string {
                length "1..1965";
            }
            description "Path to a section of operational state of interest (the sensor)";
        } // END of path definition.

    } // END of telemetry-dial-in-sensor-path-config definition.
    grouping telemetry-dial-in-sensor-paths {
        description
            "Dial-in sensor path related configs";
        container sensor-paths {
            config false;
            description
                "Top level container to hold a set of sensor paths grouped together";

            list sensor-path {
                key "path";
                config false;
                description
                    "List of paths in the model which together comprise a sensor grouping";
                leaf path  {
                    type  leafref {
                        path  "../state/path";
                    }
                    description "Reference to the path of interest";
                } // END of path definition.

                container state {
                    config false;
                    description
                        "State information for a dynamic subscription's paths of interest";
                    uses telemetry-dial-in-sensor-path-config;
                } // END of state-container definition.
            } // End of sensor-path-list
        } // END of sensor-paths-container definition.
    } // END of telemetry-dial-in-sensor-paths definition.
    grouping telemetry-dial-in-subscription {
        description
            "Configuration parameters relating to the telemetry subscription";
        leaf id  {
            type  uint64;
            description "System generated identifer of the telemetry subscription";
        } // END of id definition.

        leaf client-address  {
            type  string {
                length "1..1965";
            }
            description "Dial-in subscription client address which is combination of
                        ip-address:port";
        } // END of client-address definition.

        leaf sample-interval  {
            type  uint64;
            description "Time in seconds between the device's sample of a telemetry data source";
        } // END of sample-interval definition.

        leaf encoding  {
            type  cml-data-types:cml_data_encode_t;
            description "Selection of the specific encoding or RPC framework for telemetry
                        messages to and from the network element. The encoding method controls
                        specifically the wire format of the telemetry data, and also controls
                        which RPC framework may be in use to exchange telemetry data";
        } // END of encoding definition.

    } // END of telemetry-dial-in-subscription definition.
    grouping streaming-telemetry-dial-in-top {
        description
            "Dynamic subscriptions Info";
        container dynamic-subscriptions {
            config false;
            description
                "This container holds information relating to dynamic telemetry
                        subscriptions";

            list dynamic-subscription {
                key "id";
                config false;
                description
                    "List representation of telemetry subscriptions that are configured via
                                an inline RPC, otherwise known as dynamic telemetry subscriptions";
                leaf id  {
                    type  leafref {
                        path  "../state/id";
                    }
                    description "System generated identifer of the telemetry subscription";
                } // END of id definition.

                container state {
                    config false;
                    description
                        "State information relating to dynamic telemetry subscriptions";
                    uses telemetry-dial-in-subscription;
                } // END of state-container definition.
                uses telemetry-dial-in-sensor-paths;
            } // End of dynamic-subscription-list
        } // END of dynamic-subscriptions-container definition.
    } // END of streaming-telemetry-dial-in-top definition.
    grouping telemetry-debug-options {
        description
            "Parameters related to debug";
        leaf gnmi-debug  {
            when " /ipi-streaming-telemetry:telemetry-system/ipi-streaming-telemetry:streaming-telemetry/ipi-streaming-telemetry:config/ipi-streaming-telemetry:feature-enabled ";
            type  empty;
            description "Enable or Disable device's debug telemetry";
        } // END of gnmi-debug definition.

        leaf gnmi-severity  {
            // when " ipi-streaming-telemetry:telemetry-system/streaming-telemetry/debug/config/gnmi-debug ";
            type  cml-data-types:cml_gnmi_debug_severity_t;
            default "error";
            description "device's debug telemetry severity level";
        } // END of gnmi-severity definition.

    } // END of telemetry-debug-options definition.
    grouping streaming-telemetry-debug {
        description
            "Configuration objects related to debigging";
        container debug {
            description
                "Container for debug related configurations";
            container config {
                description
                    "Config container for debug options";
                uses telemetry-debug-options;
            } // END of config-container definition.
            container state {
                config false;
                description
                    "state container for debug options";
                uses telemetry-debug-options;
            } // END of state-container definition.
        } // END of debug-container definition.
    } // END of streaming-telemetry-debug definition.
    grouping streaming-telemetry-feature-config {
        description
            "Configuration parameters related to streaming telemetry";
        leaf feature-enabled  {
            type  empty;
            description "Enable or Disable device's telemetry system";
        } // END of feature-enabled definition.

    } // END of streaming-telemetry-feature-config definition.
    grouping streaming-telemetry-top {
        description
            "Top level grouping for streaming telemetry configuration and
                        operational state data";
        container streaming-telemetry {
            description
                "Top level container for enable or disable telemetry configurations";
            container config {
                description
                    "Configuration parameters related to streaming telemetry enable or
                            disable";
                uses streaming-telemetry-feature-config;
            } // END of config-container definition.
            container state {
                config false;
                description
                    "state information related to streaming telemetry enable or disable";
                uses streaming-telemetry-feature-config;
            } // END of state-container definition.
            uses streaming-telemetry-debug;
        } // END of streaming-telemetry-container definition.
    } // END of streaming-telemetry-top definition.

    grouping  telemetry-system-grouping {
    description
        "Top level container for device's streaming telemetry configurations";
    container telemetry-system {
        if-feature feature-list:HAVE_CMLD;
        if-feature feature-list:HAVE_TELEMETRY;
        description
            "Top level container for device's streaming telemetry configurations";
        uses streaming-telemetry-top;
        uses streaming-telemetry-dial-in-top;
    } // END of telemetry-system-container definition.
    } // END of telemetry-system-grouping definition.

    uses telemetry-system-grouping;

}