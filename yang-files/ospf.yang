/*
* Copyright (C) 2016 IP Infusion, Inc. 
*  All Rights Reserved.
*
*** Auto generated by zebmdc

* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.

* File name : ospf.yang
*
*/

submodule ospf {

    belongs-to  ZebOS { prefix ZebOS; }
    include interface;
    include vrf;


    import cml_data_types {
        prefix cml_data_types;
    }

    import feature_list {
        prefix feature_list;
    }

    description
        "Layer-3 ospf configurations";


    revision "2016-08-10" {
        description "Revisied on 2016-08-10.";
    }



    grouping ospf-grouping {
        list ospf {
             
            description
                "ospf";

            config true;
            key "ospfProcessId";

            
            leaf vrId  {
                type  cml_data_types:CML_UINT32_T;  
                default "0";
                config true;
            } // END of vrId definition.

            leaf ospfProcessId  {
                type  cml_data_types:CML_INT32_T {
                     range "0..65535";
                }
                config true;
            } // END of ospfProcessId definition.

            leaf vrfName  {
                mandatory true;
                type  cml_data_types:CML_STRING_T;  
                config true;
            } // END of vrfName definition.

            leaf ospfShutDown  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of ospfShutDown definition.

            leaf domainType  {
                type  cml_data_types:CML_OSPF_DOMAIN_TYPE_T;  
                config true;
            } // END of domainType definition.

            leaf nullDomainValue  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
                description "domain-id";
            } // END of nullDomainValue definition.

            leaf domainValue  {
                type  cml_data_types:CML_INT32_T;  
                config true;
            } // END of domainValue definition.

            leaf isPrimaryDomainId  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of isPrimaryDomainId definition.

            leaf isPassiveIfDefault  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of isPassiveIfDefault definition.

            leaf areaBorderType  {
                type  cml_data_types:CML_OSPF_ABR_TYPE_T;  
                default "cisco";
                config true;
            } // END of areaBorderType definition.

            leaf spfStartDelay  {
                type  cml_data_types:CML_UINT32_T;  
                config true;
            } // END of spfStartDelay definition.

            leaf spfMinDelay  {
                type  cml_data_types:CML_UINT32_T {
                     range "0..2147483647";
                }
                default "500";
                config true;
            } // END of spfMinDelay definition.

            leaf spfMaxDelay  {
                type  cml_data_types:CML_UINT32_T {
                     range "0..2147483647";
                }
                default "5000";
                config true;
                description "timers spf exp";
            } // END of spfMaxDelay definition.

            leaf throttleTimersStartDelay  {
                type  cml_data_types:CML_UINT32_T {
                     range "0..600000";
                }
                default "0";
                config true;
            } // END of throttleTimersStartDelay definition.

            leaf holdInterval  {
                type  cml_data_types:CML_UINT32_T {
                     range "1..600000";
                }
                default "5000";
                config true;
            } // END of holdInterval definition.

            leaf throttleTimersMaxDelay  {
                type  cml_data_types:CML_UINT32_T {
                     range "1..600000";
                }
                default "5000";
                config true;
                description "timers throttle lsa";
            } // END of throttleTimersMaxDelay definition.

            leaf lsaMinArrival  {
                type  cml_data_types:CML_UINT32_T {
                     range "0..600000";
                }
                default "1";
                config true;
            } // END of lsaMinArrival definition.

            leaf referenceBandwidth  {
                type  cml_data_types:CML_INT32_T {
                     range "1..4294967";
                }
                default "100000";
                config true;
            } // END of referenceBandwidth definition.

            leaf maxDBDescriptor  {
                type  cml_data_types:CML_UINT16_T {
                     range "1..65535";
                }
                default "5000";
                config true;
            } // END of maxDBDescriptor definition.

            leaf maxUnusePackets  {
                type  cml_data_types:CML_UINT32_T {
                     range "0..65535";
                }
                default "200";
                config true;
            } // END of maxUnusePackets definition.

            leaf maxLsaPacket  {
                type  cml_data_types:CML_UINT32_T {
                     range "0..65535";
                }
                default "200";
                config true;
            } // END of maxLsaPacket definition.

            leaf lsdbExternalLimit  {
                type  cml_data_types:CML_UINT32_T {
                     range "0..2147483647";
                }
                default "100000";
                config true;
            } // END of lsdbExternalLimit definition.

            leaf exitOverflowInterval  {
                type  cml_data_types:CML_INT32_T {
                     range "0..65535";
                }
                default "0";
                config true;
                description "overflow database external";
            } // END of exitOverflowInterval definition.

            leaf metricValue  {
                type  cml_data_types:CML_INT32_T {
                     range "1..16777214";
                }
                default "2";
                config true;
            } // END of metricValue definition.

            leaf adminDistance  {
                type  cml_data_types:CML_INT32_T {
                     range "1..255";
                }
                default "110";
                config true;
                description "admin distance";
            } // END of adminDistance definition.

            leaf restartMethod  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of restartMethod definition.

            leaf restartMethodLls  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of restartMethodLls definition.

            leaf logAdjacencyDebugType  {
                type  cml_data_types:CML_STRING_T;  
                default "breif";
                config true;
            } // END of logAdjacencyDebugType definition.

            leaf maxAreaLimit  {
                type  cml_data_types:CML_UINT32_T {
                     range "1..4294967294";
                }
                config true;
            } // END of maxAreaLimit definition.

            leaf trapFlagBit  {
                type  cml_data_types:CML_INT32_T;  
                config true;
            } // END of trapFlagBit definition.

            leaf bandwidthType  {
                type  cml_data_types:CML_STRING_T;  
                config true;
            } // END of bandwidthType definition.

            leaf lsdbLimit  {
                type  cml_data_types:CML_UINT32_T {
                     range "0..4294967294";
                }
                default "0";
                config true;
            } // END of lsdbLimit definition.

            leaf actionType  {
                type  cml_data_types:CML_OSPF_ACTION_TYPE_T;  
                default "soft";
                config true;
            } // END of actionType definition.

            leaf isLsdbLimit  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
                description "overflow database";
            } // END of isLsdbLimit definition.

            leaf tieBreakField  {
                type  cml_data_types:CML_STRING_T;  
                default "random";
                config true;
            } // END of tieBreakField definition.

            leaf cspfTieBreakField  {
                type  cml_data_types:CML_STRING_T;  
                default "random";
                config true;
            } // END of cspfTieBreakField definition.

            leaf retryInterval  {
                type  cml_data_types:CML_UINT16_T {
                     range "1..3600";
                }
                default "1";
                config true;
            } // END of retryInterval definition.

            leaf cspfRetryInterval  {
                type  cml_data_types:CML_UINT16_T {
                     range "1..3600";
                }
                default "1";
                config true;
            } // END of cspfRetryInterval definition.

            leaf isCompitableRfc1583  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of isCompitableRfc1583 definition.

            leaf checkCompatibleRfc1583  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of checkCompatibleRfc1583 definition.

            leaf isCSPF  {
                if-feature feature_list:HAVE_OSPF_CSPF;
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of isCSPF definition.

            leaf isEnableCSPF  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of isEnableCSPF definition.

            leaf isTE  {
                if-feature feature_list:HAVE_OSPF_TE;
                type  cml_data_types:CML_BOOL_T;  
                config true;
                description "capability te/traffic-engineering";
            } // END of isTE definition.

            leaf isEnableTE  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of isEnableTE definition.

            leaf isOpaqueLsa  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
                description "capability opaque";
            } // END of isOpaqueLsa definition.

            leaf checkOpaqueLsa  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
                description "opaque-lsa-capable";
            } // END of checkOpaqueLsa definition.

            leaf refreshTimer  {
                type  cml_data_types:CML_UINT32_T {
                     range "10..1800";
                }
                default "10";
                config true;
            } // END of refreshTimer definition.

            leaf dbSummaryOpt  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of dbSummaryOpt definition.

            leaf capabilityVrfLite  {
                if-feature feature_list:HAVE_VRF_OSPF;
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of capabilityVrfLite definition.

            leaf accessListName  {
                type  cml_data_types:CML_STRING_T;  
                config true;
            } // END of accessListName definition.

            leaf-list routeSourceDistType  {
                type  cml_data_types:CML_OSPF_DIST_ROUTE_SOURCE_TYPE_T;  
                config true;
                description "distribute-list";
            } // END of routeSourceDistType definition.

            leaf-list secondaryOspfProcId  {
                type  cml_data_types:CML_INT32_T {
                     range "1..65535";
                }
                config true;
                description "distribute-list ospf";
            } // END of secondaryOspfProcId definition.

            leaf isDistributeListIn  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
                description "distribute-list";
            } // END of isDistributeListIn definition.

            leaf opaqueAsDesc  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of opaqueAsDesc definition.

            leaf opaqueAsIfName  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of opaqueAsIfName definition.

            leaf opaqueAsAdvRouter  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of opaqueAsAdvRouter definition.

            leaf opaqueAsType  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of opaqueAsType definition.

            leaf opaqueAsId  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of opaqueAsId definition.

            leaf opaqueAsLength  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of opaqueAsLength definition.

            leaf opaqueAreaDesc  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of opaqueAreaDesc definition.

            leaf opaqueAreaIfName  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of opaqueAreaIfName definition.

            leaf opaqueAreaAdvRouter  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of opaqueAreaAdvRouter definition.

            leaf opaqueAreaType  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of opaqueAreaType definition.

            leaf opaqueAreaId  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of opaqueAreaId definition.

            leaf opaqueAreaLength  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of opaqueAreaLength definition.

            leaf opaqueLinkDesc  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of opaqueLinkDesc definition.

            leaf opaqueLinkIfName  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of opaqueLinkIfName definition.

            leaf opaqueLinkAdvRouter  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of opaqueLinkAdvRouter definition.

            leaf opaqueLinkType  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of opaqueLinkType definition.

            leaf opaqueLinkId  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of opaqueLinkId definition.

            leaf opaqueLinkLength  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of opaqueLinkLength definition.

            leaf teUnResBWState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of teUnResBWState definition.

            leaf teUnResBWPrio  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of teUnResBWPrio definition.

            leaf teResourceColorState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of teResourceColorState definition.

            leaf teResourceColorVal  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of teResourceColorVal definition.

            leaf teRemoteId  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of teRemoteId definition.

            leaf teLocalId  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of teLocalId definition.

            leaf teLinkLocalRemoteIdState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of teLinkLocalRemoteIdState definition.

            leaf teLinkSwitchCapState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of teLinkSwitchCapState definition.

            leaf teSwitchCap  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of teSwitchCap definition.

            leaf teEncodeType  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of teEncodeType definition.

            leaf teMaxLspBWPriCount  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of teMaxLspBWPriCount definition.

            leaf teMaxLspBWPri  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of teMaxLspBWPri definition.

            leaf teMinLspBW  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of teMinLspBW definition.

            leaf teCapMtu  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of teCapMtu definition.

            leaf teRiskGrpState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of teRiskGrpState definition.

            leaf teProtectionState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of teProtectionState definition.

            leaf teProtectionType  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of teProtectionType definition.

            leaf teRiskGrpVal  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of teRiskGrpVal definition.

            leaf vrfIfName  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of vrfIfName definition.

            leaf vrfIvName  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of vrfIvName definition.

            leaf igpShortcutDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of igpShortcutDetail definition.

            leaf igpShortcutLspDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of igpShortcutLspDetail definition.

            leaf lspP2mpId  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of lspP2mpId definition.

            leaf lspId  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of lspId definition.

            leaf lspIngress  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lspIngress definition.

            leaf lspEgress  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lspEgress definition.

            leaf lspExTunnelId  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lspExTunnelId definition.

            leaf lspType  {
                type  cml_data_types:CML_UINT8_T;  
                config false;
            } // END of lspType definition.

            leaf lspClientId  {
                type  cml_data_types:CML_UINT8_T;  
                config false;
            } // END of lspClientId definition.

            leaf lspState  {
                type  cml_data_types:CML_UINT8_T;  
                config false;
            } // END of lspState definition.

            leaf lspSetupPri  {
                type  cml_data_types:CML_UINT8_T;  
                config false;
            } // END of lspSetupPri definition.

            leaf lspHoldPri  {
                type  cml_data_types:CML_UINT8_T;  
                config false;
            } // END of lspHoldPri definition.

            leaf lspBidirectionalStatus  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of lspBidirectionalStatus definition.

            leaf lspBandwidth  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lspBandwidth definition.

            leaf lspBWStat  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of lspBWStat definition.

            leaf lspHopLimit  {
                type  cml_data_types:CML_UINT8_T;  
                config false;
            } // END of lspHopLimit definition.

            leaf lspAdmControl  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lspAdmControl definition.

            leaf lspIncludeMask  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of lspIncludeMask definition.

            leaf lspExcludeMask  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of lspExcludeMask definition.

            leaf lspAttrRetry  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of lspAttrRetry definition.

            leaf lspRetryInt  {
                type  cml_data_types:CML_UINT16_T;  
                config false;
            } // END of lspRetryInt definition.

            leaf lspRetryLimit  {
                type  cml_data_types:CML_UINT16_T;  
                config false;
            } // END of lspRetryLimit definition.

            leaf lspTeMetric  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of lspTeMetric definition.

            leaf lspPathStat  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of lspPathStat definition.

            leaf lspPathDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lspPathDetail definition.

            leaf lspExcludePathStat  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of lspExcludePathStat definition.

            leaf lspExcludePathDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lspExcludePathDetail definition.

            leaf lspSwitchCapStat  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of lspSwitchCapStat definition.

            leaf lspSwitchCapEncodeType  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lspSwitchCapEncodeType definition.

            leaf lspSwitchCap  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lspSwitchCap definition.

            leaf lspProtectionRev  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lspProtectionRev definition.

            leaf lspProtectionFwd  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lspProtectionFwd definition.

            leaf lspAttrProtectionStat  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of lspAttrProtectionStat definition.

            leaf lspRouteStat  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of lspRouteStat definition.

            leaf lspRouteDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lspRouteDetail definition.

            leaf lspSrlgDetail  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of lspSrlgDetail definition.

            leaf lspSrlgStat  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of lspSrlgStat definition.

            leaf multiAreaIfName  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiAreaIfName definition.

            leaf multiAreaNbrAddr  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiAreaNbrAddr definition.

            leaf isMultiIpv4Num  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of isMultiIpv4Num definition.

            leaf multiIdentAddr  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiIdentAddr definition.

            leaf multiAreaDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiAreaDetail definition.

            leaf multiMtuVal  {
                type  cml_data_types:CML_INT8_T;  
                config false;
            } // END of multiMtuVal definition.

            leaf multiNetworkMsg  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiNetworkMsg definition.

            leaf multiOutputCost  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of multiOutputCost definition.

            leaf transmitInt  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of transmitInt definition.

            leaf multiTransmitState  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiTransmitState definition.

            leaf multiTeMetric  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of multiTeMetric definition.

            leaf dbFilterGetState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of dbFilterGetState definition.

            leaf multiHelloInt  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of multiHelloInt definition.

            leaf multiDeadInt  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of multiDeadInt definition.

            leaf multiRetransmitInt  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of multiRetransmitInt definition.

            leaf restartMethodTypeState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of restartMethodTypeState definition.

            leaf restartOOBResyncTimeout  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of restartOOBResyncTimeout definition.

            leaf multiIfTypeLoopbackState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of multiIfTypeLoopbackState definition.

            leaf ifPassiveState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of ifPassiveState definition.

            leaf multiHelloTimeDueIn  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiHelloTimeDueIn definition.

            leaf multiNbrCountAll  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of multiNbrCountAll definition.

            leaf multiAdjacentNbrCountAll  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of multiAdjacentNbrCountAll definition.

            leaf multiCrypto  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of multiCrypto definition.

            leaf multiHelloPacketDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiHelloPacketDetail definition.

            leaf multiLSReqDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiLSReqDetail definition.

            leaf multiLSAckDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiLSAckDetail definition.

            leaf teDBRTAddrLsaAge  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of teDBRTAddrLsaAge definition.

            leaf teDBLinkLsaAge  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of teDBLinkLsaAge definition.

            leaf teOpaqueType  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of teOpaqueType definition.

            leaf teLsaHeaderTypeMsg  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of teLsaHeaderTypeMsg definition.

            leaf teLsaHeaderType  {
                type  cml_data_types:CML_UINT8_T;  
                config false;
            } // END of teLsaHeaderType definition.

            leaf teLsaOptions  {
                type  cml_data_types:CML_UINT8_T;  
                config false;
            } // END of teLsaOptions definition.

            leaf teInstance  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of teInstance definition.

            leaf teAdvrRouter  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of teAdvrRouter definition.

            leaf teLSSeqNum  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of teLSSeqNum definition.

            leaf teLSChecksum  {
                type  cml_data_types:CML_UINT16_T;  
                config false;
            } // END of teLSChecksum definition.

            leaf teLength  {
                type  cml_data_types:CML_UINT16_T;  
                config false;
            } // END of teLength definition.

            leaf teRouterState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of teRouterState definition.

            leaf teRouterAddr  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of teRouterAddr definition.

            leaf teLinkTypeState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of teLinkTypeState definition.

            leaf teLinkType  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of teLinkType definition.

            leaf teLinkIdState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of teLinkIdState definition.

            leaf teLinkId  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of teLinkId definition.

            leaf teLocalInterfaceState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of teLocalInterfaceState definition.

            leaf teLocalInterfaceAddr  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of teLocalInterfaceAddr definition.

            leaf teRemoteInterfaceState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of teRemoteInterfaceState definition.

            leaf teRemoteInterfaceAddr  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of teRemoteInterfaceAddr definition.

            leaf teLinkMetricState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of teLinkMetricState definition.

            leaf teLinkMetric  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of teLinkMetric definition.

            leaf teMaxResBWState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of teMaxResBWState definition.

            leaf teMaxResBW  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of teMaxResBW definition.

            leaf teMaxBWState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of teMaxBWState definition.

            leaf teMaxBW  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of teMaxBW definition.

            leaf teLinkAttrBc  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of teLinkAttrBc definition.

            leaf teBWConsModel  {
                type  cml_data_types:CML_UINT8_T;  
                config false;
            } // END of teBWConsModel definition.

            leaf teBWCons  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of teBWCons definition.

            leaf teBWCtr  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of teBWCtr definition.

            leaf ibufSize  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of ibufSize definition.

            leaf lsaunuseCount  {
                type  cml_data_types:CML_UINT16_T;  
                config false;
            } // END of lsaunuseCount definition.

            leaf lsaunuseMax  {
                type  cml_data_types:CML_UINT16_T;  
                config false;
            } // END of lsaunuseMax definition.

            leaf opunuseMax  {
                type  cml_data_types:CML_UINT16_T;  
                config false;
            } // END of opunuseMax definition.

            leaf opunuseCount  {
                type  cml_data_types:CML_UINT16_T;  
                config false;
            } // END of opunuseCount definition.

            leaf obufSize  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of obufSize definition.

            leaf lbufSize  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of lbufSize definition.

            leaf abrDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of abrDetail definition.

            leaf asbrDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of asbrDetail definition.

            leaf isOspfPathTypeTwo  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of isOspfPathTypeTwo definition.

            leaf isOspfPathDiscard  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of isOspfPathDiscard definition.

            leaf isOspfNextHopCon  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of isOspfNextHopCon definition.

            leaf isOspfPathCodeArea  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of isOspfPathCodeArea definition.

            leaf ospfPathAreaDetails  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of ospfPathAreaDetails definition.

            leaf ospfPathIfName  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of ospfPathIfName definition.

            leaf ospfPathNbrId  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of ospfPathNbrId definition.

            leaf ospfPathCodeStr  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of ospfPathCodeStr definition.

            leaf ospfPathCodeNStr  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of ospfPathCodeNStr definition.

            leaf ospfPathCodePrefix  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of ospfPathCodePrefix definition.

            leaf ospfPathCodeCostPrefix  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of ospfPathCodeCostPrefix definition.

            leaf areaCount  {
                type  cml_data_types:CML_INT8_T;  
                config false;
            } // END of areaCount definition.

            leaf vrfNameStat  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of vrfNameStat definition.

            leaf lttMaxDelayMic  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lttMaxDelayMic definition.

            leaf lttHoldIntMic  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lttHoldIntMic definition.

            leaf lttStartDelayMic  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lttStartDelayMic definition.

            leaf lttArivalDelayMic  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lttArivalDelayMic definition.

            leaf abrType  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of abrType definition.

            leaf isAbrType  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of isAbrType definition.

            leaf lttArivalDelay  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lttArivalDelay definition.

            leaf lttMaxDelay  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lttMaxDelay definition.

            leaf lttHoldInt  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lttHoldInt definition.

            leaf lttStartDelay  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lttStartDelay definition.

            leaf maxSpfDelay  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of maxSpfDelay definition.

            leaf minSpfDelay  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of minSpfDelay definition.

            leaf processUpTime  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of processUpTime definition.

            leaf restartMethodType  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of restartMethodType definition.

            leaf dbOverFlow  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of dbOverFlow definition.

            leaf tOverFlowExit  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of tOverFlowExit definition.

            leaf ddReceived  {
                type  cml_data_types:CML_UINT16_T;  
                config false;
            } // END of ddReceived definition.

            leaf outDdSent  {
                type  cml_data_types:CML_UINT16_T;  
                config false;
            } // END of outDdSent definition.

            leaf externalLsaCount  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of externalLsaCount definition.

            leaf externalLsaChecksum  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of externalLsaChecksum definition.

            leaf nonDefaultExternalLsa  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of nonDefaultExternalLsa definition.

            leaf isLsdbLimitR  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of isLsdbLimitR definition.

            leaf isLsdbExtLimit  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of isLsdbExtLimit definition.

            leaf isVrfEnabled  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of isVrfEnabled definition.

            leaf asbrType  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of asbrType definition.

            leaf lsdbExtLimit  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lsdbExtLimit definition.

            leaf restartType  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of restartType definition.

            leaf lsdbLimitR  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lsdbLimitR definition.

            leaf lsaOriginateCount  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lsaOriginateCount definition.

            leaf refreshInterval  {
                type  cml_data_types:CML_INT16_T;  
                config false;
            } // END of refreshInterval definition.

            leaf rxLsaCount  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of rxLsaCount definition.

            leaf distanceAccessListName  {
                type  cml_data_types:CML_STRING_T;  
                config true;
                description "distance Access List Name";
            } // END of distanceAccessListName definition.

            leaf sourceIpAddr  {
                type  cml_data_types:CML_IPV4_PREFIX_T;  
                config true;
            } // END of sourceIpAddr definition.

            leaf isAllDistance  {
                type  cml_data_types:CML_INT32_T {
                     range "1..255";
                }
                config true;
            } // END of isAllDistance definition.

            leaf routerId  {
                type  cml_data_types:CML_IPV4_ADDR_T;  
                config true;
            } // END of routerId definition.

            leaf ospfRouterId  {
                type  cml_data_types:CML_IPV4_ADDR_T;  
                config true;
            } // END of ospfRouterId definition.

            leaf isLogAdjSet  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
                description "log-adjacency-changes";
            } // END of isLogAdjSet definition.

            leaf isFrrSet  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of isFrrSet definition.

            leaf isDna  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of isDna definition.

            leaf cspfProctectionType  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of cspfProctectionType definition.

            leaf isBfdIfSet  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of isBfdIfSet definition.

            leaf mlinkNbr  {
                type  cml_data_types:CML_STRING_T;  
                config true;
            } // END of mlinkNbr definition.


            list passiveIf {
                 
                description
                    "passiveIf";

                config true;
                key "passiveIfName";

                
                leaf passiveIfName  {
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of passiveIfName definition.

                leaf passiveIfIpAddr  {
                    mandatory true;
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of passiveIfIpAddr definition.

            } // End of passiveIf-list

            list noPassiveIfRun {
                 
                description
                    "noPassiveIfRun";

                config false;
                key "noPassiveIfName";

                
                leaf noPassiveIfName  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of noPassiveIfName definition.

                leaf noPassiveIfIpAddr  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of noPassiveIfIpAddr definition.

            } // End of noPassiveIfRun-list

            list ospfDefaultInformation {
                 
                description
                    "ospfDefaultInformation";

                config true;
                key "defaultOrigin";

                
                leaf defaultOrigin  {
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                    description "default-information originate";
                } // END of defaultOrigin definition.

                leaf defaultAlways  {
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of defaultAlways definition.

                leaf defaultMetric  {
                    type  cml_data_types:CML_INT32_T {
                         range "0..16777214";
                    }
                    default "0";
                    config true;
                } // END of defaultMetric definition.

                leaf defaultMetricType  {
                    type  cml_data_types:CML_OSPF_METRIC_TYPE_T;  
                    default "2";
                    config true;
                } // END of defaultMetricType definition.

                leaf redistRouteMapName  {
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of redistRouteMapName definition.

            } // End of ospfDefaultInformation-list

            list frrTieBreak {
                 
                description
                    "frrTieBreak";

                config true;
                key "frrTieBreakVal";

                
                leaf frrTieBreakVal  {
                    type  cml_data_types:CML_OSPF_FRR_TIE_BREAK_VAL_T;  
                    config true;
                } // END of frrTieBreakVal definition.

                leaf frrTieBreakIndex  {
                    mandatory true;
                    type  cml_data_types:CML_UINT32_T {
                         range "1..10";
                    }
                    config true;
                } // END of frrTieBreakIndex definition.

                leaf isFrrPrioSet  {
                    mandatory true;
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of isFrrPrioSet definition.

            } // End of frrTieBreak-list

            list summaryAddress {
                 
                description
                    "summaryAddress";

                config true;
                key "summaryAddr";

                
                leaf summaryAddr  {
                    type  cml_data_types:CML_IPV4_PREFIX_T;  
                    config true;
                } // END of summaryAddr definition.

                leaf summaryAddrMask  {
                    mandatory true;
                    type  cml_data_types:CML_INT32_T;  
                    config true;
                } // END of summaryAddrMask definition.

                leaf summaryAddressNotAdvertise  {
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of summaryAddressNotAdvertise definition.

                leaf addressTag  {
                    type  cml_data_types:CML_UINT32_T {
                         range "0..4294967295";
                    }
                    config true;
                    description "summary-address with tag Value";
                } // END of addressTag definition.

            } // End of summaryAddress-list

            list hostAddr {
                 
                description
                    "hostAddr";

                config true;
                key "hostIpAddr";

                
                leaf hostIpAddr  {
                    type  cml_data_types:CML_IPV4_ADDR_T;  
                    config true;
                } // END of hostIpAddr definition.


                list hostArea {
                     
                    description
                        "hostArea";

                    config true;
                    key "hostAreaId";

                    
                    leaf hostAreaId  {
                        type  cml_data_types:CML_STRING_T;  
                        config true;
                        description "host Area";
                    } // END of hostAreaId definition.

                    leaf hostEntryCost  {
                        type  cml_data_types:CML_INT32_T {
                             range "0..65535";
                        }
                        config true;
                        description "host Area Cost";
                    } // END of hostEntryCost definition.

                } // End of hostArea-list
            } // End of hostAddr-list

            list area {
                 
                description
                    "area";

                config true;
                key "areaId";

                
                leaf areaId  {
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of areaId definition.

                leaf areaAuthType  {
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of areaAuthType definition.

                leaf areaAuthMsgType  {
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of areaAuthMsgType definition.

                leaf exportListName  {
                    type  cml_data_types:CML_STRING_T;  
                    default "NULL";
                    config true;
                } // END of exportListName definition.

                leaf importListName  {
                    type  cml_data_types:CML_STRING_T;  
                    default "NULL";
                    config true;
                } // END of importListName definition.

                leaf areaCost  {
                    type  cml_data_types:CML_UINT32_T {
                         range "0..16777215";
                    }
                    default "1";
                    config true;
                } // END of areaCost definition.

                leaf areaShortcutType  {
                    type  cml_data_types:CML_OSPF_AREA_SHORTCUT_TYPE_T;  
                    default "default";
                    config true;
                    description "area shortcut";
                } // END of areaShortcutType definition.

                leaf addrAggrType  {
                    type  cml_data_types:CML_INT32_T;  
                    config true;
                } // END of addrAggrType definition.

                leaf mask  {
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of mask definition.

                leaf areaAggrStatus  {
                    type  cml_data_types:CML_INT32_T;  
                    config true;
                } // END of areaAggrStatus definition.

                leaf areaAggrEffect  {
                    type  cml_data_types:CML_INT32_T;  
                    config true;
                } // END of areaAggrEffect definition.

                leaf routeTag  {
                    type  cml_data_types:CML_UINT32_T;  
                    config true;
                } // END of routeTag definition.

                leaf isAreaBackbone  {
                    type  cml_data_types:CML_BOOL_T;  
                    config false;
                } // END of isAreaBackbone definition.

                leaf isAreaActive  {
                    type  cml_data_types:CML_BOOL_T;  
                    config false;
                } // END of isAreaActive definition.

                leaf areaIdStr  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of areaIdStr definition.

                leaf areaIfCount  {
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of areaIfCount definition.

                leaf activeIfCount  {
                    type  cml_data_types:CML_UINT16_T;  
                    config false;
                } // END of activeIfCount definition.

                leaf fullVirtNbrCount  {
                    type  cml_data_types:CML_UINT16_T;  
                    config false;
                } // END of fullVirtNbrCount definition.

                leaf checkSumLsa  {
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of checkSumLsa definition.

                leaf countLsa  {
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of countLsa definition.

                leaf spfLastExec  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of spfLastExec definition.

                leaf nssaTransState  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of nssaTransState definition.

                leaf nssaTransEventCount  {
                    type  cml_data_types:CML_INT8_T;  
                    config false;
                } // END of nssaTransEventCount definition.

                leaf fullAdjacentNbr  {
                    type  cml_data_types:CML_UINT16_T;  
                    config false;
                } // END of fullAdjacentNbr definition.

                leaf spfExecutionCount  {
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of spfExecutionCount definition.


                list filterPrefixList {
                     
                    description
                        "filterPrefixList";

                    config true;
                    key "prefixName";

                    
                    leaf prefixName  {
                        type  cml_data_types:CML_STRING_T;  
                        config true;
                    } // END of prefixName definition.


                    list filterPrefixType {
                         
                        description
                            "filterPrefixType";

                        config true;
                        key "prefixType";

                        
                        leaf prefixType  {
                            type  cml_data_types:CML_OSPF_AREA_FILTER_LIST_PREFIX_T;  
                            config true;
                            description "area filter-list";
                        } // END of prefixType definition.

                    } // End of filterPrefixType-list
                } // End of filterPrefixList-list

                list filterAccessList {
                     
                    description
                        "filterAccessList";

                    config true;
                    key "accessName";

                    
                    leaf accessName  {
                        type  cml_data_types:CML_STRING_T;  
                        config true;
                    } // END of accessName definition.


                    list filterAccessType {
                         
                        description
                            "filterAccessType";

                        config true;
                        key "accessType";

                        
                        leaf accessType  {
                            type  cml_data_types:CML_OSPF_AREA_FILTER_LIST_PREFIX_T;  
                            config true;
                        } // END of accessType definition.

                    } // End of filterAccessType-list
                } // End of filterAccessList-list

                list rangeArea {
                     
                    description
                        "rangeArea";

                    config true;
                    key "ospfAreaRange";

                    
                    leaf ospfAreaRange  {
                        type  cml_data_types:CML_IPV4_PREFIX_T;  
                        config true;
                        description "ospf Area Range";
                    } // END of ospfAreaRange definition.

                    leaf isAreaRangeAdvertise  {
                        type  cml_data_types:CML_BOOL_T;  
                        config true;
                        description "area range as advertise";
                    } // END of isAreaRangeAdvertise definition.

                    leaf isAreaRangeNotAdvertise  {
                        type  cml_data_types:CML_BOOL_T;  
                        config true;
                        description "area range as not-advertise";
                    } // END of isAreaRangeNotAdvertise definition.

                    leaf substituteAddr  {
                        type  cml_data_types:CML_IPV4_PREFIX_T;  
                        config true;
                        description "area range with substitute";
                    } // END of substituteAddr definition.

                } // End of rangeArea-list

                list rangeMaskArea {
                     
                    description
                        "rangeMaskArea";

                    config true;
                    key "areaRange";

                    
                    leaf areaRange  {
                        type  cml_data_types:CML_IPV4_ADDR_T;  
                        config true;
                    } // END of areaRange definition.


                    list rangeMaskLenArea {
                         
                        description
                            "rangeMaskLenArea";

                        config true;
                        key "areaRangeMask";

                        
                        leaf areaRangeMask  {
                            type  cml_data_types:CML_IPV4_ADDR_T;  
                            config true;
                            description "area range with mask";
                        } // END of areaRangeMask definition.

                        leaf rangeMaskAdvertise  {
                            type  cml_data_types:CML_BOOL_T;  
                            config true;
                            description "area range with mask as advertise";
                        } // END of rangeMaskAdvertise definition.

                        leaf rangeMaskNotAdvertise  {
                            type  cml_data_types:CML_BOOL_T;  
                            config true;
                            description "area range with mask as not-advertise";
                        } // END of rangeMaskNotAdvertise definition.

                    } // End of rangeMaskLenArea-list
                } // End of rangeMaskArea-list

                list nssaArea {
                     
                    description
                        "nssaArea";

                    config true;
                    key "isNssaArea";

                    
                    leaf isNssaArea  {
                        type  cml_data_types:CML_BOOL_T;  
                        config true;
                    } // END of isNssaArea definition.

                    leaf nssaStabilityInterval  {
                        type  cml_data_types:CML_INT32_T {
                             range "0..2147483647";
                        }
                        default "40";
                        config true;
                    } // END of nssaStabilityInterval definition.

                    leaf nssaTranslatorRole  {
                        type  cml_data_types:CML_OSPF_TRANSLATOR_ROLE_T;  
                        config true;
                    } // END of nssaTranslatorRole definition.

                    leaf nssaDefaultOriginMetric  {
                        type  cml_data_types:CML_INT32_T {
                             range "1..16777214";
                        }
                        default "1";
                        config true;
                    } // END of nssaDefaultOriginMetric definition.

                    leaf nssaDefaultOriginMetricType  {
                        type  cml_data_types:CML_INT32_T {
                             range "1..2";
                        }
                        config true;
                    } // END of nssaDefaultOriginMetricType definition.

                    leaf isNssaNoDist  {
                        type  cml_data_types:CML_BOOL_T;  
                        config true;
                    } // END of isNssaNoDist definition.

                    leaf isNssaDefaultOriginate  {
                        type  cml_data_types:CML_BOOL_T;  
                        config true;
                    } // END of isNssaDefaultOriginate definition.

                    leaf nssaAreaNoSummary  {
                        type  cml_data_types:CML_BOOL_T;  
                        config true;
                    } // END of nssaAreaNoSummary definition.

                    leaf nssaRouteMapName  {
                        type  cml_data_types:CML_STRING_T;  
                        config true;
                    } // END of nssaRouteMapName definition.

                    container nssaAreaTranslator {
                                                config true;

                        description
                            "nssaAreaTranslator";

                        leaf nssaAreaTranslatorRole  {
                            type  cml_data_types:CML_OSPF_NSSA_TRANSLATOR_ROLE_T;  
                            config true;
                            description "area nssa";
                        } // END of nssaAreaTranslatorRole definition.

                    } // END of nssaAreaTranslator-container definition.
                } // End of nssaArea-list

                list stubArea {
                     
                    description
                        "stubArea";

                    config true;
                    key "isStubArea";

                    
                    leaf isStubArea  {
                        type  cml_data_types:CML_BOOL_T;  
                        config true;
                        description "area stub";
                    } // END of isStubArea definition.

                    leaf stubAreaNoSummary  {
                        type  cml_data_types:CML_BOOL_T;  
                        config true;
                        description "area stub no-summary";
                    } // END of stubAreaNoSummary definition.

                } // End of stubArea-list

                list vlinkArea {
                     
                    description
                        "vlinkArea";

                    config true;
                    key "peerId";

                    
                    leaf peerId  {
                        type  cml_data_types:CML_IPV4_ADDR_T;  
                        config true;
                        description "area virtual-link";
                    } // END of peerId definition.

                    leaf virtMsgDigestKeyId  {
                        type  cml_data_types:CML_UINT8_T {
                             range "0..255";
                        }
                        config true;
                    } // END of virtMsgDigestKeyId definition.

                    leaf virtMsgDigestKeyStr  {
                        type  cml_data_types:CML_STRING_T;  
                        config true;
                    } // END of virtMsgDigestKeyStr definition.

                    leaf ifVirtAuthKey  {
                        type  cml_data_types:CML_STRING_T;  
                        config true;
                    } // END of ifVirtAuthKey definition.

                    leaf virtIfRetransIntvl  {
                        type  cml_data_types:CML_INT32_T {
                             range "1..3600";
                        }
                        default "5";
                        config true;
                    } // END of virtIfRetransIntvl definition.

                    leaf ifVirtTransmitDelay  {
                        type  cml_data_types:CML_INT32_T {
                             range "1..3600";
                        }
                        default "1";
                        config true;
                    } // END of ifVirtTransmitDelay definition.

                    leaf ifVirtHelloInterval  {
                        type  cml_data_types:CML_INT32_T {
                             range "1..65535";
                        }
                        default "10";
                        config true;
                    } // END of ifVirtHelloInterval definition.

                    leaf ifVirtDeadInterval  {
                        type  cml_data_types:CML_INT32_T {
                             range "1..65535";
                        }
                        default "40";
                        config true;
                    } // END of ifVirtDeadInterval definition.

                    leaf ifVirtAuthType  {
                        type  cml_data_types:CML_OSPF_VIRT_AUTH_TYPE_T;  
                        config true;
                    } // END of ifVirtAuthType definition.

                    leaf vlinkName  {
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of vlinkName definition.

                    leaf vlinkStat  {
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of vlinkStat definition.

                    leaf vlinkInterface  {
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of vlinkInterface definition.

                    leaf vlinkIdentAddr  {
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of vlinkIdentAddr definition.

                    leaf vlinkRemoteAddr  {
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of vlinkRemoteAddr definition.

                    leaf vlinkTransDelayState  {
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of vlinkTransDelayState definition.

                    leaf vlinkHelloTimeDump  {
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of vlinkHelloTimeDump definition.

                    leaf vlinkNbrState  {
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of vlinkNbrState definition.

                    leaf isVlinkBfdSet  {
                        type  cml_data_types:CML_BOOL_T;  
                        config true;
                    } // END of isVlinkBfdSet definition.

                } // End of vlinkArea-list
            } // End of area-list

            list network {
                 
                description
                    "network";

                config true;
                key "ospfNetAddr";

                
                leaf ospfNetAddr  {
                    type  cml_data_types:CML_IPV4_PREFIX_T;  
                    config true;
                } // END of ospfNetAddr definition.


                list networkArea {
                     
                    description
                        "networkArea";

                    config true;
                    key "networkAreaId";

                    
                    leaf networkAreaId  {
                        type  cml_data_types:CML_STRING_T;  
                        config true;
                        description "network area";
                    } // END of networkAreaId definition.

                    leaf ospfInterfaceInstanceId  {
                        mandatory true;
                        type  cml_data_types:CML_INT16_T {
                             range "0..255";
                        }
                        config true;
                    } // END of ospfInterfaceInstanceId definition.

                } // End of networkArea-list
            } // End of network-list

            list networkMask {
                 
                description
                    "networkMask";

                config true;
                key "ospfNetAddrMask";

                
                leaf ospfNetAddrMask  {
                    type  cml_data_types:CML_IPV4_ADDR_T;  
                    config true;
                    description "Network Area with Mask";
                } // END of ospfNetAddrMask definition.

                leaf netMask  {
                    mandatory true;
                    type  cml_data_types:CML_IPV4_ADDR_T;  
                    config true;
                } // END of netMask definition.

                leaf networkAreaIdMask  {
                    mandatory true;
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of networkAreaIdMask definition.

                leaf ospfInterfaceInstanceIdMask  {
                    mandatory true;
                    type  cml_data_types:CML_INT16_T {
                         range "0..255";
                    }
                    config true;
                } // END of ospfInterfaceInstanceIdMask definition.

            } // End of networkMask-list

            list neighborRun {
                 
                description
                    "neighborRun";

                config false;
                key "neighborViaInterfaceName";

                
                leaf neighborViaInterfaceName  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of neighborViaInterfaceName definition.

                leaf neighborDownState  {
                    type  cml_data_types:CML_BOOL_T;  
                    config false;
                } // END of neighborDownState definition.

                leaf neighborPri  {
                    type  cml_data_types:CML_UINT8_T;  
                    config false;
                } // END of neighborPri definition.

                leaf neighborInstanceId  {
                    type  cml_data_types:CML_UINT8_T;  
                    config false;
                } // END of neighborInstanceId definition.

                leaf neighborState  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of neighborState definition.

                leaf neighborInterfaceAddress  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of neighborInterfaceAddress definition.

                leaf neighborViaInterfaceNamePvt  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of neighborViaInterfaceNamePvt definition.

                leaf neighborId  {
                    type  cml_data_types:CML_IPV4_ADDR_T;  
                    config false;
                } // END of neighborId definition.

                leaf neighborInterfaceInputAddress  {
                    type  cml_data_types:CML_IPV4_ADDR_T;  
                    config false;
                } // END of neighborInterfaceInputAddress definition.

                leaf neighborDeadTimeDueIn  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of neighborDeadTimeDueIn definition.

                leaf neighborRetransmitCount  {
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of neighborRetransmitCount definition.

                leaf neighborRequestCount  {
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of neighborRequestCount definition.

                leaf neighborDbSummaryCount  {
                    type  cml_data_types:CML_INT8_T;  
                    config false;
                } // END of neighborDbSummaryCount definition.

                leaf neighborArea  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of neighborArea definition.

                leaf neighborChangeState  {
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of neighborChangeState definition.

                leaf neighborDRouterId  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of neighborDRouterId definition.

                leaf neighborBDRouterId  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of neighborBDRouterId definition.

                leaf neighborOptions  {
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of neighborOptions definition.

                leaf neighborOptionDump  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of neighborOptionDump definition.

                leaf neighborExtendedOptions  {
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of neighborExtendedOptions definition.

                leaf neighborExtendedOptionDump  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of neighborExtendedOptionDump definition.

                leaf restartState  {
                    type  cml_data_types:CML_BOOL_T;  
                    config false;
                } // END of restartState definition.

                leaf neighborUptime  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of neighborUptime definition.

                leaf neighborOOBResyncState  {
                    type  cml_data_types:CML_BOOL_T;  
                    config false;
                } // END of neighborOOBResyncState definition.

                leaf neighborLastOOBState  {
                    type  cml_data_types:CML_BOOL_T;  
                    config false;
                } // END of neighborLastOOBState definition.

                leaf neighborTResyncState  {
                    type  cml_data_types:CML_BOOL_T;  
                    config false;
                } // END of neighborTResyncState definition.

                leaf neighborTResync  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of neighborTResync definition.

                leaf neighborOOBUptime  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of neighborOOBUptime definition.

                leaf neighborPollDueIn  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of neighborPollDueIn definition.

                leaf cryptSeqNum  {
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of cryptSeqNum definition.

                leaf neighborThreadInactivityTimer  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of neighborThreadInactivityTimer definition.

                leaf neighborThreadDBDescriptionRetransmition  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of neighborThreadDBDescriptionRetransmition definition.

                leaf neighborLsRequestRetransmition  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of neighborLsRequestRetransmition definition.

                leaf neighborLsUpdateRetransmition  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of neighborLsUpdateRetransmition definition.

                leaf neighborThreadPolltimer  {
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of neighborThreadPolltimer definition.

            } // End of neighborRun-list

            list neighbor {
                 
                description
                    "neighbor";

                config true;
                key "neighborIpAddr";

                
                leaf neighborIpAddr  {
                    type  cml_data_types:CML_IPV4_ADDR_T;  
                    config true;
                    description "Neighbor Addr";
                } // END of neighborIpAddr definition.

                leaf neighborStaticPriority  {
                    type  cml_data_types:CML_UINT8_T {
                         range "0..255";
                    }
                    default "0";
                    config true;
                } // END of neighborStaticPriority definition.

                leaf nbrPollInterval  {
                    type  cml_data_types:CML_INT32_T {
                         range "1..2147483647";
                    }
                    default "120";
                    config true;
                } // END of nbrPollInterval definition.

                leaf neighborCost  {
                    type  cml_data_types:CML_UINT16_T {
                         range "1..65535";
                    }
                    default "10";
                    config true;
                    description "neighbor area with Cost,poll-interval";
                } // END of neighborCost definition.

            } // End of neighbor-list

            list redistributeProc {
                 
                description
                    "redistributeProc";

                config true;
                key "secondaryOspfProcessId";

                
                leaf secondaryOspfProcessId  {
                    type  cml_data_types:CML_INT32_T {
                         range "1..65535";
                    }
                    config true;
                } // END of secondaryOspfProcessId definition.

                leaf redistMetricType  {
                    type  cml_data_types:CML_OSPF_METRIC_TYPE_T;  
                    default "2";
                    config true;
                } // END of redistMetricType definition.

                leaf redistMetricValue  {
                    type  cml_data_types:CML_INT32_T {
                         range "0..16777214";
                    }
                    default "0";
                    config true;
                } // END of redistMetricValue definition.

                leaf redistTag  {
                    type  cml_data_types:CML_UINT32_T {
                         range "0..4294967295";
                    }
                    default "0";
                    config true;
                } // END of redistTag definition.

                leaf routeMapName  {
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of routeMapName definition.

            } // End of redistributeProc-list

            list redistribute {
                 
                description
                    "redistribute";

                config true;
                key "routeSourceType";

                
                leaf routeSourceType  {
                    type  cml_data_types:CML_OSPF_ROUTE_SOURCE_TYPE_T;  
                    config true;
                    description "Ospf redistribute";
                } // END of routeSourceType definition.

                leaf redistMetricType  {
                    type  cml_data_types:CML_OSPF_METRIC_TYPE_T;  
                    default "2";
                    config true;
                } // END of redistMetricType definition.

                leaf redistMetricValue  {
                    type  cml_data_types:CML_INT32_T {
                         range "0..16777214";
                    }
                    default "0";
                    config true;
                } // END of redistMetricValue definition.

                leaf redistTag  {
                    type  cml_data_types:CML_UINT32_T {
                         range "0..4294967295";
                    }
                    default "0";
                    config true;
                } // END of redistTag definition.

                leaf routeMapName  {
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                    description "Ospf redistribute with metric-type,route-map";
                } // END of routeMapName definition.

            } // End of redistribute-list
            container distanceTypes {
                                config true;

                description
                    "distanceTypes";

                leaf intraAreaDistance  {
                    type  cml_data_types:CML_INT32_T {
                         range "1..255";
                    }
                    default "110";
                    config true;
                } // END of intraAreaDistance definition.

                leaf interAreaDistance  {
                    type  cml_data_types:CML_INT32_T {
                         range "1..255";
                    }
                    default "110";
                    config true;
                } // END of interAreaDistance definition.

                leaf externalDistance  {
                    type  cml_data_types:CML_INT32_T {
                         range "1..255";
                    }
                    default "110";
                    config true;
                    description "external Distance";
                } // END of externalDistance definition.

            } // END of distanceTypes-container definition.
        } // End of ospf-list
    } // END of ospf-grouping definition.


    grouping ospfInterface-grouping {
        list ospfInterface {
             
            description
                "OSPF interface related operations";

            config true;
            key "ifName";

            
            leaf ifName  {
                type  cml_data_types:CML_STRING_T;  
                config true;
            } // END of ifName definition.

            leaf ifBfdSet  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of ifBfdSet definition.

            leaf ifBfdDisable  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of ifBfdDisable definition.

            leaf holdDownTimer  {
                type  cml_data_types:CML_UINT32_T {
                     range "1..2147483";
                }
                default "70000";
                config true;
            } // END of holdDownTimer definition.

            leaf fastRerouteIfSet  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of fastRerouteIfSet definition.

            leaf ifNetworkType  {
                type  cml_data_types:CML_OSPF_NETWORK_T;  
                default "point-to-point";
                config true;
            } // END of ifNetworkType definition.

            leaf isNetworkP2mp  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of isNetworkP2mp definition.

            leaf ifAuthType  {
                type  cml_data_types:CML_OSPF_AUTH_TYPE_T;  
                default "simple";
                config true;
            } // END of ifAuthType definition.

            leaf ifAuthKeyEncryption  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of ifAuthKeyEncryption definition.

            leaf ifAuthKey  {
                type  cml_data_types:CML_STRING_T;  
                config true;
                description "ospf authentication-key with IP address of the interface.";
            } // END of ifAuthKey definition.

            leaf ifCost  {
                type  cml_data_types:CML_UINT32_T {
                     range "1..65535";
                }
                default "10";
                config true;
            } // END of ifCost definition.

            leaf ifDeadInterval  {
                type  cml_data_types:CML_UINT32_T {
                     range "1..65535";
                }
                default "40";
                config true;
            } // END of ifDeadInterval definition.

            leaf ifHelloInterval  {
                type  cml_data_types:CML_UINT32_T {
                     range "1..65535";
                }
                default "10";
                config true;
            } // END of ifHelloInterval definition.

            leaf isMtuIgnore  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of isMtuIgnore definition.

            leaf ifTransmitDelay  {
                type  cml_data_types:CML_UINT32_T {
                     range "1..3600";
                }
                default "1";
                config true;
            } // END of ifTransmitDelay definition.

            leaf ifPriority  {
                type  cml_data_types:CML_UINT8_T {
                     range "0..255";
                }
                default "1";
                config true;
            } // END of ifPriority definition.

            leaf ifRetransmitInterval  {
                type  cml_data_types:CML_UINT32_T {
                     range "1..65535";
                }
                default "5";
                config true;
            } // END of ifRetransmitInterval definition.

            leaf ifDatabaseFilter  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of ifDatabaseFilter definition.

            leaf ifMtu  {
                type  cml_data_types:CML_UINT16_T {
                     range "576..65535";
                }
                default "576";
                config true;
            } // END of ifMtu definition.

            leaf ifDisableAll  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of ifDisableAll definition.

            leaf ifTEMetric  {
                type  cml_data_types:CML_UINT32_T {
                     range "1..65535";
                }
                default "1";
                config true;
            } // END of ifTEMetric definition.

            leaf ifResyncTimeout  {
                type  cml_data_types:CML_UINT32_T {
                     range "1..65535";
                }
                default "40";
                config true;
            } // END of ifResyncTimeout definition.

            leaf ifDna  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of ifDna definition.

            leaf isIfRunning  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of isIfRunning definition.

            leaf inputIfName  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of inputIfName definition.

            leaf intName  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of intName definition.

            leaf ifIdentAddr  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of ifIdentAddr definition.

            leaf ifpCost  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of ifpCost definition.

            leaf isIpv4Unnumbered  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of isIpv4Unnumbered definition.

            leaf isIfPriStatus  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of isIfPriStatus definition.

            leaf isMultiIf  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of isMultiIf definition.

            leaf isMultiIfPriStatus  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of isMultiIfPriStatus definition.

            leaf ifAreaDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of ifAreaDetail definition.

            leaf ifProcId  {
                type  cml_data_types:CML_UINT16_T;  
                config false;
            } // END of ifProcId definition.

            leaf ifRouterId  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of ifRouterId definition.

            leaf ifIntNetworkType  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of ifIntNetworkType definition.

            leaf ifTransDelayGet  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of ifTransDelayGet definition.

            leaf ifTransDelayState  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of ifTransDelayState definition.

            leaf multiIfTeMetric  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of multiIfTeMetric definition.

            leaf ifIdentPriority  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of ifIdentPriority definition.

            leaf isLdpIgpSync  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of isLdpIgpSync definition.

            leaf isLdpIgpHoldDown  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of isLdpIgpHoldDown definition.

            leaf LdpIgpHoldDownVal  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of LdpIgpHoldDownVal definition.

            leaf isInterfaceType  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of isInterfaceType definition.

            leaf interfaceDRDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of interfaceDRDetail definition.

            leaf ifDbFilterGetState  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of ifDbFilterGetState definition.

            leaf ifHelloInt  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of ifHelloInt definition.

            leaf ifDeadInt  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of ifDeadInt definition.

            leaf ifRetransmitInt  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of ifRetransmitInt definition.

            leaf ifRestartMethodTypeState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of ifRestartMethodTypeState definition.

            leaf ifRestartOOBResyncTimeout  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of ifRestartOOBResyncTimeout definition.

            leaf ifTypeLoopbackState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of ifTypeLoopbackState definition.

            leaf ifIntPassiveState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of ifIntPassiveState definition.

            leaf ifHelloTimeDueIn  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of ifHelloTimeDueIn definition.

            leaf ifNbrCountAll  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of ifNbrCountAll definition.

            leaf ifAdjacentNbrCountAll  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of ifAdjacentNbrCountAll definition.

            leaf ifCrypto  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of ifCrypto definition.

            leaf ifHelloPacketDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of ifHelloPacketDetail definition.

            leaf ifLSReqDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of ifLSReqDetail definition.

            leaf ifLSAckDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of ifLSAckDetail definition.

            leaf intIfMtu  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of intIfMtu definition.

            leaf multiIfIdentAddr  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiIfIdentAddr definition.

            leaf multiIfpCost  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of multiIfpCost definition.

            leaf multiIsIpv4Unnumbered  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of multiIsIpv4Unnumbered definition.

            leaf multiIfAreaDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiIfAreaDetail definition.

            leaf multiIfProcId  {
                type  cml_data_types:CML_UINT16_T;  
                config false;
            } // END of multiIfProcId definition.

            leaf multiIfRouterId  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiIfRouterId definition.

            leaf multiIfNetworkType  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiIfNetworkType definition.

            leaf multiIfTransDelayGet  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of multiIfTransDelayGet definition.

            leaf multiIfTransDelayState  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiIfTransDelayState definition.

            leaf multiIfIdentPriority  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of multiIfIdentPriority definition.

            leaf isIfSyncParams  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of isIfSyncParams definition.

            leaf multiIsLdpIgpSync  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of multiIsLdpIgpSync definition.

            leaf multiIsLdpIgpHoldDown  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of multiIsLdpIgpHoldDown definition.

            leaf multiLdpIgpHoldDownVal  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiLdpIgpHoldDownVal definition.

            leaf multiIsInterfaceType  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of multiIsInterfaceType definition.

            leaf multiinterfaceDRDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiinterfaceDRDetail definition.

            leaf multiIfDbFilterGetState  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of multiIfDbFilterGetState definition.

            leaf multiIfHelloInt  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of multiIfHelloInt definition.

            leaf multiIfDeadInt  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of multiIfDeadInt definition.

            leaf multiIfRetransmitInt  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of multiIfRetransmitInt definition.

            leaf multiIfRestartMethodTypeState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of multiIfRestartMethodTypeState definition.

            leaf multiIfRestartOOBResyncTimeout  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of multiIfRestartOOBResyncTimeout definition.

            leaf multiIsIfTypeLoopbackState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of multiIsIfTypeLoopbackState definition.

            leaf multiIfIntPassiveState  {
                type  cml_data_types:CML_BOOL_T;  
                config false;
            } // END of multiIfIntPassiveState definition.

            leaf multiIfHelloTimeDueIn  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiIfHelloTimeDueIn definition.

            leaf multiIfNbrCountAll  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of multiIfNbrCountAll definition.

            leaf multiIfAdjacentNbrCountAll  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of multiIfAdjacentNbrCountAll definition.

            leaf multiIfCrypto  {
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of multiIfCrypto definition.

            leaf multiIfHelloPacketDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiIfHelloPacketDetail definition.

            leaf multiIfLSReqDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiIfLSReqDetail definition.

            leaf multiIfLSAckDetail  {
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of multiIfLSAckDetail definition.

            leaf multiIfMtu  {
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of multiIfMtu definition.


            list ospfMultiAreaIf {
                 
                description
                    "ospfMultiAreaIf";

                config true;
                key "ifOpsfProcId";

                
                leaf ifOpsfProcId  {
                    type  cml_data_types:CML_INT32_T {
                         range "0..65535";
                    }
                    config true;
                } // END of ifOpsfProcId definition.


                list ospfMultiAreaId {
                     
                    description
                        "ospfMultiAreaId";

                    config true;
                    key "ifOspfAreaId";

                    
                    leaf ifOspfAreaId  {
                        type  cml_data_types:CML_STRING_T;  
                        config true;
                    } // END of ifOspfAreaId definition.

                    leaf ifOspfNbrId  {
                        mandatory true;
                        type  cml_data_types:CML_STRING_T;  
                        config true;
                    } // END of ifOspfNbrId definition.

                } // End of ospfMultiAreaId-list
            } // End of ospfMultiAreaIf-list

            list ospfCryptKey {
                 
                description
                    "ospfCryptKey";

                config true;
                key "msgDigestKeyId";

                
                leaf msgDigestKeyId  {
                    type  cml_data_types:CML_UINT32_T {
                         range "1..255";
                    }
                    config true;
                } // END of msgDigestKeyId definition.

                leaf msgDigestKeyEncryption  {
                    mandatory true;
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of msgDigestKeyEncryption definition.

                leaf msgifAuthKey  {
                    mandatory true;
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of msgifAuthKey definition.

            } // End of ospfCryptKey-list

            list ospfInterfaceParamsAddrList {
                 
                description
                    "ospfInterfaceParamsAddrList";

                config true;
                key "ipOspfAddr";

                
                leaf ipOspfAddr  {
                    type  cml_data_types:CML_IPV4_ADDR_T;  
                    config true;
                } // END of ipOspfAddr definition.

                leaf ifAuthTypeAddr  {
                    type  cml_data_types:CML_OSPF_AUTH_TYPE_T;  
                    default "simple";
                    config true;
                } // END of ifAuthTypeAddr definition.

                leaf ifAuthKeyEncryptionAddr  {
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of ifAuthKeyEncryptionAddr definition.

                leaf ifAuthKeyAddr  {
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of ifAuthKeyAddr definition.

                leaf ifCostAddr  {
                    type  cml_data_types:CML_UINT32_T {
                         range "1..65535";
                    }
                    default "10";
                    config true;
                } // END of ifCostAddr definition.

                leaf ifDeadIntervalAddr  {
                    type  cml_data_types:CML_UINT32_T {
                         range "1..65535";
                    }
                    default "40";
                    config true;
                } // END of ifDeadIntervalAddr definition.

                leaf ifHelloIntervalAddr  {
                    type  cml_data_types:CML_UINT32_T {
                         range "1..65535";
                    }
                    default "10";
                    config true;
                } // END of ifHelloIntervalAddr definition.

                leaf isMtuIgnoreAddr  {
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of isMtuIgnoreAddr definition.

                leaf ifTransmitDelayAddr  {
                    type  cml_data_types:CML_UINT32_T {
                         range "1..3600";
                    }
                    default "1";
                    config true;
                } // END of ifTransmitDelayAddr definition.

                leaf ifPriorityAddr  {
                    type  cml_data_types:CML_UINT8_T {
                         range "0..255";
                    }
                    default "1";
                    config true;
                } // END of ifPriorityAddr definition.

                leaf ifRetransmitIntervalAddr  {
                    type  cml_data_types:CML_UINT32_T {
                         range "1..65535";
                    }
                    default "5";
                    config true;
                } // END of ifRetransmitIntervalAddr definition.

                leaf ifDatabaseFilterAddr  {
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of ifDatabaseFilterAddr definition.

                leaf ifResyncTimeoutAddr  {
                    type  cml_data_types:CML_UINT32_T {
                         range "1..65535";
                    }
                    default "40";
                    config true;
                } // END of ifResyncTimeoutAddr definition.


                list ospfCryptKeyAddr {
                     
                    description
                        "ospfCryptKeyAddr";

                    config true;
                    key "msgDigestKeyIdAddr";

                    
                    leaf msgDigestKeyIdAddr  {
                        type  cml_data_types:CML_UINT32_T {
                             range "1..255";
                        }
                        config true;
                    } // END of msgDigestKeyIdAddr definition.

                    leaf msgDigestKeyEncryptionAddr  {
                        mandatory true;
                        type  cml_data_types:CML_BOOL_T;  
                        config true;
                    } // END of msgDigestKeyEncryptionAddr definition.

                    leaf msgifAuthKeyAddr  {
                        mandatory true;
                        type  cml_data_types:CML_STRING_T;  
                        config true;
                    } // END of msgifAuthKeyAddr definition.

                } // End of ospfCryptKeyAddr-list
            } // End of ospfInterfaceParamsAddrList-list
        } // End of ospfInterface-list
    } // END of ospfInterface-grouping definition.


    grouping ospfGlobal-grouping {
        list ospfGlobal {
             
            description
                "ospfGlobal";

            config true;
            key "vrId";

            
            leaf vrId  {
                type  cml_data_types:CML_UINT32_T;  
                config true;
            } // END of vrId definition.

            leaf isEnableExtMultiInst  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of isEnableExtMultiInst definition.

            leaf debug  {
                type  cml_data_types:CML_OSPF_DEBUG_T;  
                config true;
            } // END of debug definition.

            leaf packetType  {
                type  cml_data_types:CML_OSPF_DEBUG_PACKET_TYPE_T;  
                config true;
            } // END of packetType definition.

            leaf debugMode  {
                type  cml_data_types:CML_OSPF_DEBUG_PACKET_MODE_T;  
                config true;
            } // END of debugMode definition.

            leaf debugDetail  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of debugDetail definition.

            leaf restartSeconds  {
                type  cml_data_types:CML_INT32_T {
                     range "1..1800";
                }
                default "120";
                config true;
            } // END of restartSeconds definition.

            leaf hitlessRestartSeconds  {
                type  cml_data_types:CML_INT32_T {
                     range "1..1800";
                }
                default "120";
                config true;
            } // END of hitlessRestartSeconds definition.

            leaf isDebug  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of isDebug definition.

            leaf isDebugPacket  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of isDebugPacket definition.

            leaf isCspfeventDebug  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of isCspfeventDebug definition.

            leaf isCspfhexdumpDebug  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of isCspfhexdumpDebug definition.

            leaf gracefulRestartPlanned  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of gracefulRestartPlanned definition.

            container restartConfig {
                                config true;

                description
                    "restartConfig";

                leaf never  {
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                    description "ospf hitless-restart helper";
                } // END of never definition.

                leaf nbrRouterId  {
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of nbrRouterId definition.

                leaf restartAll  {
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of restartAll definition.

            } // END of restartConfig-container definition.
            container restartAllConfig {
                                config true;

                description
                    "restartAllConfig";

                leaf onlyReload  {
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of onlyReload definition.

                leaf onlyUpgrade  {
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of onlyUpgrade definition.

                leaf restartHelperPeriod  {
                    type  cml_data_types:CML_INT32_T {
                         range "1..1800";
                    }
                    default "120";
                    config true;
                } // END of restartHelperPeriod definition.

            } // END of restartAllConfig-container definition.
        } // End of ospfGlobal-list
    } // END of ospfGlobal-grouping definition.


    grouping teLinkOspf-grouping {
        list teLinkOspf {
             
            description
                "teLinkOspf";

            config true;
            key "teLinkName";

            
            leaf teLinkName  {
                type  cml_data_types:CML_STRING_T;  
                config true;
            } // END of teLinkName definition.

            leaf linkLocalEnable  {
                type  cml_data_types:CML_OSPF_TELINK_LOCAL_T;  
                config true;
                description "te-link";
            } // END of linkLocalEnable definition.

            leaf teFloodOspfId  {
                type  cml_data_types:CML_INT32_T {
                     range "0..65535";
                }
                default "0";
                config true;
            } // END of teFloodOspfId definition.

            leaf teFloodareaId  {
                type  cml_data_types:CML_STRING_T;  
                config true;
                description "Te Flood Ospf Id";
            } // END of teFloodareaId definition.

        } // End of teLinkOspf-list
    } // END of teLinkOspf-grouping definition.


}