/*
* Copyright (C) 2019 IP Infusion, Inc.
*  All Rights Reserved.
*
*** Auto generated by zebmdc

* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.

* File name : ipi-bgp-epe.yang
*
*/

submodule ipi-bgp-epe {

    yang-version 1.1;

    belongs-to  ipi-bgp { prefix ipi-bgp; }

    import ietf-inet-types {
        prefix inet;
        revision-date 2013-07-15;
    }

    organization
        "IP Infusion Inc.";

    contact
        "Address: 3965 Freedom Circle, Suite 200, Santa Clara, CA 95054
         Phone: +1 408-400-1900
         E-mail: support@ipinfusion.com
         Web: http://www.ipinfusion.com/";

    description
        "";


    revision "2021-09-03" {
        description "Update descriptions of attribute";
        reference " 0.1.1.";
    }

    revision "2021-08-09" {
        description "Initial Version";
        reference " 0.1.0.";
    }

    grouping bgp-epe-global-config {
        description
            "Global Configurational       Parameters for Egress Engineering";
        leaf enable-epe  {
            type  empty;
            description "Use this attribute to enable Egress Peer Engineering for bgp";
        } // END of enable-epe definition.

    } // END of bgp-epe-global-config definition.
    grouping bgp-epe-peer-node-config {
        description
            "Configurational parameters       for peer-node SID";
        leaf enable-peer-node  {
            type  empty;
            description "Use this attribute to enable peer node SID for bgp neighbor";
        } // END of enable-peer-node definition.

    } // END of bgp-epe-peer-node-config definition.
    grouping bgp-epe-peer-set-config {
        description
            "Configurational parameters       for Peer-Set SID";
        leaf set-name  {
            type  string {
                length "1..1965";
                pattern "[^?' =,>|]+";
            }
            description "";
        } // END of set-name definition.

    } // END of bgp-epe-peer-set-config definition.
    grouping bgp-epe-peer-adjacency-config {
        description
            "Configurational       parameters for Peer-Adj SID";
        leaf hop-address  {
            type  inet:ipv4-address;
            description "";
        } // END of hop-address definition.

    } // END of bgp-epe-peer-adjacency-config definition.
    grouping bgp-epe-backup-peer-node-config {
        description
            "Configurational       parameters for backup for peer-node SID";
        leaf peer-node-address  {
            when " /bgp/bgp-instance/peer/egress-engineering/config/enable-peer-node ";
            type  inet:ipv4-address;
            description "Use this attribute for the backup peer-address";
        } // END of peer-node-address definition.

    } // END of bgp-epe-backup-peer-node-config definition.
    grouping bgp-epe-backup-peer-adjacency-config {
        description
            "Configurational       parameters for backup of Peer-Adj SID";
        leaf adjacent-peer-address  {
            type  inet:ipv4-address;
            mandatory true;
            description "Use this attribute for the backup peer-address";
        } // END of adjacent-peer-address definition.

        leaf nexthop-address  {
            type  inet:ipv4-address;
            mandatory true;
            description "Use this attribute for the peer-address";
        } // END of nexthop-address definition.

    } // END of bgp-epe-backup-peer-adjacency-config definition.
    grouping bgp-epe-backup-peer-config {
        description
            "Configurational parameters       for backup peers";
        choice backup-peer-type {
            description
                "backup-peer-type";
            case peer-node {

                description
                    "peer-node";

                uses bgp-epe-backup-peer-node-config;
            }
            case peer-adj {

                description
                    "peer-adjacency";

                uses bgp-epe-backup-peer-adjacency-config;
            }
        } // END of backup-peer-type-choice definition.
    } // END of bgp-epe-backup-peer-config definition.
    grouping bgp-epe-backup-config {
        description
            "Parameters for EPE backups";
        container peer {
            description
                "Backup peer address";
            container config {
                description
                    "";
                uses bgp-epe-backup-peer-config;
            } // END of config-container definition.
            container state {
                config false;
                description
                    "State of backup EPE for peer";
                uses bgp-epe-backup-peer-config;
            } // END of state-container definition.
        } // END of peer-container definition.
    } // END of bgp-epe-backup-config definition.

    grouping  peer-engineering-grouping {
    description
        "Global Egress Engineering parameter";
    container peer-engineering {
        description
            "Global Egress Engineering parameter";
        container config {
            description
                "config of EPE";
            uses bgp-epe-global-config;
        } // END of config-container definition.
        container state {
            config false;
            description
                "state";
            uses bgp-epe-global-config;
        } // END of state-container definition.
    } // END of peer-engineering-container definition.
    } // END of peer-engineering-grouping definition.

    grouping  egress-engineering-grouping {
    description
        "Egrees Peer Engineering";
    container egress-engineering {
        when " /bgp/bgp-instance/peer-engineering/config/enable-epe ";
        description
            "Egrees Peer Engineering";

        list peer-adjacency {
            key "hop-address";
            description
                "Paramters for Peer-Adj SIDs";
            leaf hop-address  {
                type  leafref {
                    path  "../config/hop-address";
                }
                description "";
            } // END of hop-address definition.

            container config {
                description
                    "Config for Peer-adj";
                uses bgp-epe-peer-adjacency-config;
            } // END of config-container definition.
            container state {
                config false;
                description
                    "";
                uses bgp-epe-peer-adjacency-config;
            } // END of state-container definition.
            container backup {
                description
                    "Backup configs for Peer-Adj SIDs";
                uses bgp-epe-backup-config;
            } // END of backup-container definition.
        } // End of peer-adjacency-list
        container config {
            description
                "";
            uses bgp-epe-peer-node-config;
        } // END of config-container definition.
        container state {
            config false;
            description
                "";
            uses bgp-epe-peer-node-config;
        } // END of state-container definition.
        container peer-set {
            description
                "Peer-SET SIDs";
            container config {
                description
                    "Configs for Peer SET SIDs";
                uses bgp-epe-peer-set-config;
            } // END of config-container definition.
            container state {
                config false;
                description
                    "";
                uses bgp-epe-peer-set-config;
            } // END of state-container definition.
        } // END of peer-set-container definition.
        container backup {
            description
                "Backup configs for peer-node SIDs";
            uses bgp-epe-backup-config;
        } // END of backup-container definition.
    } // END of egress-engineering-container definition.
    } // END of egress-engineering-grouping definition.


}