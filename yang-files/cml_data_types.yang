/*
* Copyright (C) 2016 IP Infusion, Inc. 
*  All Rights Reserved.
*
*** Auto generated by zebmdc

* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.

* File name : cml_data_types.yang
*
*/

module cml_data_types {

    namespace   "http://www.ipinfusion.com/CMLSchema/cml_data_types";

    prefix "cml_data_types";


    import ietf-inet-types {
        prefix inet;
    }

    organization
        "http://www.ipinfusion.com/CMLSchema";

    contact
        "http://www.ipinfusion.com/CMLSchema";

    description
        "YANG version of the cml_data_types";


    revision "2016-08-19" {
        description "Module in progress.";    }



    typedef  CML_INT32_T{
        type int32;
    }

    typedef  CML_UINT32_T{
        type uint32;
    }

    typedef  CML_STRING_T{
        type string;
    }

    typedef  CML_HOST_STRING_T{
        type string;
    }

    typedef  CML_UINT8_T{
        type uint8;
    }

    typedef  CML_INT8_T{
        type int8;
    }

    typedef  CML_UINT16_T{
        type uint16;
    }

    typedef  CML_BITMAP_T{
        type uint32;
    }

    typedef  CML_INT16_T{
        type int16;
    }

    typedef  CML_UINT64_T{
        type uint64;
    }

    typedef  CML_INT64_T{
        type int64;
    }

    typedef  CML_BOOL_T{
        type boolean;
    }

    typedef  CML_IPV4_ADDR_T{
        type inet:ipv4-address;
    }

    typedef  CML_IPV6_ADDR_T{
        type inet:ipv6-address;
    }

    typedef  CML_IPV4_PREFIX_T{
        type inet:ipv4-prefix;
    }

    typedef  CML_IPV6_PREFIX_T{
        type inet:ipv6-prefix;
    }

    typedef  CML_MAC_ADDR_T{
        type string;
    }

    typedef  CML_EMPTY_T{
        type empty;
    }

    typedef  CML_HOSTNAME_T{
        type union{

            type CML_IP_ADDR_T {

            }
            type CML_STRING_T {

            }
        }
    }

    typedef  CML_HOSTPNAME_T{
        type union{

            type CML_IP_ADDR_T {

            }
            type CML_HOST_STRING_T {

            }
        }
    }

    typedef  CML_IP_ADDR_T{
        type union{

            type CML_IPV4_ADDR_T {

            }
            type CML_IPV6_ADDR_T {

            }
        }
    }

    typedef  CML_IP_PREFIX_ADDR_T{
        type union{

            type CML_IPV4_PREFIX_T {

            }
            type CML_IPV6_PREFIX_T {

            }
        }
    }

    typedef  CML_ACCESS_LIST_T{
        type union{

            type CML_INT32_T {
                range "1..99 | 1300..1999";

            }
            type CML_STRING_T {
                length "5..10";

            }
        }
    }

    typedef  CML_ACL_PACKET_DIR_T{
        type enumeration {
            enum in { value 0;    }
            enum out { value 1;    }
            enum forward { value 2;    }
        }
    }

    typedef  CML_MAC_ETH_TYPE_T{
        type union{

            type CML_ETH_TYPE_T {

            }
            type CML_STRING_T {

            }
        }
    }

    typedef  CML_ETH_TYPE_T{
        type enumeration {
            enum ip4 { value 0;    }
            enum ip6 { value 1;    }
            enum mpls { value 2;    }
        }
    }

    typedef  CML_VLAN_TYPE_T{
        type enumeration {
            enum custmor { value 0;    }
            enum service { value 1;    }
        }
    }

    typedef  CML_FACILITY_T{
        type enumeration {
            enum local0 { value 0;    }
            enum local1 { value 1;    }
            enum local2 { value 2;    }
            enum local3 { value 3;    }
            enum local4 { value 4;    }
            enum local5 { value 5;    }
            enum local6 { value 6;    }
            enum local7 { value 7;    }
            enum user { value 8;    }
        }
    }

    typedef  CML_HOSTT_T{
        type enumeration {
            enum emergencies { value 0;    }
            enum alerts { value 1;    }
            enum critical { value 2;    }
            enum errors { value 3;    }
            enum warnings { value 4;    }
            enum notifications { value 5;    }
            enum informational { value 6;    }
            enum debugging { value 7;    }
        }
    }

    typedef  CML_DISCARDFORWARD_T{
        type enumeration {
            enum discard { value 0;    }
            enum forward { value 1;    }
        }
    }

    typedef  CML_VLAN_PORT_MODE_T{
        type enumeration {
            enum access { value 1;    }
            enum hybrid { value 2;    }
            enum trunk { value 3;    }
        }
    }

    typedef  CML_VLAN_FRAME_TYPE_T{
        type enumeration {
            enum vlan-tagged { value 1;    }
            enum all { value 2;    }
        }
    }

    typedef  CML_OSPF6_CSPF_TYPE_T{
        type enumeration {
            enum random { value 0;    }
            enum most-fill { value 1;    }
            enum least-fill { value 2;    }
        }
    }

    typedef  CML_OSPF6_ABR_TYPE_T{
        type enumeration {
            enum standard { value 1;    }
            enum cisco { value 2;    }
            enum ibm { value 3;    }
        }
    }

    typedef  CML_OSPF6_TRANSLATOR_ROLE_T{
        type enumeration {
            enum always { value 1;    }
            enum candidate { value 2;    }
        }
    }

    typedef  CML_OSPF6_NETWORK_T{
        type enumeration {
            enum point-to-point { value 1;    }
            enum broadcast { value 2;    }
            enum non-broadcast { value 3;    }
            enum point-to-multipoint { value 4;    }
        }
    }

    typedef  CML_OSPF6_LSA_SUPRESSION_STATE_T{
        type enumeration {
            enum disable { value 0;    }
            enum enable { value 1;    }
        }
    }

    typedef  CML_OSPF6_RESTART_HELPER_T{
        type enumeration {
            enum restart { value 1;    }
            enum hitless-restart { value 2;    }
        }
    }

    typedef  CML_OSPF6_ROUTE_SOURCE_TYPE_T{
        type enumeration {
            enum kernel { value 1;    }
            enum connected { value 2;    }
            enum static { value 3;    }
            enum rip { value 4;    }
            enum ospf { value 7;    }
            enum bgp { value 8;    }
            enum isis { value 9;    }
        }
    }

    typedef  CML_OSPF6_DIST_ROUTE_SOURCE_TYPE_T{
        type enumeration {
            enum kernel { value 1;    }
            enum connected { value 2;    }
            enum static { value 3;    }
            enum rip { value 4;    }
            enum bgp { value 8;    }
            enum isis { value 9;    }
        }
    }

    typedef  CML_OSPF6_AF_ROUTE_SOURCE_TYPE_T{
        type enumeration {
            enum kernel { value 1;    }
            enum connected { value 2;    }
            enum static { value 3;    }
            enum rip { value 4;    }
            enum ospf { value 6;    }
            enum bgp { value 8;    }
            enum isis { value 9;    }
        }
    }

    typedef  CML_OSPF6_AREA_RANGE_T{
        type enumeration {
            enum not-advertise { value 0;    }
            enum advertise { value 1;    }
        }
    }

    typedef  CML_OSPF_ACTION_TYPE_T{
        type enumeration {
            enum soft { value 1;    }
            enum hard { value 2;    }
        }
    }

    typedef  CML_OSPF_TELINK_LOCAL_T{
        type enumeration {
            enum disable-te-link-local { value 0;    }
            enum enable-te-link-local { value 1;    }
        }
    }

    typedef  CML_OSPF_ROUTE_SOURCE_TYPE_T{
        type enumeration {
            enum kernel { value 1;    }
            enum connected { value 2;    }
            enum static { value 3;    }
            enum rip { value 4;    }
            enum ospf { value 6;    }
            enum bgp { value 8;    }
            enum isis { value 9;    }
        }
    }

    typedef  CML_OSPF_DIST_ROUTE_SOURCE_TYPE_T{
        type enumeration {
            enum kernel { value 1;    }
            enum connected { value 2;    }
            enum static { value 3;    }
            enum rip { value 4;    }
            enum bgp { value 8;    }
            enum isis { value 9;    }
        }
    }

    typedef  CML_OSPF6_DEBUG_T{
        type enumeration {
            enum all { value 0;    }
            enum ifsm { value 1;    }
        }
    }

    typedef  CML_OSPF6_DEBUG_PACKET_TYPE_T{
        type enumeration {
            enum hello { value 1;    }
            enum dd  { value 2;    }
            enum ls-request { value 3;    }
            enum ls-update { value 4;    }
            enum ls-ack { value 5;    }
            enum send { value 6;    }
            enum recv { value 7;    }
            enum detail { value 8;    }
        }
    }

    typedef  CML_BRIDGE_PROTOCOL_T{
        type enumeration {
            enum ieee { value 1;    }
            enum ieee-vlan-bridge { value 2;    }
            enum rstp { value 3;    }
            enum rstp-vlan-bridge { value 4;    }
            enum mstp { value 5;    }
            enum rpvst+ { value 8;    }
            enum trill { value 10;    }
        }
    }

    typedef  CML_BRIDGE_TYPE_T{
        type enumeration {
            enum ieee { value 1;    }
            enum rstp { value 3;    }
            enum mstp { value 5;    }
        }
    }

    typedef  CML_OVERMACTYPE_T{
        type enumeration {
            enum static { value 1;    }
            enum static-priority-override { value 2;    }
            enum static-mgmt { value 3;    }
            enum static-mgmt-priority-overide { value 4;    }
        }
    }

    typedef  CML_ENABLE_DISABLE_T{
        type enumeration {
            enum disable { value 0;    }
            enum enable { value 1;    }
        }
    }

    typedef  CML_VLANSTATE_T{
        type enumeration {
            enum disable { value 1;    }
            enum enable { value 2;    }
        }
    }

    typedef  CML_PBRINTERFACE_T{
        type enumeration {
            enum null0 { value 0;    }
            enum tunnel-te { value 1;    }
        }
    }

    typedef  CML_ROUTEMAP_LIST_T{
        type union{

            type CML_INT32_T {
                range "1..199 | 1300..2699";

            }
            type CML_STRING_T {

            }
        }
    }

    typedef  CML_SPANNINGTREE_ENABLE_DISABLE_T{
        type enumeration {
            enum enable { value 0;    }
            enum disable { value 1;    }
        }
    }

    typedef  CML_PATHCOST_METHOD_T{
        type enumeration {
            enum short { value 0;    }
            enum long { value 1;    }
            enum default { value 2;    }
        }
    }

    typedef  CML_LINK_TYPE_T{
        type enumeration {
            enum shared { value 0;    }
            enum point-to-point { value 1;    }
            enum auto { value 2;    }
        }
    }

    typedef  CML_PORTEDGE_T{
        type enumeration {
            enum portfast { value 1;    }
            enum edgeport { value 2;    }
        }
    }

    typedef  CML_BPDU_T{
        type enumeration {
            enum enable { value 0;    }
            enum disable { value 1;    }
            enum default { value 2;    }
        }
    }

    typedef  CML_BRIDGE_TOPOLOGY_T{
        type enumeration {
            enum ring { value 1;    }
        }
    }

    typedef  CML_BRIDGE_FORWARDING_SET_T{
        type enumeration {
            enum disable { value 0;    }
            enum enable { value 1;    }
        }
    }

    typedef  CML_BRIDGE_MSTPENABLE_T{
        type enumeration {
            enum enable { value 1;    }
        }
    }

    typedef  CML_BRIDGE_AGEING_STATE{
        type enumeration {
            enum disable { value 0;    }
        }
    }

    typedef  CML_OSPF_DOMAIN_TYPE_T{
        type enumeration {
            enum type-as { value 1;    }
            enum type-as4 { value 2;    }
            enum type-back-comp { value 3;    }
        }
    }

    typedef  CML_OSPF_ABR_TYPE_T{
        type enumeration {
            enum standard { value 1;    }
            enum cisco { value 2;    }
            enum ibm { value 3;    }
            enum shortcut { value 4;    }
        }
    }

    typedef  CML_OSPF_AREA_AUTH_TYPE_T{
        type enumeration {
            enum simple { value 1;    }
            enum message-digest { value 2;    }
        }
    }

    typedef  CML_OSPF_AREA_SHORTCUT_TYPE_T{
        type enumeration {
            enum default { value 0;    }
            enum enable { value 1;    }
            enum disable { value 2;    }
        }
    }

    typedef  CML_OSPF_TRANSLATOR_ROLE_T{
        type enumeration {
            enum never { value 0;    }
            enum always { value 1;    }
            enum candidate { value 2;    }
        }
    }

    typedef  CML_OSPF_NSSA_TRANSLATOR_ROLE_T{
        type enumeration {
            enum translate-never { value 0;    }
            enum translate-always { value 1;    }
            enum translate-candidate { value 2;    }
        }
    }

    typedef  CML_OSPF6_NSSA_TRANSLATOR_ROLE_T{
        type enumeration {
            enum translate-never { value 0;    }
            enum translate-always { value 1;    }
            enum translate-candidate { value 2;    }
        }
    }

    typedef  CML_OSPF_AREA_FILTER_TYPE_T{
        type enumeration {
            enum access { value 0;    }
            enum prefix { value 1;    }
        }
    }

    typedef  CML_OSPF_AREA_FILTER_LIST_PREFIX_T{
        type enumeration {
            enum in { value 0;    }
            enum out { value 1;    }
        }
    }

    typedef  CML_OSPF_VIRT_AUTH_KEY_T{
        type enumeration {
            enum null { value 0;    }
            enum PASSWORD { value 1;    }
        }
    }

    typedef  CML_OSPF_VIRT_AUTH_TYPE_T{
        type enumeration {
            enum null { value 0;    }
            enum simple { value 1;    }
            enum message-digest { value 2;    }
        }
    }

    typedef  CML_OSPF_RESTART_METHOD_T{
        type enumeration {
            enum graceful { value 1;    }
            enum signaling { value 2;    }
        }
    }

    typedef  CML_CSPF_TIE_BREAK_T{
        type enumeration {
            enum least-fill { value 1;    }
            enum most-fill { value 2;    }
            enum random { value 3;    }
        }
    }

    typedef  CML_OSPF_METRIC_TYPE_T{
        type enumeration {
            enum 1 { value 1;    }
            enum 2 { value 2;    }
        }
    }

    typedef  CML_OSPF_NETWORK_T{
        type enumeration {
            enum point-to-point { value 1;    }
            enum broadcast { value 2;    }
            enum non-broadcast { value 3;    }
            enum point-to-multipoint { value 4;    }
        }
    }

    typedef  CML_OSPF_AUTH_TYPE_T{
        type enumeration {
            enum null { value 0;    }
            enum simple { value 1;    }
            enum message-digest { value 2;    }
        }
    }

    typedef  CML_OSPF_RESTART_HELPER_T{
        type enumeration {
            enum restart { value 1;    }
            enum hitless-restart { value 2;    }
        }
    }

    typedef  CML_OSPF_DEBUG_T{
        type enumeration {
            enum all { value 0;    }
            enum ifsm { value 1;    }
        }
    }

    typedef  CML_OSPF_DEBUG_PACKET_TYPE_T{
        type enumeration {
            enum detail { value 0;    }
            enum hello { value 1;    }
            enum dd  { value 2;    }
            enum ls-request { value 3;    }
            enum ls-update { value 4;    }
            enum ls-ack { value 5;    }
        }
    }

    typedef  CML_OSPF_DEBUG_PACKET_MODE_T{
        type enumeration {
            enum send { value 1;    }
            enum recv { value 2;    }
        }
    }

    typedef  CML_LDP_HELPER_MODE_T{
        type enumeration {
            enum disable { value 0;    }
            enum enable { value 1;    }
        }
    }

    typedef  CML_OSPF_FRR_TIE_BREAK_VAL_T{
        type enumeration {
            enum primary-path { value 1;    }
            enum interface-disjoint { value 2;    }
            enum node-protecting { value 3;    }
            enum broadcast-interface-disjoint { value 4;    }
        }
    }

    typedef  CML_LDP_ADVERTISE_MODE_T{
        type enumeration {
            enum downstream-unsolicited { value 0;    }
            enum downstream-on-demand { value 1;    }
        }
    }

    typedef  CML_LDP_CONTROLMODE_T{
        type enumeration {
            enum independent { value 0;    }
            enum ordered { value 1;    }
        }
    }

    typedef  CML_LDP_LABEL_T{
        type enumeration {
            enum conservative { value 0;    }
            enum liberal { value 1;    }
        }
    }

    typedef  CML_LDP_MERGE_CAPABLE_T{
        type enumeration {
            enum merge-capable { value 0;    }
            enum non-merge-capable { value 1;    }
        }
    }

    typedef  CML_PIM_MODE_TYPE_T{
        type enumeration {
            enum dense-mode { value 1;    }
            enum sparse-mode { value 2;    }
            enum sparse-dense-mode { value 3;    }
        }
    }

    typedef  CML_PIM_IP_TYPE_T{
        type enumeration {
            enum ip { value 1;    }
        }
    }

    typedef  CML_PIM_IPV6_TYPE_T{
        type enumeration {
            enum ipv6 { value 0;    }
        }
    }

    typedef  CML_MRIB_IP_TYPE_T{
        type enumeration {
            enum ip { value 1;    }
        }
    }

    typedef  CML_MRIB_IPV6_TYPE_T{
        type enumeration {
            enum ipv6 { value 0;    }
        }
    }

    typedef  CML_MAUTYPE_T{
        type enumeration {
            enum dot3MauType10BaseTHD { value 10;    }
            enum dot3MauType10BaseTFD { value 11;    }
            enum dot3MauType100BaseTXHD { value 15;    }
            enum dot3MauType100BaseTXFD { value 16;    }
            enum dot3MauType1000BaseXHD { value 21;    }
            enum dot3MauType1000BaseXFD { value 22;    }
            enum dot3MauType10GigBaseCX4 { value 41;    }
            enum dot3MauType10GbaseKX4 { value 57;    }
            enum dot3MauType10GbaseKR { value 58;    }
            enum dot3MauType40GbaseCR4 { value 71;    }
            enum dot3MauType0dot0 { value 255;    }
        }
    }

    typedef  CML_DUPLEX_T{
        type enumeration {
            enum half { value 0;    }
            enum full { value 1;    }
            enum auto { value 2;    }
        }
    }

    typedef  CML_BANDWIDTHCONSTRAINTMODE_T{
        type enumeration {
            enum MAM { value 0;    }
            enum RSDL { value 1;    }
            enum MAR { value 2;    }
        }
    }

    typedef  CML_AFI_TYPE_T{
        type enumeration {
            enum ipv4 { value 1;    }
            enum ipv6 { value 2;    }
            enum vpnv4 { value 3;    }
            enum vpnv6 { value 4;    }
            enum rtfilter { value 5;    }
            enum l2vpn { value 25;    }
        }
    }

    typedef  CML_SAFI_TYPE_T{
        type enumeration {
            enum unicast { value 1;    }
            enum multicast { value 2;    }
            enum labeled-unicast { value 4;    }
            enum l2vpn-vpls { value 65;    }
            enum evpn { value 70;    }
            enum vpn-unicast { value 128;    }
            enum rtfilter-unicast { value 132;    }
        }
    }

    typedef  CML_BGP_MED_TYPE_T{
        type enumeration {
            enum confed { value 0;    }
            enum missing-as-worst { value 1;    }
            enum remove-recv-med { value 2;    }
            enum remove-send-med { value 3;    }
        }
    }

    typedef  CML_BGP_ORF_PREFIX_TYPE_T{
        type enumeration {
            enum both { value 0;    }
            enum receive { value 1;    }
            enum send { value 2;    }
        }
    }

    typedef  CML_BGP_COMMUNITY_LIST_ACTION_T{
        type enumeration {
            enum deny { value 1;    }
            enum permit { value 2;    }
        }
    }

    typedef  CML_RMAP_PERMIT_T{
        type enumeration {
            enum permit { value 0;    }
            enum deny { value 1;    }
        }
    }

    typedef  CML_BGP_SEND_COMMU_TYPE_T{
        type bits {
            bit standard {                  position 1;  }
            bit extended {                  position 2;  }
            bit both {                  position 3;  }
        }
    }

    typedef  CML_BGP_UPDATE_DEBUG_TYPE_T{
        type bits {
            bit in {                  position 8;  }
            bit out {                  position 9;  }
        }
    }

    typedef  CML_BGP_DEBUG_TYPE_T{
        type bits {
            bit all {                  position 0;  }
            bit nht {                  position 1;  }
            bit nsm {                  position 2;  }
            bit fsm {                  position 3;  }
            bit events {                  position 4;  }
            bit filters {                  position 5;  }
            bit keepalives {                  position 6;  }
            bit dampening {                  position 10;  }
            bit bfd {                  position 11;  }
        }
    }

    typedef  CML_BGP_MAXPATH_T{
        type enumeration {
            enum ibgp { value 0;    }
            enum ebgp { value 1;    }
        }
    }

    typedef  CML_BGP_DISTRIBUTE_LIST_ACTION_T{
        type enumeration {
            enum in { value 0;    }
            enum out { value 1;    }
        }
    }

    typedef  CML_BGP_REDISTRIBUTE_TYPE_T{
        type enumeration {
            enum kernel { value 0;    }
            enum connected { value 1;    }
            enum static { value 2;    }
            enum rip { value 3;    }
            enum ospf { value 4;    }
            enum isis { value 5;    }
        }
    }

    typedef  CML_BGP_COMMUNITY_LIST_ENTRY_T{
        type enumeration {
            enum standard { value 0;    }
            enum expanded { value 1;    }
            enum default { value 2;    }
        }
    }

    typedef  CML_BGP_AGGREGATE_ADDR_TYPE_T{
        type enumeration {
            enum summary-only { value 1;    }
            enum as-set { value 2;    }
        }
    }

    typedef  CML_RSVP_PATH_TYPE_T{
        type enumeration {
            enum mpls { value 0;    }
            enum gmpls { value 1;    }
        }
    }

    typedef  CML_RSVP_TRUNK_TYPE_T{
        type enumeration {
            enum ipv4 { value 0;    }
            enum ipv6 { value 1;    }
            enum gmpls { value 2;    }
        }
    }

    typedef  CML_RSVP_RESTART_STATUS_T{
        type enumeration {
            enum enable { value 0;    }
            enum disable { value 1;    }
        }
    }

    typedef  CML_RSVP_DETOUR_IDEN_T{
        type enumeration {
            enum sender-template { value 1;    }
            enum path { value 2;    }
        }
    }

    typedef  CML_RSVP_P2MP_ADDR_T{
        type enumeration {
            enum ipv4 { value 1;    }
            enum ipv6 { value 2;    }
        }
    }

    typedef  CML_RSVP_CSPF_TYPE_T{
        type enumeration {
            enum no-cspf { value 0;    }
            enum cspf { value 1;    }
        }
    }

    typedef  CML_MPLS_MODULE_T{
        type enumeration {
            enum rsvp { value 0;    }
            enum ldp { value 1;    }
            enum bgp { value 4;    }
        }
    }

    typedef  CML_NSM_VPLS_TYPE_T{
        type enumeration {
            enum vlan { value 4;    }
            enum ethernet { value 5;    }
        }
    }

    typedef  CML_NSM_VPLS_VC_SPOKE_TYPE_T{
        type enumeration {
            enum vlan { value 4;    }
            enum ethernet { value 5;    }
        }
    }

    typedef  CML_NSM_VPLS_PEER_TUNNEL_DIR_T{
        type enumeration {
            enum forward { value 0;    }
            enum reverse { value 1;    }
        }
    }

    typedef  CML_NSM_VPLS_PEER_TYPE_T{
        type enumeration {
            enum manual { value 1;    }
        }
    }

    typedef  CML_NSM_VPLS_FTN_ENTRY_T{
        type enumeration {
            enum secondary { value 0;    }
            enum primary { value 1;    }
        }
    }

    typedef  CML_NSM_VPLS_OPCODE_T{
        type enumeration {
            enum swap { value 3;    }
            enum vpnpop { value 4;    }
        }
    }

    typedef  CML_VPLS_VC_STYLE1_T{
        type enumeration {
            enum peer { value 2;    }
        }
    }

    typedef  CML_VPLS_VC_STYLE2_T{
        type enumeration {
            enum spoke-vc { value 3;    }
        }
    }

    typedef  CML_RSVP_PATH_STATUS_T{
        type enumeration {
            enum loose { value 0;    }
            enum strict { value 1;    }
        }
    }

    typedef  CML_RSVP_PROT_STATUS_T{
        type enumeration {
            enum one-to-one { value 1;    }
            enum facility { value 2;    }
        }
    }

    typedef  CML_RSVP_IP_ADDR_T{
        type union{

            type CML_IPV4_ADDR_T {

            }
            type CML_IPV6_ADDR_T {

            }
        }
    }

    typedef  CML_RSVP_FRR_ADMIN_TYPE_T{
        type enumeration {
            enum exclude-any { value 0;    }
            enum include-any { value 1;    }
            enum include-all { value 2;    }
        }
    }

    typedef  CML_RSVP_TRAFFIC_TYPE_T{
        type enumeration {
            enum controlled-load { value 1;    }
            enum guaranteed { value 2;    }
        }
    }

    typedef  CML_RSVP_UPDATE_TYPE_T{
        type enumeration {
            enum break-before-make { value 1;    }
            enum make-before-break { value 2;    }
        }
    }

    typedef  CML_RSVP_CAPABILITY_TYPE_T{
        type enumeration {
            enum psc-1 { value 1;    }
            enum psc-2 { value 2;    }
            enum psc-3 { value 4;    }
            enum psc-4 { value 8;    }
        }
    }

    typedef  CML_RSVP_DIRECTION_TYPE_T{
        type enumeration {
            enum unidirectional { value 0;    }
            enum bidirectional { value 1;    }
        }
    }

    typedef  CML_RSVP_GPID_TYPE_T{
        type enumeration {
            enum ethernet { value 33;    }
            enum ipv4 { value 2048;    }
        }
    }

    typedef  CML_RSVP_EXPLICIT_LABEL_TYPE_T{
        type enumeration {
            enum forward { value 1;    }
            enum reverse { value 2;    }
        }
    }

    typedef  CML_RSVP_FILTER_TYPE_T{
        type enumeration {
            enum default { value 0;    }
            enum fixed { value 1;    }
            enum shared-explicit { value 2;    }
        }
    }

    typedef  CML_RSVP_PROTECTION_TYPE_T{
        type enumeration {
            enum extra-traffic { value 1;    }
            enum unprotected { value 2;    }
            enum shared { value 4;    }
            enum dedicated-one-to-one { value 8;    }
            enum dedicated-one-plus-one { value 16;    }
            enum enhanced { value 32;    }
        }
    }

    typedef  CML_RSVP_EXCLUDE_ADDR_TYPE_T{
        type enumeration {
            enum link { value 1;    }
            enum node { value 2;    }
        }
    }

    typedef  CML_IS_TYPE_T{
        type enumeration {
            enum level-1 { value 1;    }
            enum level-2-only { value 2;    }
            enum level-1-2 { value 3;    }
        }
    }

    typedef  CML_IS_TYPE2_T{
        type enumeration {
            enum level-1 { value 1;    }
            enum level-2 { value 2;    }
            enum level-1-2 { value 3;    }
        }
    }

    typedef  CML_ISIS_LEVEL_T{
        type enumeration {
            enum level-1 { value 1;    }
            enum level-2 { value 2;    }
        }
    }

    typedef  CML_ISIS_NETWORK_T{
        type enumeration {
            enum broadcast { value 1;    }
            enum point-to-point { value 2;    }
        }
    }

    typedef  CML_METRIC_STYLE_T{
        type enumeration {
            enum narrow { value 1;    }
            enum wide { value 2;    }
            enum transition { value 3;    }
        }
    }

    typedef  CML_TRANSITION_METRIC_STYLE_T{
        type enumeration {
            enum narrow { value 1;    }
            enum wide { value 2;    }
        }
    }

    typedef  CML_ISIS_AUTH_MODE_T{
        type enumeration {
            enum md5 { value 1;    }
            enum text { value 2;    }
        }
    }

    typedef  CML_ISIS_ROUTE_T{
        type enumeration {
            enum redistribution { value 0;    }
            enum all { value 1;    }
        }
    }

    typedef  CML_ISIS_SNP_T{
        type enumeration {
            enum send-only { value 1;    }
            enum validate { value 2;    }
        }
    }

    typedef  CML_ISIS_LIFETIME_T{
        type enumeration {
            enum accept-lifetime { value 1;    }
            enum send-lifetime { value 2;    }
        }
    }

    typedef  CML_ISIS_REDISTRIBUTE_T{
        type enumeration {
            enum kernel { value 1;    }
            enum connected { value 2;    }
            enum static { value 3;    }
            enum rip { value 4;    }
            enum ospf { value 5;    }
            enum bgp { value 6;    }
        }
    }

    typedef  CML_ISIS_DEBUG_T{
        type bits {
            bit ifsm {                  position 0;  }
            bit nfsm {                  position 1;  }
            bit pdu {                  position 2;  }
            bit lsp {                  position 3;  }
            bit spf {                  position 4;  }
            bit events {                  position 5;  }
            bit nsm {                  position 6;  }
            bit checksum {                  position 7;  }
            bit authentication {                  position 8;  }
            bit local-updates {                  position 9;  }
            bit protocol-errors {                  position 10;  }
            bit hello {                  position 11;  }
            bit bfd {                  position 12;  }
            bit mpls {                  position 13;  }
        }
    }

    typedef  CML_PASSWORD_T{
        type string;
    }

    typedef  CML_SYSTEM_HOSTNAME_T{
        type string;
    }

    typedef  CML_USERNAME_T{
        type string;
    }

    typedef  CML_WRAP_T{
        type enumeration {
            enum off { value 0;    }
            enum on { value 1;    }
        }
    }

    typedef  CML_LDP_TDP_PROTOCOL_T{
        type enumeration {
            enum both { value 0;    }
            enum ldp { value 1;    }
            enum tdp { value 2;    }
        }
    }

    typedef  CML_INTERFACE_T{
        type enumeration {
            enum interface { value 0;    }
        }
    }

    typedef  CML_LDP_DISCOVERY_ADDRESS_T{
        type union{

            type CML_INTERFACE_T {

            }
            type CML_IPV4_ADDR_T {

            }
        }
    }

    typedef  CML_MTU_T{
        type union{

            type CML_UINT16_T {

            }
            type CML_UINT16_T {

            }
            type CML_UINT16_T {

            }
        }
    }

    typedef  CML_AREA_T{
        type union{

            type CML_UINT32_T {
                range "0..4294967295";

            }
            type CML_IPV4_ADDR_T {

            }
        }
    }

    typedef  CML_SELF_TEST_T{
        type enumeration {
            enum extended { value 0;    }
            enum fast { value 1;    }
            enum none { value 2;    }
        }
    }

    typedef  CML_BAUD_RATE_T{
        type enumeration {
            enum 9600 { value 9600;    }
            enum 19200 { value 19200;    }
            enum 38400 { value 38400;    }
            enum 115200 { value 115200;    }
        }
    }

    typedef  CML_OSPF6_INSTANCE_T{
        type union{

            type CML_UINT8_T {

            }
            type CML_UINT8_T {

            }
        }
    }

    typedef  CML_ACCESS_GROUP_DIRECTION_T{
        type enumeration {
            enum in { value 0;    }
            enum out { value 1;    }
        }
    }

    typedef  CML_VLAN_ID_T{
        type uint16;
    }

    typedef  CML_ADDR_OR_SCRIPT_T{
        type union{

            type CML_IPV4_ADDR_T {

            }
            type CML_STRING_T {

            }
        }
    }

    typedef  CML_GI_MEDIA_T{
        type enumeration {
            enum 10-full { value 0;    }
            enum 10-half { value 1;    }
            enum 100-auto { value 2;    }
            enum 100-full { value 3;    }
            enum 100-half { value 4;    }
            enum 1000-full { value 5;    }
            enum 1000-half { value 6;    }
            enum auto { value 7;    }
        }
    }

    typedef  CML_TE_MEDIA_T{
        type enumeration {
            enum 1000-full { value 0;    }
            enum 10000-full { value 1;    }
            enum auto { value 2;    }
        }
    }

    typedef  CML_PORT_TYPE_T{
        type enumeration {
            enum nni { value 0;    }
        }
    }

    typedef  CML_MODE_T{
        type enumeration {
            enum active { value 0;    }
            enum auto { value 1;    }
            enum desirable { value 2;    }
            enum on { value 3;    }
            enum passive { value 4;    }
        }
    }

    typedef  CML_CHANNEL_PROTOCOL_T{
        type enumeration {
            enum lacp { value 0;    }
            enum pagp { value 1;    }
        }
    }

    typedef  CML_ENCAPSULATION_T{
        type enumeration {
            enum mpls { value 0;    }
            enum l2tpv3 { value 1;    }
        }
    }

    typedef  CML_SEQUENCE_T{
        type enumeration {
            enum both { value 0;    }
            enum receive { value 1;    }
            enum transmit { value 2;    }
        }
    }

    typedef  CML_GROUP_ENUM_T{
        type enumeration {
            enum global { value 0;    }
        }
    }

    typedef  CML_GROUP_T{
        type union{

            type CML_GROUP_ENUM_T {

            }
            type CML_STRING_T {

            }
        }
    }

    typedef  CML_RATE_TYPE_T{
        type uint32;
    }

    typedef  CML_IP_RATE_T{
        type union{

            type CML_RATE_TYPE_T {

            }
            type CML_STRING_T {

            }
        }
    }

    typedef  CML_SPT_NAME_T{
        type enumeration {
            enum mst { value 0;    }
        }
    }

    typedef  CML_ACL_FILTER_ACTION_T{
        type enumeration {
            enum deny { value 0;    }
            enum permit { value 1;    }
        }
    }

    typedef  CML_ACL_ANY_T{
        type enumeration {
            enum any { value 0;    }
        }
    }

    typedef  CML_ACL_ANY_ADDR_T{
        type union{

            type CML_ACL_ANY_T {

            }
            type CML_IPV4_PREFIX_T {

            }
        }
    }

    typedef  CML_ACL_ANY_PORT_T{
        type union{

            type CML_ACL_ANY_T {

            }
            type CML_UINT16_T {

            }
        }
    }

    typedef  CML_ACL_PROTOS_T{
        type enumeration {
            enum ether { value 0;    }
            enum ip { value 1;    }
            enum ipv6 { value 2;    }
            enum ipip { value 3;    }
            enum icmp { value 4;    }
            enum igmp { value 5;    }
            enum tcp { value 6;    }
            enum tcp6 { value 7;    }
            enum egp { value 8;    }
            enum udp { value 9;    }
            enum udp6 { value 10;    }
            enum rsvp { value 11;    }
            enum gre { value 12;    }
            enum esp { value 13;    }
            enum ah { value 14;    }
            enum icmp6 { value 15;    }
            enum ospf { value 16;    }
            enum pim { value 17;    }
            enum sctp { value 18;    }
        }
    }

    typedef  CML_ACL_IP_PROTOS_T{
        type enumeration {
            enum ipip { value 0;    }
            enum icmp { value 1;    }
            enum igmp { value 2;    }
            enum tcp { value 3;    }
            enum tcp6 { value 4;    }
            enum egp { value 5;    }
            enum udp { value 6;    }
            enum udp6 { value 7;    }
            enum rsvp { value 8;    }
            enum gre { value 9;    }
            enum esp { value 10;    }
            enum ah { value 11;    }
            enum icmp6 { value 12;    }
            enum ospf { value 13;    }
            enum pim { value 14;    }
            enum sctp { value 15;    }
        }
    }

    typedef  CML_ACL_IP_PROTO_T{
        type union{

            type CML_ACL_IP_PROTOS_T {

            }
            type CML_UINT8_T {

            }
        }
    }

    typedef  CML_ACL_PROTO_T{
        type union{

            type CML_ACL_PROTOS_T {

            }
            type CML_UINT8_T {

            }
        }
    }

    typedef  CML_ACL_ICMP_OPTIONS_T{
        type enumeration {
            enum echo-reply { value 0;    }
            enum unreachable { value 1;    }
            enum source-quench { value 2;    }
            enum redirect { value 3;    }
            enum echo { value 4;    }
            enum router-advert { value 5;    }
            enum router-solicit { value 6;    }
            enum time-exceed { value 7;    }
            enum param-prob { value 8;    }
            enum timestamp { value 9;    }
            enum timestamp-reply { value 10;    }
            enum info-req { value 11;    }
            enum info-reply { value 12;    }
            enum mask-req { value 13;    }
            enum mask-reply { value 14;    }
        }
    }

    typedef  CML_ACL_UNREACH_VAL_T{
        type enumeration {
            enum net { value 0;    }
            enum host { value 1;    }
            enum protocol { value 2;    }
            enum port { value 3;    }
            enum need-frag { value 4;    }
            enum source-fail { value 5;    }
            enum net-unknown { value 6;    }
            enum host-unknown { value 7;    }
            enum isolated { value 8;    }
            enum net-prohibit { value 9;    }
            enum host-prohibit { value 10;    }
            enum net-tos { value 11;    }
            enum host-tos { value 12;    }
            enum admin-prohibit { value 13;    }
        }
    }

    typedef  CML_ACL_REDIR_VAL_T{
        type enumeration {
            enum net { value 0;    }
            enum host { value 1;    }
            enum net-tos { value 2;    }
            enum host-tos { value 3;    }
        }
    }

    typedef  CML_ACL_TCP_FLAGS_T{
        type enumeration {
            enum fin { value 0;    }
            enum syn { value 1;    }
            enum rst { value 2;    }
            enum ack { value 3;    }
            enum urg { value 4;    }
        }
    }

    typedef  CML_ACL_ACTION_T{
        type enumeration {
            enum permit { value 0;    }
            enum deny { value 1;    }
            enum reject { value 2;    }
        }
    }

    typedef  CML_ACL_ANY_MAC_ADDR_T{
        type union{

            type CML_ACL_ANY_T {

            }
            type CML_MAC_ADDR_T {

            }
        }
    }

    typedef  CML_ACL_RULE_OPTS_T{
        type enumeration {
            enum log { value 0;    }
            enum count { value 1;    }
            enum shortcut { value 2;    }
        }
    }

    typedef  CML_OSPF_ROUTE_T{
        type enumeration {
            enum connected { value 0;    }
            enum kernel { value 1;    }
            enum static { value 2;    }
        }
    }

    typedef  CML_POLICY_MAP_T{
        type enumeration {
            enum ether-type { value 0;    }
            enum port { value 1;    }
            enum snpa { value 2;    }
            enum vid { value 3;    }
        }
    }

    typedef  CML_POLICY_MAP_ID_T{
        type union{

            type CML_IP_PREFIX_ADDR_T {

            }
            type CML_POLICY_MAP_T {

            }
        }
    }

    typedef  CML_ETHER_VALS_T{
        type enumeration {
            enum ipv4 { value 0;    }
            enum ipv6 { value 1;    }
            enum mpls-unicast { value 2;    }
            enum mpls-multicast { value 3;    }
            enum arp { value 4;    }
            enum ppoe-discover { value 5;    }
            enum ppoe-session { value 6;    }
        }
    }

    typedef  CML_ACL_ETHER_TYPE_T{
        type union{

            type CML_ETHER_VALS_T {

            }
            type CML_UINT16_T {

            }
        }
    }

    typedef  CML_ENDIS_T{
        type enumeration {
            enum disable { value 0;    }
            enum enable { value 1;    }
        }
    }

    typedef  CML_ROUTE_MAP_TYPE_T{
        type enumeration {
            enum client { value 0;    }
            enum ip { value 1;    }
            enum tag { value 2;    }
        }
    }

    typedef  CML_MIRROR_DIRECTION_T{
        type enumeration {
            enum bidir { value 0;    }
            enum in { value 1;    }
            enum out { value 2;    }
        }
    }

    typedef  CML_ROUTE_MAP_ACTION_T{
        type enumeration {
            enum deny { value 0;    }
            enum permit { value 1;    }
        }
    }

    typedef  CML_QUEUES_COUNT_T{
        type enumeration {
            enum 256 { value 256;    }
            enum 512 { value 512;    }
            enum 1024 { value 1024;    }
            enum 2048 { value 2048;    }
        }
    }

    typedef  CML_RT_T{
        type enumeration {
            enum import { value 0;    }
            enum export { value 1;    }
            enum both { value 2;    }
        }
    }

    typedef  CML_RIP_DIRECTION_T{
        type enumeration {
            enum in { value 0;    }
            enum out { value 1;    }
        }
    }

    typedef  CML_RIP_DIST_TYPE_T{
        type enumeration {
            enum in { value 0;    }
            enum out { value 1;    }
        }
    }

    typedef  CML_RIP_METRIC_T{
        type enumeration {
            enum disable { value 0;    }
            enum enable { value 1;    }
        }
    }

    typedef  CML_RIP_AUTHMODE_T{
        type enumeration {
            enum md5 { value 2;    }
            enum text { value 3;    }
        }
    }

    typedef  CML_RIP_ORIGIN_T{
        type enumeration {
            enum always { value 1;    }
        }
    }

    typedef  CML_VERSION_TYPE_T{
        type enumeration {
            enum 1 { value 1;    }
            enum 2 { value 2;    }
        }
    }

    typedef  CML_COMPATIBLE_VERSION_TYPE_T{
        type enumeration {
            enum 1 { value 1;    }
            enum 2 { value 2;    }
            enum 1-compatible { value 4;    }
        }
    }

    typedef  CML_RIP_REDIST_PROTOS_T{
        type enumeration {
            enum kernel { value 0;    }
            enum connected { value 1;    }
            enum static { value 2;    }
            enum ospf { value 3;    }
            enum isis { value 4;    }
            enum bgp { value 5;    }
        }
    }

    typedef  CML_RSVP_ADDR_T{
        type enumeration {
            enum p2mp { value 1;    }
        }
    }

    typedef  CML_HOSTP_KEY_TYPE_T{
        type enumeration {
            enum 0 { value 0;    }
            enum 7 { value 1;    }
        }
    }

    typedef  CML_HOSTP_LOCAL_NONE_TYPE_T{
        type enumeration {
            enum local { value 0;    }
            enum none { value 1;    }
        }
    }

    typedef  CML_HOSTP_LOCAL_TYPE_T{
        type enumeration {
            enum local { value 0;    }
            enum default { value 1;    }
        }
    }

    typedef  CML_SNMP_OID_TREE_T{
        type enumeration {
            enum included { value 1;    }
            enum excluded { value 2;    }
        }
    }

    typedef  CML_SNMP_LINK_TYPE_T{
        type enumeration {
            enum linkUp { value 1;    }
            enum linkDown { value 2;    }
        }
    }

    typedef  CML_SNMP_USER_T{
        type enumeration {
            enum network-operator { value 1;    }
            enum network-admin { value 2;    }
        }
    }

    typedef  CML_OSPF6_METRIC_TYPE_T{
        type enumeration {
            enum 1 { value 1;    }
            enum 2 { value 2;    }
        }
    }

    typedef  CML_UDLD_MODE_TYPE_T{
        type enumeration {
            enum normal { value 0;    }
            enum aggressive { value 1;    }
        }
    }

    typedef  CML_UDLD_STATE_TYPE_T{
        type enumeration {
            enum enable { value 0;    }
            enum disable { value 1;    }
        }
    }

    typedef  CML_UDLD_T{
        type enumeration {
            enum disable { value 0;    }
            enum enable { value 1;    }
        }
    }

    typedef  CML_SNMP_AUTH_T{
        type enumeration {
            enum md5 { value 1;    }
            enum sha { value 2;    }
        }
    }

    typedef  CML_SNMP_PRIV_T{
        type enumeration {
            enum des { value 1;    }
            enum aes { value 2;    }
        }
    }

    typedef  CML_SNMP_VERSION_T{
        type enumeration {
            enum 1 { value 1;    }
            enum 2c { value 2;    }
        }
    }

    typedef  CML_SNMP_TYPE_T{
        type enumeration {
            enum traps { value 1;    }
            enum informs { value 2;    }
        }
    }

    typedef  CML_VERSION3_T{
        type enumeration {
            enum noauth { value 1;    }
            enum auth { value 2;    }
            enum priv { value 3;    }
        }
    }

    typedef  CML_SNMP_ACCESS_T{
        type enumeration {
            enum ro { value 1;    }
            enum rw { value 2;    }
        }
    }

    typedef  CML_BFD_GTSM_STATE_T{
        type enumeration {
            enum enable { value 1;    }
            enum disable { value 2;    }
        }
    }

    typedef  CML_BFD_MULTIHOP_AUTH_TYPE_T{
        type enumeration {
            enum simple { value 1;    }
            enum keyed-md5 { value 2;    }
            enum meticulous-keyed-md5 { value 3;    }
            enum keyed-sha1 { value 4;    }
            enum meticulous-keyed-sha1 { value 5;    }
        }
    }

    typedef  CML_BFD_SESSION_STATE_T{
        type enumeration {
            enum disable { value 0;    }
            enum enable { value 1;    }
        }
    }

    typedef  CML_VRRP_VMAC_T{
        type enumeration {
            enum enable { value 1;    }
            enum disable { value 2;    }
        }
    }

    typedef  CML_VRRP_ACCEPT_MODE_T{
        type enumeration {
            enum true { value 1;    }
            enum false { value 2;    }
        }
    }

    typedef  CML_VRRP_PREEMPT_MODE_T{
        type enumeration {
            enum true { value 1;    }
            enum false { value 2;    }
        }
    }

    typedef  CML_LLDP_ADMIN_STATUS_T{
        type enumeration {
            enum rxonly { value 2;    }
            enum txonly { value 4;    }
            enum txrx { value 8;    }
        }
    }

    typedef  CML_LLDP_MEDDEV_T{
        type enumeration {
            enum ep-class1 { value 1;    }
            enum ep-class2 { value 2;    }
            enum ep-class3 { value 3;    }
            enum net-connect { value 4;    }
        }
    }

    typedef  CML_LLDP_CHASSIS_ID_T{
        type enumeration {
            enum chassis-component { value 0;    }
            enum if-alias { value 1;    }
            enum port-component { value 2;    }
            enum mac-address { value 3;    }
            enum ip-address { value 4;    }
            enum if-name { value 5;    }
            enum local { value 6;    }
        }
    }

    typedef  CML_LLDP_PORT_ID_T{
        type enumeration {
            enum if-alias { value 0;    }
            enum port-component { value 1;    }
            enum mac-address { value 2;    }
            enum ip-address { value 3;    }
            enum if-name { value 4;    }
            enum agent-circuit-id { value 5;    }
            enum local { value 6;    }
        }
    }

    typedef  CML_LLDP_PORT_ADDR_T{
        type enumeration {
            enum mac-address { value 1;    }
            enum ip-address { value 2;    }
        }
    }

    typedef  CML_LLDP_SET_STATE_T{
        type enumeration {
            enum disable { value 0;    }
            enum enable { value 1;    }
        }
    }

    typedef  CML_LLDP_TLV_MODE_T{
        type enumeration {
            enum manual { value 1;    }
            enum auto { value 2;    }
        }
    }

    typedef  CML_LLDP_IEEE_8023_T{
        type enumeration {
            enum mac-phy { value 0;    }
            enum max-mtu-size { value 1;    }
            enum power-via-mdi { value 2;    }
        }
    }

    typedef  CML_LLDP_IEEE_8021_T{
        type enumeration {
            enum port-vlanid { value 0;    }
            enum port-ptcl-vlanid { value 1;    }
            enum vlan-name { value 2;    }
            enum ptcl-identity { value 3;    }
            enum vid-digest { value 4;    }
            enum mgmt-vid { value 5;    }
            enum link-agg { value 6;    }
            enum data-center-bridging { value 7;    }
        }
    }

    typedef  CML_LLDP_BASIC_T{
        type enumeration {
            enum port-description { value 0;    }
            enum system-name { value 1;    }
            enum system-description { value 2;    }
            enum system-capabilities { value 3;    }
            enum management-address { value 4;    }
        }
    }

    typedef  CML_LLDP_AGENT_T{
        type enumeration {
            enum non-tpmr-bridge { value 0;    }
            enum customer-bridge { value 1;    }
            enum default { value 2;    }
        }
    }

    typedef  CML_LLDP_MED_T{
        type enumeration {
            enum network-policy { value 0;    }
            enum location { value 1;    }
            enum extended-power-via-mdi { value 2;    }
            enum inventory { value 3;    }
            enum media-capabilities { value 4;    }
        }
    }

    typedef  CML_LLDP_ENABLE_T{
        type enumeration {
            enum rxonly { value 2;    }
            enum txonly { value 4;    }
            enum txrx { value 8;    }
        }
    }

    typedef  CML_LLDP_MGMT_ADDR_T{
        type enumeration {
            enum mac-address { value 1;    }
            enum ip-address { value 2;    }
        }
    }

    typedef  CML_LLDP_CHASSIS_T{
        type enumeration {
            enum if-alias { value 0;    }
            enum ip-address { value 1;    }
            enum mac-address { value 2;    }
            enum if-name { value 3;    }
            enum locally-assigned { value 4;    }
        }
    }

    typedef  CML_LLDP_PORT_T{
        type enumeration {
            enum if-alias { value 1;    }
            enum mac-address { value 2;    }
            enum ip-address { value 3;    }
            enum if-name { value 4;    }
            enum agt-circuit-id { value 5;    }
            enum locally-assigned { value 6;    }
        }
    }

    typedef  CML_LACP_TIMEOUT_T{
        type enumeration {
            enum long { value 0;    }
            enum short { value 1;    }
        }
    }

    typedef  CML_LACP_MODE_T{
        type enumeration {
            enum passive { value 0;    }
            enum active { value 1;    }
            enum on { value 2;    }
        }
    }

    typedef  CML_LACP_PSC_T{
        type enumeration {
            enum dst-mac { value 1;    }
            enum src-mac { value 2;    }
            enum src-dst-mac { value 3;    }
            enum src-ip { value 4;    }
            enum dst-ip { value 5;    }
            enum src-dst-ip { value 6;    }
            enum src-port { value 7;    }
            enum dst-port { value 8;    }
            enum src-dst-port { value 9;    }
            enum rtag7 { value 12;    }
        }
    }

    typedef  CML_SSH_KEY_RSA_DSA_T{
        type enumeration {
            enum dsa { value 1;    }
            enum rsa { value 2;    }
        }
    }

    typedef  CML_LLDP_TVL_FLAG_T{
        type enumeration {
            enum ieee-8021-org-specific { value 32;    }
            enum ieee-8023-org-specific { value 64;    }
            enum basic-mgmt { value 128;    }
        }
    }

    typedef  CML_NSM_MPLS_LOG_T{
        type enumeration {
            enum error { value 1;    }
            enum warning { value 2;    }
            enum debug { value 4;    }
            enum notice { value 8;    }
            enum all { value 16;    }
        }
    }

    typedef  CML_LDP_ENABLE_TYPE_T{
        type enumeration {
            enum ipv4 { value 1;    }
            enum ipv6 { value 2;    }
            enum both { value 3;    }
        }
    }

    typedef  CML_NSM_CONTAINER_ETHERNET_TYPE_T{
        type enumeration {
            enum ethernet { value 0;    }
        }
    }

    typedef  CML_INTERFACE_ADMIN_STATE_T{
        type enumeration {
            enum up { value 0;    }
            enum down { value 1;    }
            enum administratively-down { value 2;    }
        }
    }

    typedef  CML_NSM_TUNNEL_DIRECTION_TYPE_T{
        type enumeration {
            enum forward { value 0;    }
            enum reverse { value 1;    }
        }
    }

    typedef  CML_LACP_BRIDGETYPE_T{
        type enumeration {
            enum customer-bridge-group-address { value 0;    }
            enum multicast-group-address { value 1;    }
            enum non-tmpr-group-address { value 2;    }
        }
    }

    typedef  CML_LACP_DISCARD_CONV_T{
        type enumeration {
            enum disable { value 0;    }
            enum enable { value 1;    }
        }
    }

}