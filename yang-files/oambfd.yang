/*
* Copyright (C) 2016 IP Infusion, Inc. 
*  All Rights Reserved.
*
*** Auto generated by zebmdc

* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.

* File name : oambfd.yang
*
*/

submodule oambfd {

    belongs-to  ZebOS { prefix ZebOS; }
    include interface;


    import cml_data_types {
        prefix cml_data_types;
    }

    import feature_list {
        prefix feature_list;
    }


    revision "2016-10-20" {
        description "Revisied on 2016-10-20.";    }



    grouping bfd-grouping {
        list bfd {
             
            description
                "bfd";

            config true;
            key "bfdProcessId";

            
            leaf vrId  {
                type  cml_data_types:CML_INT32_T;  
                config true;
            } // END of vrId definition.

            leaf bfdProcessId  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of bfdProcessId definition.

            leaf bfdGtsmState  {
                type  cml_data_types:CML_BFD_GTSM_STATE_T;  
                config true;
                description "bfd Gtsm(Generalized TTL Security Mechanism)";
            } // END of bfdGtsmState definition.

            leaf bfdNotificationState  {
                type  cml_data_types:CML_BFD_SESSION_STATE_T;  
                config true;
                description "BFD Notification State";
            } // END of bfdNotificationState definition.

            leaf bfdEchoState  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
                description "BFD Echo State";
            } // END of bfdEchoState definition.

            leaf bfdGtsmTtl  {
                type  cml_data_types:CML_UINT8_T {
                     range "1..255";
                }
                default "255";
                config true;
                description "bfd GTSM TTL";
            } // END of bfdGtsmTtl definition.

            leaf bfdSlowTimer  {
                type  cml_data_types:CML_UINT32_T {
                     range "1000..30000";
                }
                default "2000";
                config true;
            } // END of bfdSlowTimer definition.

            leaf-list bfdMultihopIntervalIpv4Addr  {
                type  cml_data_types:CML_IPV4_ADDR_T;  
                config true;
            } // END of bfdMultihopIntervalIpv4Addr definition.

            leaf-list bfdIpv4MultihopMinTx  {
                type  cml_data_types:CML_UINT32_T {
                     range "50..999";
                }
                config true;
            } // END of bfdIpv4MultihopMinTx definition.

            leaf-list bfdIpv4MultihopMinRx  {
                type  cml_data_types:CML_UINT32_T {
                     range "50..999";
                }
                config true;
            } // END of bfdIpv4MultihopMinRx definition.

            leaf-list bfdIpv4MultihopMulti  {
                type  cml_data_types:CML_UINT32_T {
                     range "3..50";
                }
                config true;
            } // END of bfdIpv4MultihopMulti definition.

            leaf bfdMultihopIntervalIpv6Addr  {
                type  cml_data_types:CML_IPV6_ADDR_T;  
                config true;
            } // END of bfdMultihopIntervalIpv6Addr definition.

            leaf bfdIpv6MultihopMinTx  {
                type  cml_data_types:CML_UINT32_T {
                     range "50..999";
                }
                default "250";
                config true;
            } // END of bfdIpv6MultihopMinTx definition.

            leaf bfdIpv6MultihopMinRx  {
                type  cml_data_types:CML_UINT32_T {
                     range "50..999";
                }
                default "250";
                config true;
            } // END of bfdIpv6MultihopMinRx definition.

            leaf bfdIpv6MultihopMulti  {
                type  cml_data_types:CML_UINT32_T {
                     range "3..50";
                }
                default "3";
                config true;
            } // END of bfdIpv6MultihopMulti definition.


            list bfdMultihopKeyChain {
                 
                description
                    "bfdMultihopKeyChain";

                config true;
                key "bfdMultihopAddr";

                
                leaf bfdMultihopAddr  {
                    type  cml_data_types:CML_IP_ADDR_T;  
                    config true;
                    description "BFD multihop-peer";
                } // END of bfdMultihopAddr definition.

                leaf bfdAuthType  {
                    mandatory true;
                    type  cml_data_types:CML_BFD_MULTIHOP_AUTH_TYPE_T;  
                    config true;
                    description "BFD Authentication Type";
                } // END of bfdAuthType definition.

                leaf bfdKeyChain  {
                    mandatory true;
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                    description "BFD key-chain";
                } // END of bfdKeyChain definition.

            } // End of bfdMultihopKeyChain-list

            list bfdMultihopKeyStr {
                 
                description
                    "bfdMultihopKeyStr";

                config true;
                key "bfdMultihopAddr";

                
                leaf bfdMultihopAddr  {
                    type  cml_data_types:CML_IP_ADDR_T;  
                    config true;
                } // END of bfdMultihopAddr definition.

                leaf bfdAuthType  {
                    mandatory true;
                    type  cml_data_types:CML_BFD_MULTIHOP_AUTH_TYPE_T;  
                    config true;
                } // END of bfdAuthType definition.

                leaf bfdMultihopKeyId  {
                    mandatory true;
                    type  cml_data_types:CML_UINT32_T {
                         range "0..255";
                    }
                    config true;
                } // END of bfdMultihopKeyId definition.

                leaf bfdKeyStr  {
                    mandatory true;
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of bfdKeyStr definition.

            } // End of bfdMultihopKeyStr-list
        } // End of bfd-list
    } // END of bfd-grouping definition.


    grouping bfdInterface-grouping {
        list bfdInterface {
             
            description
                "OSPF interface related operations";

            config true;
            key "ifName";

            
            leaf ifName  {
                type  cml_data_types:CML_STRING_T;  
                config true;
            } // END of ifName definition.

            leaf vrId  {
                type  cml_data_types:CML_INT32_T;  
                config true;
            } // END of vrId definition.

            leaf bfdSessionState  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of bfdSessionState definition.

            leaf bfdIpv4State  {
                type  cml_data_types:CML_BOOL_T;  
                config true;
                description "BFD ipv4 State";
            } // END of bfdIpv4State definition.

            leaf bfdMinTx  {
                type  cml_data_types:CML_UINT32_T {
                     range "50..999";
                }
                default "250";
                config true;
                description "bfd interval";
            } // END of bfdMinTx definition.

            leaf bfdMinRx  {
                type  cml_data_types:CML_UINT32_T {
                     range "50..999";
                }
                default "250";
                config true;
            } // END of bfdMinRx definition.

            leaf bfdIntervalMultiplier  {
                type  cml_data_types:CML_UINT32_T {
                     range "3..50";
                }
                default "3";
                config true;
                description "bfd Interval Multiplier";
            } // END of bfdIntervalMultiplier definition.

            leaf bfdEchoInterval  {
                type  cml_data_types:CML_UINT32_T {
                     range "1..4294967";
                }
                default "1000";
                config true;
            } // END of bfdEchoInterval definition.


            list bfdIpv4UserAdd {
                 
                description
                    "bfdIpv4UserAdd";

                config true;
                key "bfdUserSrcAddr";

                
                leaf bfdUserSrcAddr  {
                    type  cml_data_types:CML_IPV4_ADDR_T;  
                    config true;
                    description "bfd ipv4 User Session";
                } // END of bfdUserSrcAddr definition.

                leaf bfdUserDestAddr  {
                    mandatory true;
                    type  cml_data_types:CML_IPV4_ADDR_T;  
                    config true;
                } // END of bfdUserDestAddr definition.

                leaf multihop  {
                    mandatory true;
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of multihop definition.

                leaf demandMode  {
                    mandatory true;
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of demandMode definition.

                leaf nonPersistant  {
                    mandatory true;
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of nonPersistant definition.

                leaf adminDown  {
                    mandatory true;
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of adminDown definition.

            } // End of bfdIpv4UserAdd-list

            list bfdIpv6UserAdd {
                 
                description
                    "bfdIpv6UserAdd";

                config true;
                key "bfdIpv6UserSrcAddr";

                
                leaf bfdIpv6UserSrcAddr  {
                    type  cml_data_types:CML_IPV6_ADDR_T;  
                    config true;
                    description "bfd ipv6 User Session";
                } // END of bfdIpv6UserSrcAddr definition.

                leaf bfdIpv6UserDestAddr  {
                    mandatory true;
                    type  cml_data_types:CML_IPV6_ADDR_T;  
                    config true;
                } // END of bfdIpv6UserDestAddr definition.

                leaf ipv6Multihop  {
                    mandatory true;
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of ipv6Multihop definition.

                leaf ipv6DemandMode  {
                    mandatory true;
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of ipv6DemandMode definition.

                leaf ipv6NonPersistant  {
                    mandatory true;
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of ipv6NonPersistant definition.

                leaf ipv6AdminDown  {
                    mandatory true;
                    type  cml_data_types:CML_BOOL_T;  
                    config true;
                } // END of ipv6AdminDown definition.

            } // End of bfdIpv6UserAdd-list

            list bfdIfAuthKeyChain {
                 
                description
                    "bfdIfAuthKeyChain";

                config true;
                key "bfdIfAuthType";

                
                leaf bfdIfAuthType  {
                    type  cml_data_types:CML_BFD_MULTIHOP_AUTH_TYPE_T;  
                    config true;
                } // END of bfdIfAuthType definition.

                leaf bfdIfKeyChain  {
                    mandatory true;
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of bfdIfKeyChain definition.

            } // End of bfdIfAuthKeyChain-list

            list bfdIfAuthKeyStr {
                 
                description
                    "bfdIfAuthKeyStr";

                config true;
                key "bfdIfAuthType";

                
                leaf bfdIfAuthType  {
                    type  cml_data_types:CML_BFD_MULTIHOP_AUTH_TYPE_T;  
                    config true;
                } // END of bfdIfAuthType definition.

                leaf bfdIfKeyId  {
                    mandatory true;
                    type  cml_data_types:CML_UINT32_T {
                         range "0..255";
                    }
                    config true;
                } // END of bfdIfKeyId definition.

                leaf bfdIfKeyStr  {
                    mandatory true;
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of bfdIfKeyStr definition.

            } // End of bfdIfAuthKeyStr-list
        } // End of bfdInterface-list
    } // END of bfdInterface-grouping definition.

    grouping  oamMpls-grouping {
    container oamMpls {
                config true;

        description
            "oamMpls";

        leaf pingRequest  {
            type  cml_data_types:CML_BOOL_T;  
            config true;
            description "mpls ping request";
        } // END of pingRequest definition.

        leaf pingReply  {
            type  cml_data_types:CML_BOOL_T;  
            config true;
            description "mpls ping reply";
        } // END of pingReply definition.

    } // END of oamMpls-container definition.
    } // END of oamMpls-container definition.


}