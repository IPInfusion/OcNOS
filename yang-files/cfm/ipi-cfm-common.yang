/*
* Copyright (C) 2019 IP Infusion, Inc.
*  All Rights Reserved.
*
*** Auto generated by zebmdc

* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.

* File name : ipi-cfm-common.yang
*
*/

submodule ipi-cfm-common {

    yang-version 1.1;

    belongs-to  ipi-cfm { prefix ipi-cfm; }

    import feature-list {
        prefix feature-list;
        revision-date 2022-03-03;
    }

    import ietf-yang-types {
        prefix yang;
        revision-date 2013-07-15;
    }

    import cml-data-types {
        prefix cml-data-types;
        revision-date 2022-01-07;
    }

    import ipi-cfm-data-types {
        prefix ipi-cfm-data-types;
        revision-date 2018-12-06;
    }

    import ipi-network-instance {
        prefix ipi-network-instance;
        revision-date 2021-11-10;
    }

    import ipi-interface {
        prefix ipi-interface;
        revision-date 2021-12-15;
    }

    import ipi-bridge {
        prefix ipi-bridge;
        revision-date 2022-01-13;
    }

    organization
        "IP Infusion Inc.";

    contact
        "Address: 3965 Freedom Circle, Suite 200, Santa Clara, CA 95054
         Phone: +1 408-400-1900
         E-mail: support@ipinfusion.com
         Web: http://www.ipinfusion.com/";

    description
        "Data model for IPI CFM common Configuration and Operational state";


    revision "2021-12-20" {
        description "Made bridge-id attribute optional for MD object to remove bridge dependency for L2/VLAN CFM";
        reference " 0.1.2.";
    }

    revision "2021-12-15" {
        description "Removed skip-yang as FW dependency is resolved";
        reference " 0.1.1.";
    }

    revision "2021-12-09" {
        description "Initial version";
        reference " 0.1.0.";
    }

    grouping cfm-md-config {
        description
            "Configuration data definitions related to Maintenance Domain";
        leaf md-name  {
            type  string {
                length "5..7";
                pattern "[^?' =,>|]+";
            }
            description "A unique identifier of a Maintenance Domain";
        } // END of md-name definition.

        leaf type  {
            type  ipi-cfm-data-types:cfm_md_type_t;
            mandatory true;
            description "Type discriminator for the value union described in the 'md-name' leaf";
        } // END of type definition.

        leaf level  {
            type  uint8 {
                 range "0..7"  {
                    description "0..7:Enter the level ranging from 0-7";
                 }
            }
            mandatory true;
            description "Integer identifying the Maintenance Domain Level (MD Level)";
        } // END of level definition.

        leaf mip-creation  {
            if-feature feature-list:HAVE_PROVIDER_BRIDGE;
            type  ipi-cfm-data-types:cfm_mip_creation_mode_t;
            mandatory true;
            description "This parameter indicates whether the management entity can create MIPs
                        for this MD at this level";
        } // END of mip-creation definition.

        leaf bridge-id  {
            type  leafref {
                path  "/ipi-network-instance:network-instances/ipi-network-instance:network-instance/ipi-network-instance:instance-name";
            }
            description "This parameter indicates which bridge this maintenance domain will be
                        augumented to.";
        } // END of bridge-id definition.

    } // END of cfm-md-config definition.
    grouping cfm-ma-config {
        description
            "Configuration data definitions related to Maintenance Association";
        leaf ma-name  {
            type  string {
                length "1..6";
                pattern "[^?' =,>|]+";
            }
            description "The value union for the Maintenance Association Name.";
        } // END of ma-name definition.

        leaf type  {
            type  ipi-cfm-data-types:cfm_ma_type_t;
            mandatory true;
            description "Name type discriminator for the 'ma-name' leaf";
        } // END of type definition.

        leaf vlan-id  {
            type  uint16;
            description "The VID monitored by this MA";
        } // END of vlan-id definition.

        leaf mip-creation  {
            type  ipi-cfm-data-types:cfm_ma_mip_creation_mode_t;
            description "This parameter indicates whether the management entity can create MIPs
                        for this MA";
        } // END of mip-creation definition.

        leaf link-level-ma  {
            type  empty;
            description "Use this attribute to set the Service as Link Level MA";
        } // END of link-level-ma definition.

        leaf ccm-interval  {
            type  ipi-cfm-data-types:cfm_ccm_interval_t;
            description "The interval between CCM transmissions to be used by all MEPs in the
                        MA";
        } // END of ccm-interval definition.

        leaf enable-rmep-auto-discovery  {
            if-feature feature-list:HAVE_DUNE;
            type  empty;
            description "This attribute tells whether remote MEPs can be learnt from the peer";
        } // END of enable-rmep-auto-discovery definition.

        leaf-list static-rmep-identifiers  {
            type  uint16 {
                 range "1..8191"  {
                    description "1..8191:Enter the MEPID ranging from 1-8191";
                 }
            }
            description "A list of static remote MEPs in a specified MA.";
        } // END of static-rmep-identifiers definition.

        leaf-list mip-interface-name  {
            when " /ipi-network-instance:network-instances/ipi-network-instance:network-instance/ipi-bridge:bridge/ipi-bridge:bridge-ports/ipi-bridge:interface/ipi-bridge:config/ipi-bridge:name ";
            type  leafref {
                path  "/ipi-interface:interfaces/ipi-interface:interface/ipi-interface:name";
            }
            description "A list of static MIPs configured on the specified interfaces";
        } // END of mip-interface-name definition.

    } // END of cfm-ma-config definition.
    grouping cfm-default-mip-state {
        description
            "Grouping for default MIPs state parameters";
        leaf interface-name  {
            type  string {
                length "1..1965";
                pattern "[^?' =,>|]+";
            }
            description "An interface, either a Bridge Port or an aggregated IEEE 802.3 port
                        within a Bridge Port, to which the MEP is attached. Each interface in
                        the system is uniquely identified by an interface-name. The structure
                        and content of the name is outside the scope of this specification";
        } // END of interface-name definition.

        leaf vlan-id  {
            type  uint16;
            description "VLAN ID of the MIP";
        } // END of vlan-id definition.

        leaf mac-address  {
            type  cml-data-types:cml_mac_addr_t {
                length "1..1965";
            }
            description "The MAC address of the MIP";
        } // END of mac-address definition.

    } // END of cfm-default-mip-state definition.
    grouping cfm-default-mip-top {
        description
            "Grouping for default MIPs created";

        list default-mip {
            key "interface-name";
            config false;
            description
                "List of all default MIPs created";
            leaf interface-name  {
                type  leafref {
                    path  "../state/interface-name";
                }
                description "An interface, either a Bridge Port or an LAG port within a Bridge
                            Port, to which the MEP is attached";
            } // END of interface-name definition.

            container state {
                config false;
                description
                    "State data for default MIPs";
                uses cfm-default-mip-state;
            } // END of state-container definition.
        } // End of default-mip-list
    } // END of cfm-default-mip-top definition.
    grouping cfm-ma-default-mips-top {
        description
            "Top level grouping for the default MIPs created";
        container default-mips {
            config false;
            description
                "Main container for Default MIPs created";
            uses cfm-default-mip-top;
        } // END of default-mips-container definition.
    } // END of cfm-ma-default-mips-top definition.
    grouping cfm-mep-config {
        description
            "Configuration data definitions related to MEP";
        leaf mep-id  {
            type  uint16 {
                 range "1..8191"  {
                    description "1..8191:Enter the MEPID ranging from 1-8191";
                 }
            }
            description "Integer that is unique among all the MEPs in the same MA. Other
                        definition is: a small integer, unique over a given Maintenance
                        Association, identifying a specific Maintenance association End Point";
        } // END of mep-id definition.

        leaf interface-name  {
            type  leafref {
                path  "/ipi-interface:interfaces/ipi-interface:interface/ipi-interface:name";
            }
            mandatory true;
            description "An interface, either a Bridge Port or an LAG port within a Bridge
                        Port, to which the MEP is attached";
        } // END of interface-name definition.

        leaf direction  {
            type  ipi-cfm-data-types:cfm_mep_direction_t;
            mandatory true;
            description "A value indicating the direction in which the MEP faces on the
                        interface";
        } // END of direction definition.

        leaf administrative-state  {
            type  ipi-cfm-data-types:cfm_mep_state_t;
            mandatory true;
            description "The administrative state of the MEP";
        } // END of administrative-state definition.

    } // END of cfm-mep-config definition.
    grouping cfm-mep-state {
        description
            "Grouping for MEP's state parameters";
        leaf mac-address  {
            type  cml-data-types:cml_mac_addr_t {
                length "1..1965";
            }
            description "The MAC address of the MEP";
        } // END of mac-address definition.

        leaf ma-status  {
            type  ipi-cfm-data-types:cfm_ma_status_t;
            description "Status of MA whether it's active or not";
        } // END of ma-status definition.

        leaf mep-connectivity-status  {
            type  ipi-cfm-data-types:cfm_mep_connectivity_status_t;
            description "Status of MEP";
        } // END of mep-connectivity-status definition.

    } // END of cfm-mep-state definition.
    grouping cfm-mep-ccm-config {
        description
            "Configuration data definitions related to MEP's CC mesages";
        leaf enable-cc-multicast  {
            type  empty;
            description "An indicator of whether the MEP is or is not to generate CCMs";
        } // END of enable-cc-multicast definition.

        leaf lowest-fault-priority-defect  {
            type  ipi-cfm-data-types:cfm_mep_lowest_fault_priority_t;
            default "defMACstatus";
            description "The lowest priority defect that is allowed to generate a Fault Alarm.
                        The non-existence of this leaf means that no defects are to be
                        reported";
        } // END of lowest-fault-priority-defect definition.

    } // END of cfm-mep-ccm-config definition.
    grouping cfm-mep-ccm-state {
        description
            "Grouping for MEP's CC message state paramters";
        leaf highest-priority-defect-found  {
            type  ipi-cfm-data-types:cfm_mep_highest_fault_defect_t;
            description "Value indicating the highest-priority defect that has been present
                        since the MEP Fault Notification Generator state machine was last in
                        the FNG_RESET state. The non-existence of this leaf represents that no
                        defect has been present since the last FNG_RESET state.";
        } // END of highest-priority-defect-found definition.

        leaf cc-received-defect  {
            type  ipi-cfm-data-types:cfm_received_ccm_defect_t;
            description "Defect if received in the last CCM PDU";
        } // END of cc-received-defect definition.

        leaf cc-messages-received  {
            type  yang:zero-based-counter32;
            description "The total number of CC messages received";
        } // END of cc-messages-received definition.

        leaf cc-messages-sent  {
            type  yang:zero-based-counter32;
            description "The total number of CC messages transmitted";
        } // END of cc-messages-sent definition.

    } // END of cfm-mep-ccm-state definition.
    grouping cfm-remote-mep-state {
        description
            "Grouping for remote MEPs state parameters";
        leaf rmep-id  {
            type  uint16;
            description "The MEPID of a remote MEP";
        } // END of rmep-id definition.

        leaf mac-address  {
            type  cml-data-types:cml_mac_addr_t {
                length "1..1965";
            }
            description "The MAC address of the remote MEP";
        } // END of mac-address definition.

        leaf rdi  {
            type  empty;
            description "An indication of the state of the RDI bit in the last received CCM";
        } // END of rdi definition.

    } // END of cfm-remote-mep-state definition.
    grouping cfm-remote-meps-top {
        description
            "Grouping for Remote MEP Database";
        container remote-mep-database {
            config false;
            description
                "Enclosing container for the Remote MEP Database";

            list remote-mep {
                key "rmep-id";
                config false;
                description
                    "List of Remote MEPs learnt or statically configured";
                leaf rmep-id  {
                    type  leafref {
                        path  "../state/rmep-id";
                    }
                    description "The MEPID of a remote MEP";
                } // END of rmep-id definition.

                container state {
                    config false;
                    description
                        "State data for remote MEPs";
                    uses cfm-remote-mep-state;
                } // END of state-container definition.
            } // End of remote-mep-list
        } // END of remote-mep-database-container definition.
    } // END of cfm-remote-meps-top definition.


}