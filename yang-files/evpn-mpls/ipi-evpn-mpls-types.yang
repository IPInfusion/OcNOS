/*
* Copyright (C) 2019 IP Infusion, Inc.
*  All Rights Reserved.
*
*** Auto generated by zebmdc

* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.

* File name : ipi-evpn-mpls-types.yang
*
*/

module ipi-evpn-mpls-types {

    yang-version 1.1;

    namespace   "http://www.ipinfusion.com/yang/ocnos/ipi-evpn-mpls-types";

    prefix "ipi-evpn-mpls-types";

    organization
        "IP Infusion Inc.";

    contact
        "Address: 3965 Freedom Circle, Suite 200, Santa Clara, CA 95054
         Phone: +1 408-400-1900
         E-mail: support@ipinfusion.com
         Web: http://www.ipinfusion.com/";

    description
        "YANG version of the ipi-evpn-mpls-types";


    revision "2021-03-04" {
        description "Initial Version";
        reference " 0.1.0.";
    }



    typedef  evpn_mpls_acc_if_t {
        type enumeration {
            enum access-if {
                value 1;
                description "EVPN MPLS Access interface mode change";
            }
        }
        description "type definition for EVPN_MPLS_ACC_IF_T";
    }

    typedef  evpn_mpls_host_t {
        type enumeration {
            enum Dynamic {
                value 0;
                description "Host type is Dynamic";
            }
            enum Static-Local {
                value 1;
                description "Host type is Static Local";
            }
            enum Remote-Dynamic {
                value 2;
                description "Host type is Evpn Dynamic";
            }
            enum Remote-Static {
                value 3;
                description "Host type is Evpn Static";
            }
            enum Static-Remote {
                value 4;
                description "Host type is Static Remote";
            }
        }
        description "type definition for EVPN_MPLS_HOST_T";
    }

    typedef  evpn_mpls_host_status_t {
        type enumeration {
            enum --- {
                value 0;
                description "Default host status";
            }
            enum Max-Move-conflict {
                value 1;
                description "MAC has moved too many times";
            }
            enum Discard {
                value 2;
                description "MAC is moved to the discard state";
            }
        }
        description "type definition for EVPN_MPLS_HOST_STATUS_T";
    }

    typedef  evpn_mpls_static_host_state_t {
        type enumeration {
            enum Inactive {
                value 1;
                description "static host state Inactive";
            }
            enum Active {
                value 2;
                description "static host state Active";
            }
            enum Conflict {
                value 4;
                description "static host state Conflict";
            }
            enum Learnt-Conflict {
                value 8;
                description "static host state Learnt Conflict";
            }
            enum Discard-Inactive {
                value 16;
                description "static host state Discard Inactive";
            }
        }
        description "type definition for EVPN_MPLS_STATIC_HOST_STATE_T";
    }

    typedef  evpn_mpls_tunnel_status_t {
        type enumeration {
            enum Deleted {
                value 0;
                description "Tunnel is deleted";
            }
            enum Un-Resolved {
                value 1;
                description "Tunnel not established";
            }
            enum Resolved {
                value 2;
                description "Tunnel established but not in hardware";
            }
            enum Installed {
                value 3;
                description "Tunnel established succesfully in hardware";
            }
        }
        description "type definition for EVPN_MPLS_TUNNEL_STATUS_T";
    }

    typedef  evpn_mpls_egress_dir_t {
        type enumeration {
            enum egress {
                value 1;
                description "egress direction";
            }
        }
        description "type definition for EVPN_MPLS_EGRESS_DIR_T";
    }

    typedef  evpn_mpls_ingress_dir_t {
        type enumeration {
            enum ingress {
                value 1;
                description "ingress direction";
            }
        }
        description "type definition for EVPN_MPLS_INGRESS_DIR_T";
    }

}