/*
* Copyright (C) 2016 IP Infusion, Inc. 
*  All Rights Reserved.
*
*** Auto generated by zebmdc

* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.

* File name : rib.yang
*
*/

submodule rib {

    belongs-to  ZebOS { prefix ZebOS; }
    include vrf;


    import cml_data_types {
        prefix cml_data_types;
    }

    revision "2015-10-08" {
        description "Revisied on 2015-10-08.";    }



    grouping rib-grouping {
        list rib {
             

            description
                "static route with ifname";

            config true;
            key "ipv4DestinationPrefixAddr";

            
            leaf vrId  {
                mandatory true;                
                type  leafref {
                    path  "/vr/vrId";
                }
            } // END of vrId definition.

            leaf ipv4DestinationPrefixAddr  {
                mandatory true;                
                type  cml_data_types:CML_STRING_T;  
                config true;
            } // END of ipv4DestinationPrefixAddr definition.


            list ribGateway {
                 

                description
                    "static route with gateway";

                config true;
                key "ipGatewayStr";

                
                leaf ipGatewayStr  {
                    mandatory true;                    
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of ipGatewayStr definition.

                leaf distanceValue  {
                    mandatory true;                    
                    type  cml_data_types:CML_INT32_T {
                         range "1..255";
                    }
                    config true;
                } // END of distanceValue definition.

                leaf tagValue  {
                    mandatory true;                    
                    type  cml_data_types:CML_UINT32_T {
                         range "1..4294967295";
                    }
                    config true;
                } // END of tagValue definition.

                leaf staticRouteDescription  {
                    mandatory true;                    
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of staticRouteDescription definition.

            } // End of ribGateway-list

            list ribGatewayIfname {
                 

                description
                    "static route with gateway and ifname";

                config true;
                key "ifName";

                
                leaf ifName  {
                    mandatory true;                    
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of ifName definition.

                leaf ifdistanceValue  {
                    mandatory true;                    
                    type  cml_data_types:CML_INT32_T {
                         range "1..255";
                    }
                    config true;
                } // END of ifdistanceValue definition.

                leaf iftagValue  {
                    mandatory true;                    
                    type  cml_data_types:CML_UINT32_T {
                         range "1..4294967295";
                    }
                    config true;
                } // END of iftagValue definition.

                leaf ifstaticRouteDescription  {
                    mandatory true;                    
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of ifstaticRouteDescription definition.

            } // End of ribGatewayIfname-list
        } // End of rib-list
    } // END of rib-grouping definition.


    grouping ribipv6-grouping {
        list ribipv6 {
             

            description
                "ribipv6";

            config true;
            key "ipv6DestinationPrefixAddr";

            
            leaf vrId  {
                mandatory true;                
                type  leafref {
                    path  "/vr/vrId";
                }
            } // END of vrId definition.

            leaf ipv6DestinationPrefixAddr  {
                mandatory true;                
                type  cml_data_types:CML_STRING_T;  
                config true;
            } // END of ipv6DestinationPrefixAddr definition.


            list ribipv6Gateway {
                 

                description
                    "ribipv6Gateway";

                config true;
                key "ipv6GatewayStr";

                
                leaf ipv6GatewayStr  {
                    mandatory true;                    
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of ipv6GatewayStr definition.

                leaf distance  {
                    mandatory true;                    
                    type  cml_data_types:CML_INT32_T {
                         range "1..255";
                    }
                    config true;
                } // END of distance definition.

            } // End of ribipv6Gateway-list

            list ribipv6Ifname {
                 

                description
                    "ribipv6Ifname";

                config true;
                key "ifName";

                
                leaf ifName  {
                    mandatory true;                    
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of ifName definition.

                leaf distance  {
                    mandatory true;                    
                    type  cml_data_types:CML_INT32_T {
                         range "1..255";
                    }
                    config true;
                } // END of distance definition.

            } // End of ribipv6Ifname-list
        } // End of ribipv6-list
    } // END of ribipv6-grouping definition.


    grouping mroute-grouping {
        list mroute {
             

            description
                "mroute";

            config true;
            key "vrfName";

            
            leaf vrId  {
                mandatory true;                
                type  leafref {
                    path  "/vr/vrId";
                }
            } // END of vrId definition.

            leaf vrfName  {
                mandatory true;                
                type  leafref {
                    path  "/vr/vrf/vrfName";
                }
            } // END of vrfName definition.

            leaf mrouteIfIndex  {
                mandatory false;                
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of mrouteIfIndex definition.


            list mroutePrefix {
                 

                description
                    "mroutePrefix";

                config true;
                key "mrouteIpv4Prefix";

                
                leaf mrouteIpv4Prefix  {
                    mandatory true;                    
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of mrouteIpv4Prefix definition.

                leaf mrouteGateStr  {
                    mandatory true;                    
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of mrouteGateStr definition.

                leaf mrouteifname  {
                    mandatory true;                    
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of mrouteifname definition.

                leaf routeType  {
                    mandatory true;                    
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of routeType definition.

                leaf mrouteDistance  {
                    mandatory true;                    
                    type  cml_data_types:CML_INT32_T {
                         range "1..255";
                    }
                    config true;
                } // END of mrouteDistance definition.

            } // End of mroutePrefix-list

            list mrouteIpv6Prefix {
                 

                description
                    "mrouteIpv6Prefix";

                config true;
                key "mrouteIpv6Prefix";

                
                leaf mrouteIpv6Prefix  {
                    mandatory true;                    
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of mrouteIpv6Prefix definition.

                leaf mrouteIpv6GateStr  {
                    mandatory true;                    
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of mrouteIpv6GateStr definition.

                leaf mrouteIpv6ifname  {
                    mandatory true;                    
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of mrouteIpv6ifname definition.

                leaf ipv6RouteType  {
                    mandatory true;                    
                    type  cml_data_types:CML_STRING_T;  
                    config true;
                } // END of ipv6RouteType definition.

                leaf mrouteIpv6Distance  {
                    mandatory true;                    
                    type  cml_data_types:CML_INT32_T {
                         range "1..255";
                    }
                    config true;
                } // END of mrouteIpv6Distance definition.

            } // End of mrouteIpv6Prefix-list
        } // End of mroute-list
    } // END of mroute-grouping definition.


}