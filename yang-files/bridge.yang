/*
* Copyright (C) 2016 IP Infusion, Inc. 
*  All Rights Reserved.
*
*** Auto generated by zebmdc

* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.

* File name : bridge.yang
*
*/

submodule bridge {

    belongs-to  ZebOS { prefix ZebOS; }
    include interface;
            include vlan;
            include mstp;


    import cml_data_types {
        prefix cml_data_types;
    }

    description
        "Layer-2 bridge configurations";


    revision "2015-04-25" {
        description "Revisied on 2015-04-25.";    }



    grouping bridge-grouping {
        list bridge {
             

            description
                "bridge";

            config true;
            key "bridgeId";

            
            leaf vrId  {
                mandatory false;                
                type  leafref {
                    path  "/vr/vrId";
                }
            } // END of vrId definition.

            leaf bridgeId  {
                mandatory true;                
                type  cml_data_types:CML_STRING_T;  
                config true;
            } // END of bridgeId definition.

            leaf bridgeType  {
                mandatory true;                
                type  cml_data_types:CML_BRIDGE_PROTOCOL_T;  
                config true;
            } // END of bridgeType definition.

            leaf topologyType  {
                mandatory false;                
                type  cml_data_types:CML_BRIDGE_TOPOLOGY_T;  
                default "ring";
                config true;
            } // END of topologyType definition.

            leaf macAddr  {
                mandatory false;                
                type  cml_data_types:CML_STRING_T;  
                config true;
                description "bridge address";
            } // END of macAddr definition.

            leaf discardForward  {
                mandatory false;                
                type  cml_data_types:CML_DISCARDFORWARD_T;  
                config true;
            } // END of discardForward definition.

            leaf ifName  {
                mandatory false;                
                type  leafref {
                    path  "/vr/interface/ifName";
                }
            } // END of ifName definition.

            leaf bridgeForward  {
                mandatory false;                
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of bridgeForward definition.

            leaf forward  {
                mandatory false;                
                type  cml_data_types:CML_BRIDGE_FORWARDING_SET_T;  
                config true;
            } // END of forward definition.

            leaf ageingStatus  {
                mandatory false;                
                type  cml_data_types:CML_BRIDGE_AGEING_STATE;  
                config true;
                description "bridge ageing";
            } // END of ageingStatus definition.

            leaf learning  {
                mandatory false;                
                type  cml_data_types:CML_BOOL_T;  
                default false;
                config true;
                description "bridge acquire";
            } // END of learning definition.

            leaf ageingTime  {
                mandatory false;                
                type  cml_data_types:CML_INT32_T {
                     range "10..1000000";
                }
                default "300";
                config true;
                description "bridge ageing time";
            } // END of ageingTime definition.

            leaf mstpEnabled  {
                mandatory false;                
                type  cml_data_types:CML_ENABLE_DISABLE_T;  
                default "disable";
                config true;
                description "bridge multiple-spanning-tree";
            } // END of mstpEnabled definition.

            leaf helloTime  {
                mandatory false;                
                type  cml_data_types:CML_INT32_T {
                     range "1..10";
                }
                default "2";
                config true;
                description "bridge hello-time";
            } // END of helloTime definition.

            leaf maxAge  {
                mandatory false;                
                type  cml_data_types:CML_INT32_T {
                     range "6..40";
                }
                default "20";
                config true;
                description "bridge max-age";
            } // END of maxAge definition.

            leaf priority  {
                mandatory false;                
                type  cml_data_types:CML_UINT32_T {
                     range "0..61440";
                }
                default "32768";
                config true;
                description "bridge priority";
            } // END of priority definition.

            leaf forwardDelay  {
                mandatory false;                
                type  cml_data_types:CML_INT32_T {
                     range "4..30";
                }
                default "15";
                config true;
                description "bridge forward-time";
            } // END of forwardDelay definition.

            leaf transmitHoldCount  {
                mandatory false;                
                type  cml_data_types:CML_UINT8_T {
                     range "1..10";
                }
                default "6";
                config true;
                description "bridge transmit-holdcount";
            } // END of transmitHoldCount definition.

            leaf bpduguardEnable  {
                mandatory false;                
                type  cml_data_types:CML_BOOL_T;  
                default false;
                config true;
                description "bridge spanning-tree portfast bpdu-guard";
            } // END of bpduguardEnable definition.

            leaf errdisableTimeoutEnable  {
                mandatory false;                
                type  cml_data_types:CML_BOOL_T;  
                default false;
                config true;
                description "bridge spanning-tree errdisable-timeout";
            } // END of errdisableTimeoutEnable definition.

            leaf errdisableTimeoutInterval  {
                mandatory false;                
                type  cml_data_types:CML_INT32_T {
                     range "10..1000000";
                }
                default "300";
                config true;
                description "bridge spanning-tree errdisable-timeout interval";
            } // END of errdisableTimeoutInterval definition.

            leaf revisionLevel  {
                mandatory false;                
                type  cml_data_types:CML_UINT16_T {
                     range "0..65535";
                }
                config true;
                description "bridge revision";
            } // END of revisionLevel definition.

            leaf maxHops  {
                mandatory false;                
                type  cml_data_types:CML_INT32_T {
                     range "1..40";
                }
                default "20";
                config true;
                description "bridge max-hops";
            } // END of maxHops definition.

            leaf regionName  {
                mandatory false;                
                type  cml_data_types:CML_STRING_T;  
                default "Default";
                config true;
                description "bridge region";
            } // END of regionName definition.

            leaf bpduFilter  {
                mandatory false;                
                type  cml_data_types:CML_BOOL_T;  
                default false;
                config true;
            } // END of bpduFilter definition.

            leaf debug  {
                mandatory false;                
                type  cml_data_types:CML_UINT32_T;  
                config true;
            } // END of debug definition.

            leaf debugStatus  {
                mandatory false;                
                type  cml_data_types:CML_INT32_T;  
                config true;
            } // END of debugStatus definition.

            leaf adminCisco  {
                mandatory false;                
                type  cml_data_types:CML_ENABLE_DISABLE_T;  
                default "disable";
                config true;
                description "bridge cisco-interoperability";
            } // END of adminCisco definition.

            leaf pathCostMethod  {
                mandatory false;                
                type  cml_data_types:CML_PATHCOST_METHOD_T;  
                default "default";
                config true;
            } // END of pathCostMethod definition.

            leaf forceVersion  {
                mandatory false;                
                type  cml_data_types:CML_INT32_T {
                     range "0..4";
                }
                default "0";
                config true;
                description "bridge spanning-tree force-version";
            } // END of forceVersion definition.

            leaf vId  {
                mandatory false;                
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of vId definition.

            leaf svId  {
                mandatory false;                
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of svId definition.

            leaf bridgePort  {
                mandatory false;                
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of bridgePort definition.

            leaf cistbridgePriority  {
                mandatory false;                
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of cistbridgePriority definition.

            leaf topologyChange  {
                mandatory false;                
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of topologyChange definition.

            leaf externalrootPathcost  {
                mandatory false;                
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of externalrootPathcost definition.

            leaf bridgeEnabled  {
                mandatory false;                
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of bridgeEnabled definition.

            leaf topologychangeDetected  {
                mandatory false;                
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of topologychangeDetected definition.

            leaf cistmstpBridge  {
                mandatory false;                
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of cistmstpBridge definition.

            leaf cistRootPort  {
                mandatory false;                
                type  cml_data_types:CML_UINT32_T;  
                config false;
            } // END of cistRootPort definition.

            leaf cistdesignatedRoot  {
                mandatory false;                
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of cistdesignatedRoot definition.

            leaf cistBridgeid  {
                mandatory false;                
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of cistBridgeid definition.

            leaf totalnumberTopologychange  {
                mandatory false;                
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of totalnumberTopologychange definition.

            leaf cistregisteredRoot  {
                mandatory false;                
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of cistregisteredRoot definition.

            leaf maxAgeCount  {
                mandatory false;                
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of maxAgeCount definition.

            leaf bridgeHelloTime  {
                mandatory false;                
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of bridgeHelloTime definition.

            leaf bridgeForwardDelay  {
                mandatory false;                
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of bridgeForwardDelay definition.

            leaf bridgeTopologyChange  {
                mandatory false;                
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of bridgeTopologyChange definition.

            leaf topologyChangeCount  {
                mandatory false;                
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of topologyChangeCount definition.

            leaf topologyChangeLastRecv  {
                mandatory false;                
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of topologyChangeLastRecv definition.

            leaf addressFlag  {
                mandatory false;                
                type  cml_data_types:CML_BOOL_T;  
                config true;
            } // END of addressFlag definition.

            leaf bridgeMaxAge  {
                mandatory false;                
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of bridgeMaxAge definition.

            leaf lasttimeTopologychange  {
                mandatory false;                
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of lasttimeTopologychange definition.

            leaf configFormat  {
                mandatory false;                
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of configFormat definition.

            leaf configName  {
                mandatory false;                
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of configName definition.

            leaf configRevision  {
                mandatory false;                
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of configRevision definition.

            leaf configDigest  {
                mandatory false;                
                type  cml_data_types:CML_STRING_T;  
                config false;
            } // END of configDigest definition.

            leaf brType  {
                mandatory false;                
                type  cml_data_types:CML_BRIDGE_TYPE_T;  
                config true;
            } // END of brType definition.

            leaf cistrootportIfindex  {
                mandatory false;                
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of cistrootportIfindex definition.

            leaf forwarddelayTimer  {
                mandatory false;                
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of forwarddelayTimer definition.

            leaf messageageTimer  {
                mandatory false;                
                type  cml_data_types:CML_INT32_T;  
                config false;
            } // END of messageageTimer definition.


            list interface {
                 

                description
                    " Group of bridge attribute having interface property";

                config true;
                key "ifName";

                
                leaf ifName  {
                    mandatory true;                    
                    type  leafref {
                        path  "/vr/interface/ifName";
                    }
                } // END of ifName definition.

                leaf spanningTreeDisable  {
                    mandatory true;                    
                    type  cml_data_types:CML_SPANNINGTREE_ENABLE_DISABLE_T;  
                    config true;
                    description "bridge-group spanning-tree";
                } // END of spanningTreeDisable definition.

                leaf p2pMac  {
                    mandatory false;                    
                    type  cml_data_types:CML_LINK_TYPE_T;  
                    default "point-to-point";
                    config true;
                    description "spanning-tree link-type";
                } // END of p2pMac definition.

                leaf portPriority  {
                    mandatory false;                    
                    type  cml_data_types:CML_INT16_T {
                         range "0..240";
                    }
                    default "128";
                    config true;
                    description "bridge-group priority";
                } // END of portPriority definition.

                leaf portedgeEnable  {
                    mandatory false;                    
                    type  cml_data_types:CML_PORTEDGE_T;  
                    default "portfast";
                    config true;
                    description "spanning-tree edgeport";
                } // END of portedgeEnable definition.

                leaf restrictedDomainRole  {
                    mandatory false;                    
                    type  cml_data_types:CML_BOOL_T;  
                    default false;
                    config true;
                    description "spanning-tree restricted-domain-role";
                } // END of restrictedDomainRole definition.

                leaf autoEdge  {
                    mandatory false;                    
                    type  cml_data_types:CML_BOOL_T;  
                    default false;
                    config true;
                    description "spanning-tree autoedge";
                } // END of autoEdge definition.

                leaf adminBpduguard  {
                    mandatory false;                    
                    type  cml_data_types:CML_BPDU_T;  
                    default "default";
                    config true;
                } // END of adminBpduguard definition.

                leaf portHelloTime  {
                    mandatory false;                    
                    type  cml_data_types:CML_INT32_T {
                         range "1..10";
                    }
                    default "2";
                    config true;
                } // END of portHelloTime definition.

                leaf pathCost  {
                    mandatory false;                    
                    type  cml_data_types:CML_UINT32_T {
                         range "1..200000000";
                    }
                    config true;
                    description "bridge-group pathcost";
                } // END of pathCost definition.

                leaf restrictedRole  {
                    mandatory false;                    
                    type  cml_data_types:CML_BOOL_T;  
                    default false;
                    config true;
                    description "spanning-tree restricted-role";
                } // END of restrictedRole definition.

                leaf restrictedTCN  {
                    mandatory false;                    
                    type  cml_data_types:CML_BOOL_T;  
                    default false;
                    config true;
                    description "spanning-tree restricted-tcn";
                } // END of restrictedTCN definition.

                leaf adminRootGuard  {
                    mandatory false;                    
                    type  cml_data_types:CML_UINT8_T;  
                    default "1";
                    config true;
                    description "spanning-tree guard root";
                } // END of adminRootGuard definition.

                leaf adminBpdufilter  {
                    mandatory false;                    
                    type  cml_data_types:CML_BPDU_T;  
                    default "default";
                    config true;
                    description "bridge spanning-tree portfast bpdu-filter";
                } // END of adminBpdufilter definition.

                leaf enableBpduRx  {
                    mandatory false;                    
                    type  cml_data_types:CML_INT32_T;  
                    default "0";
                    config true;
                } // END of enableBpduRx definition.

                leaf overMacType  {
                    mandatory false;                    
                    type  cml_data_types:CML_INT32_T;  
                    config true;
                } // END of overMacType definition.

                leaf priorityOverWrite  {
                    mandatory false;                    
                    type  cml_data_types:CML_UINT8_T;  
                    config true;
                } // END of priorityOverWrite definition.

                leaf cistbridgePriority  {
                    mandatory false;                    
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of cistbridgePriority definition.

                leaf topologyChange  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of topologyChange definition.

                leaf externalrootPathcost  {
                    mandatory false;                    
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of externalrootPathcost definition.

                leaf bridgeEnabled  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of bridgeEnabled definition.

                leaf cistmstpBridge  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of cistmstpBridge definition.

                leaf cistdesignatedRoot  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of cistdesignatedRoot definition.

                leaf cistBridgeid  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of cistBridgeid definition.

                leaf totalnumberTopologychange  {
                    mandatory false;                    
                    type  cml_data_types:CML_INT32_T;  
                    config false;
                } // END of totalnumberTopologychange definition.

                leaf cistregisteredRoot  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of cistregisteredRoot definition.

                leaf maxAgeCount  {
                    mandatory false;                    
                    type  cml_data_types:CML_INT32_T;  
                    config false;
                } // END of maxAgeCount definition.

                leaf bridgeHelloTime  {
                    mandatory false;                    
                    type  cml_data_types:CML_INT32_T;  
                    config false;
                } // END of bridgeHelloTime definition.

                leaf bridgeForwardDelay  {
                    mandatory false;                    
                    type  cml_data_types:CML_INT32_T;  
                    config false;
                } // END of bridgeForwardDelay definition.

                leaf bridgeTopologyChange  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of bridgeTopologyChange definition.

                leaf topologyChangeCount  {
                    mandatory false;                    
                    type  cml_data_types:CML_INT32_T;  
                    config false;
                } // END of topologyChangeCount definition.

                leaf topologyChangeLastRecv  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of topologyChangeLastRecv definition.

                leaf portName  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of portName definition.

                leaf portNumber  {
                    mandatory false;                    
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of portNumber definition.

                leaf portIfindex  {
                    mandatory false;                    
                    type  cml_data_types:CML_INT32_T;  
                    config false;
                } // END of portIfindex definition.

                leaf cistPortid  {
                    mandatory false;                    
                    type  cml_data_types:CML_UINT16_T;  
                    config false;
                } // END of cistPortid definition.

                leaf mstipathCost  {
                    mandatory false;                    
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of mstipathCost definition.

                leaf designatedPortid  {
                    mandatory false;                    
                    type  cml_data_types:CML_UINT16_T;  
                    config false;
                } // END of designatedPortid definition.

                leaf cistpathCost  {
                    mandatory false;                    
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of cistpathCost definition.

                leaf portdesignatedCost  {
                    mandatory false;                    
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of portdesignatedCost definition.

                leaf cistDesignatedportId  {
                    mandatory false;                    
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of cistDesignatedportId definition.

                leaf cistPortState  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of cistPortState definition.

                leaf cistPriority  {
                    mandatory false;                    
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of cistPriority definition.

                leaf mstiInstanceRoot  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of mstiInstanceRoot definition.

                leaf messageAge  {
                    mandatory false;                    
                    type  cml_data_types:CML_INT32_T;  
                    config false;
                } // END of messageAge definition.

                leaf maxAgePort  {
                    mandatory false;                    
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of maxAgePort definition.

                leaf cisthelloTime  {
                    mandatory false;                    
                    type  cml_data_types:CML_INT32_T;  
                    config false;
                } // END of cisthelloTime definition.

                leaf helloTimePort  {
                    mandatory false;                    
                    type  cml_data_types:CML_INT32_T;  
                    config false;
                } // END of helloTimePort definition.

                leaf cistforwardDelay  {
                    mandatory false;                    
                    type  cml_data_types:CML_INT32_T;  
                    config false;
                } // END of cistforwardDelay definition.

                leaf topologyChangeTimer  {
                    mandatory false;                    
                    type  cml_data_types:CML_INT32_T;  
                    config false;
                } // END of topologyChangeTimer definition.

                leaf cistforwardTransition  {
                    mandatory false;                    
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of cistforwardTransition definition.

                leaf cistPortFast  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of cistPortFast definition.

                leaf bpduGuardState  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of bpduGuardState definition.

                leaf operBpduGuardState  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of operBpduGuardState definition.

                leaf bpduFilterState  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of bpduFilterState definition.

                leaf operBpduFilterState  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of operBpduFilterState definition.

                leaf rootGuardConfigState  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of rootGuardConfigState definition.

                leaf rootGuardState  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of rootGuardState definition.

                leaf cistPortrole  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of cistPortrole definition.

                leaf portType  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of portType definition.

                leaf portRefCount  {
                    mandatory false;                    
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of portRefCount definition.

                leaf version  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of version definition.

                leaf portRecieved  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of portRecieved definition.

                leaf portSend  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of portSend definition.

                leaf portFastCfg  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of portFastCfg definition.

                leaf portFastState  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of portFastState definition.

                leaf pToPstate  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of pToPstate definition.

                leaf pToPCurrentstate  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of pToPCurrentstate definition.

                leaf autoEdgePCfg  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of autoEdgePCfg definition.

                leaf autoEdgetstate  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of autoEdgetstate definition.

                leaf bridgeDesignatedRoot  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of bridgeDesignatedRoot definition.

                leaf bridgeDesignated  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of bridgeDesignated definition.

                leaf nextMsg  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of nextMsg definition.

                leaf mstiRoot  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of mstiRoot definition.

                leaf designatedBridge  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of designatedBridge definition.

                leaf helloTimer  {
                    mandatory false;                    
                    type  cml_data_types:CML_INT32_T;  
                    config false;
                } // END of helloTimer definition.

                leaf hwAddr  {
                    mandatory false;                    
                    type  cml_data_types:CML_STRING_T;  
                    config false;
                } // END of hwAddr definition.

                leaf forwardState  {
                    mandatory false;                    
                    type  cml_data_types:CML_UINT32_T;  
                    config false;
                } // END of forwardState definition.


                list mstpInterface {
                     

                    description
                        "runtime mstp interface instance info";

                    config false;
                    key "instanceId";

                    
                    leaf instanceId  {
                        mandatory true;                        
                        type  cml_data_types:CML_INT32_T {
                             range "1..63";
                        }
                        config false;
                    } // END of instanceId definition.

                    leaf cistPortrole  {
                        mandatory false;                        
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of cistPortrole definition.

                    leaf portName  {
                        mandatory false;                        
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of portName definition.

                    leaf portNumber  {
                        mandatory false;                        
                        type  cml_data_types:CML_UINT32_T;  
                        config false;
                    } // END of portNumber definition.

                    leaf cistpathCost  {
                        mandatory false;                        
                        type  cml_data_types:CML_UINT32_T;  
                        config false;
                    } // END of cistpathCost definition.

                    leaf cistPriority  {
                        mandatory false;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of cistPriority definition.

                    leaf cisthelloTime  {
                        mandatory false;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of cisthelloTime definition.

                    leaf cistforwardDelay  {
                        mandatory false;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of cistforwardDelay definition.

                    leaf portspanningTree  {
                        mandatory false;                        
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of portspanningTree definition.

                    leaf portconfbpduSent  {
                        mandatory false;                        
                        type  cml_data_types:CML_UINT32_T;  
                        config false;
                    } // END of portconfbpduSent definition.

                    leaf configPending  {
                        mandatory false;                        
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of configPending definition.

                    leaf porttopChangeack  {
                        mandatory false;                        
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of porttopChangeack definition.

                    leaf portconfbpduRecieved  {
                        mandatory false;                        
                        type  cml_data_types:CML_UINT32_T;  
                        config false;
                    } // END of portconfbpduRecieved definition.

                    leaf porttcnbpduSent  {
                        mandatory false;                        
                        type  cml_data_types:CML_UINT32_T;  
                        config false;
                    } // END of porttcnbpduSent definition.

                    leaf porttcnbpduRecieved  {
                        mandatory false;                        
                        type  cml_data_types:CML_UINT32_T;  
                        config false;
                    } // END of porttcnbpduRecieved definition.

                    leaf portForwardTransition  {
                        mandatory false;                        
                        type  cml_data_types:CML_UINT32_T;  
                        config false;
                    } // END of portForwardTransition definition.

                    leaf helloTimerstate  {
                        mandatory false;                        
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of helloTimerstate definition.

                    leaf helloTimervalue  {
                        mandatory false;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of helloTimervalue definition.

                    leaf forwardTimerstate  {
                        mandatory false;                        
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of forwardTimerstate definition.

                    leaf forwardTimervalue  {
                        mandatory false;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of forwardTimervalue definition.

                    leaf messageTimerstate  {
                        mandatory false;                        
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of messageTimerstate definition.

                    leaf topologychangeTimerstate  {
                        mandatory false;                        
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of topologychangeTimerstate definition.

                    leaf topologychangeTimervalue  {
                        mandatory false;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of topologychangeTimervalue definition.

                    leaf holdTimerstate  {
                        mandatory false;                        
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of holdTimerstate definition.

                    leaf holdTimervalue  {
                        mandatory false;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of holdTimervalue definition.

                    leaf messageageExpiry  {
                        mandatory false;                        
                        type  cml_data_types:CML_UINT32_T;  
                        config false;
                    } // END of messageageExpiry definition.

                    leaf similarbpduCount  {
                        mandatory false;                        
                        type  cml_data_types:CML_UINT32_T;  
                        config false;
                    } // END of similarbpduCount definition.

                    leaf sourcemacCount  {
                        mandatory false;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of sourcemacCount definition.

                    leaf totalsourcemacRecieved  {
                        mandatory false;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of totalsourcemacRecieved definition.

                    leaf porttopologyChangetime  {
                        mandatory false;                        
                        type  cml_data_types:CML_UINT32_T;  
                        config false;
                    } // END of porttopologyChangetime definition.

                    leaf designatedrootPathcost  {
                        mandatory false;                        
                        type  cml_data_types:CML_UINT32_T;  
                        config false;
                    } // END of designatedrootPathcost definition.

                    leaf designatedInsPortid  {
                        mandatory false;                        
                        type  cml_data_types:CML_UINT16_T;  
                        config false;
                    } // END of designatedInsPortid definition.

                    leaf mstiInstancedesignatedRoot  {
                        mandatory false;                        
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of mstiInstancedesignatedRoot definition.

                    leaf mstiInstanceBridgeId  {
                        mandatory false;                        
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of mstiInstanceBridgeId definition.

                    leaf stpMultiCastAddr  {
                        mandatory false;                        
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of stpMultiCastAddr definition.

                    leaf instanceBridgeMacAddress  {
                        mandatory false;                        
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of instanceBridgeMacAddress definition.

                    leaf instancetopologyChange  {
                        mandatory true;                        
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of instancetopologyChange definition.

                    leaf instanceTopologychangedetected  {
                        mandatory true;                        
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of instanceTopologychangedetected definition.

                    leaf instlastTopologychangerecievedfrom  {
                        mandatory true;                        
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of instlastTopologychangerecievedfrom definition.

                    leaf mstirootportIfindex  {
                        mandatory false;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of mstirootportIfindex definition.

                    leaf mstiPriority  {
                        mandatory false;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of mstiPriority definition.

                    leaf instancemaxAge  {
                        mandatory false;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of instancemaxAge definition.

                    leaf mstibridgePriority  {
                        mandatory false;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of mstibridgePriority definition.

                    leaf internalrootPathcost  {
                        mandatory false;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of internalrootPathcost definition.

                    leaf messageAgeIns  {
                        mandatory false;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of messageAgeIns definition.

                    leaf instanceportconfbpduSent  {
                        mandatory true;                        
                        type  cml_data_types:CML_UINT32_T;  
                        config false;
                    } // END of instanceportconfbpduSent definition.

                    leaf instanceportconfbpduRecieved  {
                        mandatory true;                        
                        type  cml_data_types:CML_UINT32_T;  
                        config false;
                    } // END of instanceportconfbpduRecieved definition.

                    leaf instanceporttcnbpduSent  {
                        mandatory true;                        
                        type  cml_data_types:CML_UINT32_T;  
                        config false;
                    } // END of instanceporttcnbpduSent definition.

                    leaf instanceporttcnbpduRecieved  {
                        mandatory true;                        
                        type  cml_data_types:CML_UINT32_T;  
                        config false;
                    } // END of instanceporttcnbpduRecieved definition.

                    leaf cistforwardTransition  {
                        mandatory true;                        
                        type  cml_data_types:CML_UINT32_T;  
                        config false;
                    } // END of cistforwardTransition definition.

                    leaf instancetopologychangeInitiator  {
                        mandatory true;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of instancetopologychangeInitiator definition.

                    leaf topologychangeInitiator  {
                        mandatory true;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of topologychangeInitiator definition.

                    leaf lasttopologychangeRecievedfrom  {
                        mandatory true;                        
                        type  cml_data_types:CML_STRING_T;  
                        config false;
                    } // END of lasttopologychangeRecievedfrom definition.

                    leaf configFormat  {
                        mandatory true;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of configFormat definition.

                    leaf messageageTimervalue  {
                        mandatory false;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of messageageTimervalue definition.

                    leaf instanceMstiporttopologyChangetime  {
                        mandatory false;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of instanceMstiporttopologyChangetime definition.

                    leaf instancePortNextState  {
                        mandatory false;                        
                        type  cml_data_types:CML_UINT32_T;  
                        config false;
                    } // END of instancePortNextState definition.

                    leaf instanceTopologuChangeCount  {
                        mandatory false;                        
                        type  cml_data_types:CML_INT32_T;  
                        config false;
                    } // END of instanceTopologuChangeCount definition.

                    leaf mstipathCost  {
                        mandatory false;                        
                        type  cml_data_types:CML_UINT32_T;  
                        config false;
                    } // END of mstipathCost definition.

                } // End of mstpInterface-list
            } // End of interface-list
            uses vlan-grouping;
            uses mstp-grouping;
        } // End of bridge-list
    } // END of bridge-grouping definition.


}