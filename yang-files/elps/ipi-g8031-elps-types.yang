/*
* Copyright (C) 2019 IP Infusion, Inc.
*  All Rights Reserved.
*
*** Auto generated by zebmdc

* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.

* File name : ipi-g8031-elps-types.yang
*
*/

module ipi-g8031-elps-types {

    yang-version 1.1;

    namespace   "http://www.ipinfusion.com/yang/ocnos/ipi-g8031-elps-types";

    prefix "ipi-g8031-elps-types";

    organization
        "IP Infusion Inc.";

    contact
        "Address: 3965 Freedom Circle, Suite 200, Santa Clara, CA 95054
         Phone: +1 408-400-1900
         E-mail: support@ipinfusion.com
         Web: http://www.ip    infusion.com/";

    description
        "YANG version of the ipi-g8031-elps-types";


    revision "2021-05-14" {
        description "Initial Version";
        reference " 0.1.0.";
    }



    typedef  g8031_elps_protection_type_t {
        type enumeration {
            enum one-plus-one-bidirectional {
                value 1;
                description "1+1 bidirectional mode";
            }
            enum one-plus-one-unidirectional {
                value 2;
                description "1+1 unidirectional mode";
            }
            enum one-and-one-bidirectional {
                value 3;
                description "1:1 bidirectional mode";
            }
        }
        description "type definition for G8031_ELPS_PROTECTION_TYPE_T";
    }

    typedef  g8031_elps_no_req_options_t {
        type enumeration {
            enum null-null {
                value 1;
                description "requested/bridged null/null";
            }
            enum normal-normal {
                value 2;
                description "requested/bridged normal/normal";
            }
            enum null-normal {
                value 3;
                description "requested/bridged null/normal";
            }
        }
        description "type definition for G8031_ELPS_NO_REQ_OPTIONS_T";
    }

    typedef  g8031_elps_near_end_signal_type_t {
        type enumeration {
            enum sf {
                value 18;
                description "Signal Failure";
            }
            enum sf-recovers {
                value 19;
                description "Working recovers from SF";
            }
            enum sf-p {
                value 20;
                description "Signal failure on Protection";
            }
            enum sfp-recovers {
                value 21;
                description "Protection recovers from SF";
            }
        }
        description "type definition for G8031_ELPS_NEAR_END_SIGNAL_TYPE_T";
    }

    typedef  g8031_elps_timers_config_t {
        type enumeration {
            enum wait-to-restore {
                value 1;
                description "Wait to Restore";
            }
            enum hold-off {
                value 2;
                description "Hold off timer";
            }
        }
        description "type definition for G8031_ELPS_TIMERS_CONFIG_T";
    }

}